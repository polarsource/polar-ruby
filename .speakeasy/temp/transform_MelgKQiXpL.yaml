openapi: "3.1.0"
info:
  summary: "Polar HTTP and Webhooks API"
  title: "Polar API"
  description: "Read the docs at https://docs.polar.sh/api"
  version: "0.1.0"
servers:
  - url: "https://api.polar.sh"
    description: "Production environment"
    x-speakeasy-server-id: "production"
  - url: "https://sandbox-api.polar.sh"
    description: "Sandbox environment"
    x-speakeasy-server-id: "sandbox"
paths:
  "/v1/external_organizations/":
    get:
      tags:
        - "external_organizations"
        - "documented"
        - "issue_funding"
      summary: "List External Organizations"
      description: "List external organizations."
      operationId: "external_organizations:list"
      parameters:
        - name: "platform"
          in: "query"
          description: "Filter by platform."
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/Platforms"}
              - type: "array"
                items: {"$ref": "#/components/schemas/Platforms"}
              - type: "null"
            title: "Platform Filter"
            description: "Filter by platform."
        - name: "name"
          in: "query"
          description: "Filter by name."
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "array"
                items:
                  type: "string"
              - type: "null"
            title: "RepositoryName Filter"
            description: "Filter by name."
        - name: "organization_id"
          in: "query"
          description: "Filter by organization ID."
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "uuid4"
                description: "The organization ID."
                x-polar-selector-widget: {"resourceRoot": "/v1/organizations", "resourceName": "Organization", "displayProperty": "name"}
              - type: "array"
                items:
                  type: "string"
                  format: "uuid4"
                  description: "The organization ID."
                  x-polar-selector-widget: {"resourceRoot": "/v1/organizations", "resourceName": "Organization", "displayProperty": "name"}
              - type: "null"
            title: "OrganizationID Filter"
            description: "Filter by organization ID."
        - name: "page"
          in: "query"
          description: "Page number, defaults to 1."
          required: false
          schema:
            exclusiveMinimum: 0
            type: "integer"
            title: "Page"
            description: "Page number, defaults to 1."
            default: 1
        - name: "limit"
          in: "query"
          description: "Size of a page, defaults to 10. Maximum is 100."
          required: false
          schema:
            exclusiveMinimum: 0
            type: "integer"
            title: "Limit"
            description: "Size of a page, defaults to 10. Maximum is 100."
            default: 10
        - name: "sorting"
          in: "query"
          description: "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
          required: false
          schema:
            anyOf:
              - type: "array"
                items: {"$ref": "#/components/schemas/ExternalOrganizationSortProperty"}
              - type: "null"
            title: "Sorting"
            description: "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
            default: ["-created_at"]
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ListResource_ExternalOrganization_"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - external_organizations:read
        - pat: []
      x-polar-allowed-subjects: ["Anonymous", "Organization", "User"]
      x-speakeasy-pagination: {"type": "offsetLimit", "inputs": [{"name": "page", "in": "parameters", "type": "page"}, {"name": "limit", "in": "parameters", "type": "limit"}], "outputs": {"results": "$.items", "numPages": "$.pagination.max_page"}}
      x-speakeasy-group: "external_organizations"
      x-speakeasy-name-override: "list"
  "/v1/repositories/":
    get:
      tags:
        - "repositories"
        - "documented"
        - "issue_funding"
      summary: "List Repositories"
      description: "List repositories."
      operationId: "repositories:list"
      parameters:
        - name: "platform"
          in: "query"
          description: "Filter by platform."
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/Platforms"}
              - type: "array"
                items: {"$ref": "#/components/schemas/Platforms"}
              - type: "null"
            title: "Platform Filter"
            description: "Filter by platform."
        - name: "name"
          in: "query"
          description: "Filter by name."
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "array"
                items:
                  type: "string"
              - type: "null"
            title: "RepositoryName Filter"
            description: "Filter by name."
        - name: "external_organization_name"
          in: "query"
          description: "Filter by external organization name."
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "array"
                items:
                  type: "string"
              - type: "null"
            title: "ExternalOrganizationName Filter"
            description: "Filter by external organization name."
        - name: "is_private"
          in: "query"
          description: "Filter by private status."
          required: false
          schema:
            anyOf:
              - type: "boolean"
              - type: "null"
            title: "Is Private"
            description: "Filter by private status."
        - name: "organization_id"
          in: "query"
          description: "Filter by organization ID."
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "uuid4"
                description: "The organization ID."
                x-polar-selector-widget: {"resourceRoot": "/v1/organizations", "resourceName": "Organization", "displayProperty": "name"}
              - type: "array"
                items:
                  type: "string"
                  format: "uuid4"
                  description: "The organization ID."
                  x-polar-selector-widget: {"resourceRoot": "/v1/organizations", "resourceName": "Organization", "displayProperty": "name"}
              - type: "null"
            title: "OrganizationID Filter"
            description: "Filter by organization ID."
        - name: "page"
          in: "query"
          description: "Page number, defaults to 1."
          required: false
          schema:
            exclusiveMinimum: 0
            type: "integer"
            title: "Page"
            description: "Page number, defaults to 1."
            default: 1
        - name: "limit"
          in: "query"
          description: "Size of a page, defaults to 10. Maximum is 100."
          required: false
          schema:
            exclusiveMinimum: 0
            type: "integer"
            title: "Limit"
            description: "Size of a page, defaults to 10. Maximum is 100."
            default: 10
        - name: "sorting"
          in: "query"
          description: "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
          required: false
          schema:
            anyOf:
              - type: "array"
                items: {"$ref": "#/components/schemas/RepositorySortProperty"}
              - type: "null"
            title: "Sorting"
            description: "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
            default: ["-created_at"]
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ListResource_Repository_"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - repositories:read
            - repositories:write
        - pat: []
      x-polar-allowed-subjects: ["Anonymous", "Organization", "User"]
      x-speakeasy-pagination: {"type": "offsetLimit", "inputs": [{"name": "page", "in": "parameters", "type": "page"}, {"name": "limit", "in": "parameters", "type": "limit"}], "outputs": {"results": "$.items", "numPages": "$.pagination.max_page"}}
      x-speakeasy-group: "repositories"
      x-speakeasy-name-override: "list"
  "/v1/repositories/{id}":
    get:
      tags:
        - "repositories"
        - "documented"
        - "issue_funding"
      summary: "Get Repository"
      description: "Get a repository by ID."
      operationId: "repositories:get"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Id"
            format: "uuid4"
            description: "The repository ID."
            x-polar-selector-widget: {"resourceRoot": "/v1/repositories", "resourceName": "Repository", "displayProperty": "name"}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Repository"}
        "404":
          description: "Repository not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - repositories:read
            - repositories:write
        - pat: []
      x-polar-allowed-subjects: ["Anonymous", "Organization", "User"]
      x-speakeasy-group: "repositories"
      x-speakeasy-name-override: "get"
    patch:
      tags:
        - "repositories"
        - "documented"
        - "issue_funding"
      summary: "Update Repository"
      description: "Update a repository."
      operationId: "repositories:update"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Id"
            format: "uuid4"
            description: "The repository ID."
            x-polar-selector-widget: {"resourceRoot": "/v1/repositories", "resourceName": "Repository", "displayProperty": "name"}
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/RepositoryUpdate"}
        required: true
      responses:
        "200":
          description: "Repository updated."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Repository"}
        "403":
          description: "You don't have the permission to update this repository."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/NotPermitted"}
        "404":
          description: "Repository not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - repositories:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-group: "repositories"
      x-speakeasy-name-override: "update"
  "/v1/organizations/":
    get:
      tags:
        - "organizations"
        - "documented"
        - "featured"
      summary: "List Organizations"
      description: "List organizations."
      operationId: "organizations:list"
      parameters:
        - name: "slug"
          in: "query"
          description: "Filter by slug."
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "Slug"
            description: "Filter by slug."
        - name: "page"
          in: "query"
          description: "Page number, defaults to 1."
          required: false
          schema:
            exclusiveMinimum: 0
            type: "integer"
            title: "Page"
            description: "Page number, defaults to 1."
            default: 1
        - name: "limit"
          in: "query"
          description: "Size of a page, defaults to 10. Maximum is 100."
          required: false
          schema:
            exclusiveMinimum: 0
            type: "integer"
            title: "Limit"
            description: "Size of a page, defaults to 10. Maximum is 100."
            default: 10
        - name: "sorting"
          in: "query"
          description: "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
          required: false
          schema:
            anyOf:
              - type: "array"
                items: {"$ref": "#/components/schemas/OrganizationSortProperty"}
              - type: "null"
            title: "Sorting"
            description: "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
            default: ["created_at"]
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ListResource_Organization_"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - organizations:read
            - organizations:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-pagination: {"type": "offsetLimit", "inputs": [{"name": "page", "in": "parameters", "type": "page"}, {"name": "limit", "in": "parameters", "type": "limit"}], "outputs": {"results": "$.items", "numPages": "$.pagination.max_page"}}
      x-speakeasy-group: "organizations"
      x-speakeasy-name-override: "list"
    post:
      tags:
        - "organizations"
        - "documented"
        - "featured"
      summary: "Create Organization"
      description: "Create an organization."
      operationId: "organizations:create"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/OrganizationCreate"}
        required: true
      responses:
        "201":
          description: "Organization created."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Organization"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - organizations:write
        - pat: []
      x-polar-allowed-subjects: ["User"]
      x-speakeasy-group: "organizations"
      x-speakeasy-name-override: "create"
  "/v1/organizations/{id}":
    get:
      tags:
        - "organizations"
        - "documented"
        - "featured"
      summary: "Get Organization"
      description: "Get an organization by ID."
      operationId: "organizations:get"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Id"
            format: "uuid4"
            description: "The organization ID."
            x-polar-selector-widget: {"resourceRoot": "/v1/organizations", "resourceName": "Organization", "displayProperty": "name"}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Organization"}
        "404":
          description: "Organization not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - organizations:read
            - organizations:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-group: "organizations"
      x-speakeasy-name-override: "get"
    patch:
      tags:
        - "organizations"
        - "documented"
        - "featured"
      summary: "Update Organization"
      description: "Update an organization."
      operationId: "organizations:update"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Id"
            format: "uuid4"
            description: "The organization ID."
            x-polar-selector-widget: {"resourceRoot": "/v1/organizations", "resourceName": "Organization", "displayProperty": "name"}
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/OrganizationUpdate"}
        required: true
      responses:
        "200":
          description: "Organization updated."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Organization"}
        "403":
          description: "You don't have the permission to update this organization."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/NotPermitted"}
        "404":
          description: "Organization not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - organizations:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-group: "organizations"
      x-speakeasy-name-override: "update"
  "/v1/subscriptions/":
    get:
      tags:
        - "subscriptions"
        - "documented"
      summary: "List Subscriptions"
      description: "List subscriptions."
      operationId: "subscriptions:list"
      parameters:
        - name: "organization_id"
          in: "query"
          description: "Filter by organization ID."
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "uuid4"
                description: "The organization ID."
                x-polar-selector-widget: {"resourceRoot": "/v1/organizations", "resourceName": "Organization", "displayProperty": "name"}
              - type: "array"
                items:
                  type: "string"
                  format: "uuid4"
                  description: "The organization ID."
                  x-polar-selector-widget: {"resourceRoot": "/v1/organizations", "resourceName": "Organization", "displayProperty": "name"}
              - type: "null"
            title: "OrganizationID Filter"
            description: "Filter by organization ID."
        - name: "product_id"
          in: "query"
          description: "Filter by product ID."
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "uuid4"
                description: "The product ID."
                x-polar-selector-widget: {"resourceRoot": "/v1/products", "resourceName": "Product", "displayProperty": "name"}
              - type: "array"
                items:
                  type: "string"
                  format: "uuid4"
                  description: "The product ID."
                  x-polar-selector-widget: {"resourceRoot": "/v1/products", "resourceName": "Product", "displayProperty": "name"}
              - type: "null"
            title: "ProductID Filter"
            description: "Filter by product ID."
        - name: "customer_id"
          in: "query"
          description: "Filter by customer ID."
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "uuid4"
              - type: "array"
                items:
                  type: "string"
                  format: "uuid4"
              - type: "null"
            title: "CustomerID Filter"
            description: "Filter by customer ID."
        - name: "discount_id"
          in: "query"
          description: "Filter by discount ID."
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "uuid4"
                description: "The product ID."
                x-polar-selector-widget: {"resourceRoot": "/v1/products", "resourceName": "Product", "displayProperty": "name"}
              - type: "array"
                items:
                  type: "string"
                  format: "uuid4"
                  description: "The product ID."
                  x-polar-selector-widget: {"resourceRoot": "/v1/products", "resourceName": "Product", "displayProperty": "name"}
              - type: "null"
            title: "DiscountID Filter"
            description: "Filter by discount ID."
        - name: "active"
          in: "query"
          description: "Filter by active or inactive subscription."
          required: false
          schema:
            anyOf:
              - type: "boolean"
              - type: "null"
            title: "Active"
            description: "Filter by active or inactive subscription."
        - name: "page"
          in: "query"
          description: "Page number, defaults to 1."
          required: false
          schema:
            exclusiveMinimum: 0
            type: "integer"
            title: "Page"
            description: "Page number, defaults to 1."
            default: 1
        - name: "limit"
          in: "query"
          description: "Size of a page, defaults to 10. Maximum is 100."
          required: false
          schema:
            exclusiveMinimum: 0
            type: "integer"
            title: "Limit"
            description: "Size of a page, defaults to 10. Maximum is 100."
            default: 10
        - name: "sorting"
          in: "query"
          description: "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
          required: false
          schema:
            anyOf:
              - type: "array"
                items: {"$ref": "#/components/schemas/SubscriptionSortProperty"}
              - type: "null"
            title: "Sorting"
            description: "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
            default: ["-started_at"]
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ListResource_Subscription_"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - subscriptions:read
            - subscriptions:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-pagination: {"type": "offsetLimit", "inputs": [{"name": "page", "in": "parameters", "type": "page"}, {"name": "limit", "in": "parameters", "type": "limit"}], "outputs": {"results": "$.items", "numPages": "$.pagination.max_page"}}
      x-speakeasy-group: "subscriptions"
      x-speakeasy-name-override: "list"
  "/v1/subscriptions/export":
    get:
      tags:
        - "subscriptions"
        - "documented"
      summary: "Export Subscriptions"
      description: "Export subscriptions as a CSV file."
      operationId: "subscriptions:export"
      parameters:
        - name: "organization_id"
          in: "query"
          description: "Filter by organization ID."
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "uuid4"
                description: "The organization ID."
                x-polar-selector-widget: {"resourceRoot": "/v1/organizations", "resourceName": "Organization", "displayProperty": "name"}
              - type: "array"
                items:
                  type: "string"
                  format: "uuid4"
                  description: "The organization ID."
                  x-polar-selector-widget: {"resourceRoot": "/v1/organizations", "resourceName": "Organization", "displayProperty": "name"}
              - type: "null"
            title: "Organization Id"
            description: "Filter by organization ID."
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - subscriptions:read
            - subscriptions:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-group: "subscriptions"
      x-speakeasy-name-override: "export"
  "/v1/advertisements/":
    get:
      tags:
        - "advertisements"
        - "documented"
      summary: "List Campaigns"
      description: "List active advertisement campaigns for a benefit."
      operationId: "advertisements:list"
      parameters:
        - name: "benefit_id"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Benefit Id"
            format: "uuid4"
            description: "The benefit ID."
            x-polar-selector-widget: {"resourceRoot": "/v1/benefits", "resourceName": "Benefit", "displayProperty": "description"}
        - name: "page"
          in: "query"
          description: "Page number, defaults to 1."
          required: false
          schema:
            exclusiveMinimum: 0
            type: "integer"
            title: "Page"
            description: "Page number, defaults to 1."
            default: 1
        - name: "limit"
          in: "query"
          description: "Size of a page, defaults to 10. Maximum is 100."
          required: false
          schema:
            exclusiveMinimum: 0
            type: "integer"
            title: "Limit"
            description: "Size of a page, defaults to 10. Maximum is 100."
            default: 10
        - name: "sorting"
          in: "query"
          description: "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
          required: false
          schema:
            anyOf:
              - type: "array"
                items: {"$ref": "#/components/schemas/AdvertisementSortProperty"}
              - type: "null"
            title: "Sorting"
            description: "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
            default: ["granted_at"]
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/AdvertisementCampaignListResource"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      x-speakeasy-pagination: {"type": "offsetLimit", "inputs": [{"name": "page", "in": "parameters", "type": "page"}, {"name": "limit", "in": "parameters", "type": "limit"}], "outputs": {"results": "$.items", "numPages": "$.pagination.max_page"}}
      x-speakeasy-group: "advertisements"
      x-speakeasy-name-override: "list"
  "/v1/advertisements/{id}":
    get:
      tags:
        - "advertisements"
        - "documented"
      summary: "Get Campaign"
      description: "Get an advertisement campaign by ID."
      operationId: "advertisements:get"
      parameters:
        - name: "id"
          in: "path"
          description: "The advertisement campaign ID."
          required: true
          schema:
            type: "string"
            title: "Id"
            format: "uuid4"
            description: "The advertisement campaign ID."
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/AdvertisementCampaign"}
        "404":
          description: "Advertisement campaign not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      x-speakeasy-group: "advertisements"
      x-speakeasy-name-override: "get"
  "/v1/oauth2/":
    get:
      tags:
        - "oauth2"
        - "clients"
        - "documented"
      summary: "List Clients"
      description: "List OAuth2 clients."
      operationId: "oauth2:clients:list"
      parameters:
        - name: "page"
          in: "query"
          description: "Page number, defaults to 1."
          required: false
          schema:
            exclusiveMinimum: 0
            type: "integer"
            title: "Page"
            description: "Page number, defaults to 1."
            default: 1
        - name: "limit"
          in: "query"
          description: "Size of a page, defaults to 10. Maximum is 100."
          required: false
          schema:
            exclusiveMinimum: 0
            type: "integer"
            title: "Limit"
            description: "Size of a page, defaults to 10. Maximum is 100."
            default: 10
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ListResource_OAuth2Client_"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc: []
        - pat: []
      x-polar-allowed-subjects: ["User"]
      x-speakeasy-pagination: {"type": "offsetLimit", "inputs": [{"name": "page", "in": "parameters", "type": "page"}, {"name": "limit", "in": "parameters", "type": "limit"}], "outputs": {"results": "$.items", "numPages": "$.pagination.max_page"}}
      x-speakeasy-group: "oauth2.clients"
      x-speakeasy-name-override: "list"
  "/v1/oauth2/register":
    post:
      tags:
        - "oauth2"
        - "clients"
        - "documented"
      summary: "Create Client"
      description: "Create an OAuth2 client."
      operationId: "oauth2:clients:oauth2:create_client"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/OAuth2ClientConfiguration"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc: []
        - pat: []
      x-polar-allowed-subjects: ["User"]
      x-speakeasy-group: "oauth2.clients"
      x-speakeasy-name-override: "create"
  "/v1/oauth2/register/{client_id}":
    get:
      tags:
        - "oauth2"
        - "clients"
        - "documented"
      summary: "Get Client"
      description: "Get an OAuth2 client by Client ID."
      operationId: "oauth2:clients:oauth2:get_client"
      parameters:
        - name: "client_id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Client Id"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc: []
        - pat: []
      x-polar-allowed-subjects: ["Anonymous", "User"]
      x-speakeasy-group: "oauth2.clients"
      x-speakeasy-name-override: "get"
    put:
      tags:
        - "oauth2"
        - "clients"
        - "documented"
      summary: "Update Client"
      description: "Update an OAuth2 client."
      operationId: "oauth2:clients:oauth2:update_client"
      parameters:
        - name: "client_id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Client Id"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/OAuth2ClientConfigurationUpdate"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc: []
        - pat: []
      x-polar-allowed-subjects: ["Anonymous", "User"]
      x-speakeasy-group: "oauth2.clients"
      x-speakeasy-name-override: "update"
    delete:
      tags:
        - "oauth2"
        - "clients"
        - "documented"
      summary: "Delete Client"
      description: "Delete an OAuth2 client."
      operationId: "oauth2:clients:oauth2:delete_client"
      parameters:
        - name: "client_id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Client Id"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc: []
        - pat: []
      x-polar-allowed-subjects: ["Anonymous", "User"]
      x-speakeasy-group: "oauth2.clients"
      x-speakeasy-name-override: "delete"
  "/v1/oauth2/authorize":
    get:
      tags:
        - "oauth2"
        - "documented"
      summary: "Authorize"
      operationId: "oauth2:authorize"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema:
                oneOf:
                  - {"$ref": "#/components/schemas/AuthorizeResponseUser"}
                  - {"$ref": "#/components/schemas/AuthorizeResponseOrganization"}
                discriminator:
                  propertyName: "sub_type"
                  mapping:
                    "user": "#/components/schemas/AuthorizeResponseUser"
                    "organization": "#/components/schemas/AuthorizeResponseOrganization"
                title: "Response Oauth2:Authorize"
      security:
        - oidc: []
        - pat: []
      x-polar-allowed-subjects: ["Anonymous", "User"]
      x-speakeasy-group: "oauth2"
      x-speakeasy-name-override: "authorize"
  "/v1/oauth2/token":
    post:
      tags:
        - "oauth2"
        - "featured"
        - "documented"
      summary: "Request Token"
      description: "Request an access token using a valid grant."
      operationId: "oauth2:request_token"
      requestBody:
        content:
          "application/x-www-form-urlencoded":
            schema:
              oneOf:
                - {"$ref": "#/paths/~1v1~1oauth2~1token/post/x-components/AuthorizationCodeTokenRequest"}
                - {"$ref": "#/paths/~1v1~1oauth2~1token/post/x-components/RefreshTokenRequest"}
              discriminator:
                propertyName: "grant_type"
                mapping:
                  "authorization_code": "#/paths/~1v1~1oauth2~1token/post/x-components/AuthorizationCodeTokenRequest"
                  "refresh_token": "#/paths/~1v1~1oauth2~1token/post/x-components/RefreshTokenRequest"
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/TokenResponse"}
      x-components: {"AuthorizationCodeTokenRequest": {"properties": {"grant_type": {"const": "authorization_code", "enum": ["authorization_code"], "title": "Grant Type", "type": "string"}, "client_id": {"title": "Client Id", "type": "string"}, "client_secret": {"title": "Client Secret", "type": "string"}, "code": {"title": "Code", "type": "string"}, "redirect_uri": {"format": "uri", "maxLength": 2083, "minLength": 1, "title": "Redirect Uri", "type": "string"}}, "required": ["grant_type", "client_id", "client_secret", "code", "redirect_uri"], "title": "AuthorizationCodeTokenRequest", "type": "object"}, "RefreshTokenRequest": {"properties": {"grant_type": {"const": "refresh_token", "enum": ["refresh_token"], "title": "Grant Type", "type": "string"}, "client_id": {"title": "Client Id", "type": "string"}, "client_secret": {"title": "Client Secret", "type": "string"}, "refresh_token": {"title": "Refresh Token", "type": "string"}}, "required": ["grant_type", "client_id", "client_secret", "refresh_token"], "title": "RefreshTokenRequest", "type": "object"}}
      x-speakeasy-group: "oauth2"
      x-speakeasy-name-override: "token"
  "/v1/oauth2/revoke":
    post:
      tags:
        - "oauth2"
        - "featured"
        - "documented"
      summary: "Revoke Token"
      description: "Revoke an access token or a refresh token."
      operationId: "oauth2:revoke_token"
      requestBody:
        content:
          "application/x-www-form-urlencoded":
            schema:
              type: "object"
              properties:
                "token":
                  type: "string"
                  title: "Token"
                "token_type_hint":
                  anyOf:
                    - type: "string"
                      enum:
                        - "access_token"
                        - "refresh_token"
                    - type: "null"
                  title: "Token Type Hint"
                "client_id":
                  type: "string"
                  title: "Client Id"
                "client_secret":
                  type: "string"
                  title: "Client Secret"
              title: "RevokeTokenRequest"
              required:
                - "token"
                - "client_id"
                - "client_secret"
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/RevokeTokenResponse"}
      x-speakeasy-group: "oauth2"
      x-speakeasy-name-override: "revoke"
  "/v1/oauth2/introspect":
    post:
      tags:
        - "oauth2"
        - "featured"
        - "documented"
      summary: "Introspect Token"
      description: "Get information about an access token."
      operationId: "oauth2:introspect_token"
      requestBody:
        content:
          "application/x-www-form-urlencoded":
            schema:
              type: "object"
              properties:
                "token":
                  type: "string"
                  title: "Token"
                "token_type_hint":
                  anyOf:
                    - type: "string"
                      enum:
                        - "access_token"
                        - "refresh_token"
                    - type: "null"
                  title: "Token Type Hint"
                "client_id":
                  type: "string"
                  title: "Client Id"
                "client_secret":
                  type: "string"
                  title: "Client Secret"
              title: "IntrospectTokenRequest"
              required:
                - "token"
                - "client_id"
                - "client_secret"
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/IntrospectTokenResponse"}
      x-speakeasy-group: "oauth2"
      x-speakeasy-name-override: "introspect"
  "/v1/oauth2/userinfo":
    get:
      tags:
        - "oauth2"
        - "featured"
        - "documented"
      summary: "Get User Info"
      description: "Get information about the authenticated user."
      operationId: "oauth2:userinfo"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema:
                anyOf:
                  - {"$ref": "#/components/schemas/UserInfoUser"}
                  - {"$ref": "#/components/schemas/UserInfoOrganization"}
                title: "Response Oauth2:Userinfo"
      security:
        - oidc: []
      x-speakeasy-name-override: "userinfo"
      x-speakeasy-group: "oauth2"
  "/v1/benefits/":
    get:
      tags:
        - "benefits"
        - "documented"
      summary: "List Benefits"
      description: "List benefits."
      operationId: "benefits:list"
      parameters:
        - name: "organization_id"
          in: "query"
          description: "Filter by organization ID."
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "uuid4"
                description: "The organization ID."
                x-polar-selector-widget: {"resourceRoot": "/v1/organizations", "resourceName": "Organization", "displayProperty": "name"}
              - type: "array"
                items:
                  type: "string"
                  format: "uuid4"
                  description: "The organization ID."
                  x-polar-selector-widget: {"resourceRoot": "/v1/organizations", "resourceName": "Organization", "displayProperty": "name"}
              - type: "null"
            title: "OrganizationID Filter"
            description: "Filter by organization ID."
        - name: "type"
          in: "query"
          description: "Filter by benefit type."
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/BenefitType"}
              - type: "array"
                items: {"$ref": "#/components/schemas/BenefitType"}
              - type: "null"
            title: "BenefitType Filter"
            description: "Filter by benefit type."
        - name: "page"
          in: "query"
          description: "Page number, defaults to 1."
          required: false
          schema:
            exclusiveMinimum: 0
            type: "integer"
            title: "Page"
            description: "Page number, defaults to 1."
            default: 1
        - name: "limit"
          in: "query"
          description: "Size of a page, defaults to 10. Maximum is 100."
          required: false
          schema:
            exclusiveMinimum: 0
            type: "integer"
            title: "Limit"
            description: "Size of a page, defaults to 10. Maximum is 100."
            default: 10
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ListResource_Benefit_"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - benefits:read
            - benefits:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-pagination: {"type": "offsetLimit", "inputs": [{"name": "page", "in": "parameters", "type": "page"}, {"name": "limit", "in": "parameters", "type": "limit"}], "outputs": {"results": "$.items", "numPages": "$.pagination.max_page"}}
      x-speakeasy-group: "benefits"
      x-speakeasy-name-override: "list"
    post:
      tags:
        - "benefits"
        - "documented"
      summary: "Create Benefit"
      description: "Create a benefit."
      operationId: "benefits:create"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/BenefitCreate"}
        required: true
      responses:
        "201":
          description: "Benefit created."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Benefit", "title": "Benefit"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - benefits:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-group: "benefits"
      x-speakeasy-name-override: "create"
  "/v1/benefits/{id}":
    get:
      tags:
        - "benefits"
        - "documented"
      summary: "Get Benefit"
      description: "Get a benefit by ID."
      operationId: "benefits:get"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Id"
            format: "uuid4"
            description: "The benefit ID."
            x-polar-selector-widget: {"resourceRoot": "/v1/benefits", "resourceName": "Benefit", "displayProperty": "description"}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Benefit", "title": "Benefit"}
        "404":
          description: "Benefit not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - benefits:read
            - benefits:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-group: "benefits"
      x-speakeasy-name-override: "get"
    delete:
      tags:
        - "benefits"
        - "documented"
      summary: "Delete Benefit"
      description: "Delete a benefit.\n\n> [!WARNING]\n> Every grants associated with the benefit will be revoked.\n> Users will lose access to the benefit."
      operationId: "benefits:delete"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Id"
            format: "uuid4"
            description: "The benefit ID."
            x-polar-selector-widget: {"resourceRoot": "/v1/benefits", "resourceName": "Benefit", "displayProperty": "description"}
      responses:
        "204":
          description: "Benefit deleted."
        "403":
          description: "You don't have the permission to update this benefit or it's not deletable."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/NotPermitted"}
        "404":
          description: "Benefit not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - benefits:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-group: "benefits"
      x-speakeasy-name-override: "delete"
    patch:
      tags:
        - "benefits"
        - "documented"
      summary: "Update Benefit"
      description: "Update a benefit."
      operationId: "benefits:update"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Id"
            format: "uuid4"
            description: "The benefit ID."
            x-polar-selector-widget: {"resourceRoot": "/v1/benefits", "resourceName": "Benefit", "displayProperty": "description"}
      requestBody:
        content:
          "application/json":
            schema:
              anyOf:
                - {"$ref": "#/components/schemas/BenefitAdsUpdate"}
                - {"$ref": "#/components/schemas/BenefitCustomUpdate"}
                - {"$ref": "#/components/schemas/BenefitDiscordUpdate"}
                - {"$ref": "#/components/schemas/BenefitGitHubRepositoryUpdate"}
                - {"$ref": "#/components/schemas/BenefitDownloadablesUpdate"}
                - {"$ref": "#/components/schemas/BenefitLicenseKeysUpdate"}
              title: "Benefit Update"
        required: true
      responses:
        "200":
          description: "Benefit updated."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Benefit", "title": "Benefit"}
        "403":
          description: "You don't have the permission to update this benefit."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/NotPermitted"}
        "404":
          description: "Benefit not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - benefits:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-group: "benefits"
      x-speakeasy-name-override: "update"
  "/v1/benefits/{id}/grants":
    get:
      tags:
        - "benefits"
        - "documented"
      summary: "List Benefit Grants"
      description: "List the individual grants for a benefit.\n\nIt's especially useful to check if a user has been granted a benefit."
      operationId: "benefits:grants"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Id"
            format: "uuid4"
            description: "The benefit ID."
            x-polar-selector-widget: {"resourceRoot": "/v1/benefits", "resourceName": "Benefit", "displayProperty": "description"}
        - name: "is_granted"
          in: "query"
          description: "Filter by granted status. If `true`, only granted benefits will be returned. If `false`, only revoked benefits will be returned. "
          required: false
          schema:
            anyOf:
              - type: "boolean"
              - type: "null"
            title: "Is Granted"
            description: "Filter by granted status. If `true`, only granted benefits will be returned. If `false`, only revoked benefits will be returned. "
        - name: "customer_id"
          in: "query"
          description: "Filter by customer."
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "uuid4"
              - type: "array"
                items:
                  type: "string"
                  format: "uuid4"
              - type: "null"
            title: "CustomerID Filter"
            description: "Filter by customer."
        - name: "page"
          in: "query"
          description: "Page number, defaults to 1."
          required: false
          schema:
            exclusiveMinimum: 0
            type: "integer"
            title: "Page"
            description: "Page number, defaults to 1."
            default: 1
        - name: "limit"
          in: "query"
          description: "Size of a page, defaults to 10. Maximum is 100."
          required: false
          schema:
            exclusiveMinimum: 0
            type: "integer"
            title: "Limit"
            description: "Size of a page, defaults to 10. Maximum is 100."
            default: 10
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ListResource_BenefitGrant_"}
        "404":
          description: "Benefit not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - benefits:read
            - benefits:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-pagination: {"type": "offsetLimit", "inputs": [{"name": "page", "in": "parameters", "type": "page"}, {"name": "limit", "in": "parameters", "type": "limit"}], "outputs": {"results": "$.items", "numPages": "$.pagination.max_page"}}
      x-speakeasy-group: "benefits"
      x-speakeasy-name-override: "grants"
  "/v1/products/":
    get:
      tags:
        - "products"
        - "documented"
        - "featured"
      summary: "List Products"
      description: "List products."
      operationId: "products:list"
      parameters:
        - name: "organization_id"
          in: "query"
          description: "Filter by organization ID."
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "uuid4"
                description: "The organization ID."
                x-polar-selector-widget: {"resourceRoot": "/v1/organizations", "resourceName": "Organization", "displayProperty": "name"}
              - type: "array"
                items:
                  type: "string"
                  format: "uuid4"
                  description: "The organization ID."
                  x-polar-selector-widget: {"resourceRoot": "/v1/organizations", "resourceName": "Organization", "displayProperty": "name"}
              - type: "null"
            title: "OrganizationID Filter"
            description: "Filter by organization ID."
        - name: "query"
          in: "query"
          description: "Filter by product name."
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "Query"
            description: "Filter by product name."
        - name: "is_archived"
          in: "query"
          description: "Filter on archived products."
          required: false
          schema:
            anyOf:
              - type: "boolean"
              - type: "null"
            title: "Is Archived"
            description: "Filter on archived products."
        - name: "is_recurring"
          in: "query"
          description: "Filter on recurring products. If `true`, only subscriptions tiers are returned. If `false`, only one-time purchase products are returned. "
          required: false
          schema:
            anyOf:
              - type: "boolean"
              - type: "null"
            title: "Is Recurring"
            description: "Filter on recurring products. If `true`, only subscriptions tiers are returned. If `false`, only one-time purchase products are returned. "
        - name: "benefit_id"
          in: "query"
          description: "Filter products granting specific benefit."
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "uuid4"
                description: "The benefit ID."
                x-polar-selector-widget: {"resourceRoot": "/v1/benefits", "resourceName": "Benefit", "displayProperty": "description"}
              - type: "array"
                items:
                  type: "string"
                  format: "uuid4"
                  description: "The benefit ID."
                  x-polar-selector-widget: {"resourceRoot": "/v1/benefits", "resourceName": "Benefit", "displayProperty": "description"}
              - type: "null"
            title: "BenefitID Filter"
            description: "Filter products granting specific benefit."
        - name: "page"
          in: "query"
          description: "Page number, defaults to 1."
          required: false
          schema:
            exclusiveMinimum: 0
            type: "integer"
            title: "Page"
            description: "Page number, defaults to 1."
            default: 1
        - name: "limit"
          in: "query"
          description: "Size of a page, defaults to 10. Maximum is 100."
          required: false
          schema:
            exclusiveMinimum: 0
            type: "integer"
            title: "Limit"
            description: "Size of a page, defaults to 10. Maximum is 100."
            default: 10
        - name: "sorting"
          in: "query"
          description: "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
          required: false
          schema:
            anyOf:
              - type: "array"
                items: {"$ref": "#/components/schemas/ProductSortProperty"}
              - type: "null"
            title: "Sorting"
            description: "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
            default: ["-created_at"]
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ListResource_Product_"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - products:read
            - products:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-pagination: {"type": "offsetLimit", "inputs": [{"name": "page", "in": "parameters", "type": "page"}, {"name": "limit", "in": "parameters", "type": "limit"}], "outputs": {"results": "$.items", "numPages": "$.pagination.max_page"}}
      x-speakeasy-group: "products"
      x-speakeasy-name-override: "list"
    post:
      tags:
        - "products"
        - "documented"
        - "featured"
      summary: "Create Product"
      description: "Create a product."
      operationId: "products:create"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/ProductCreate", "title": "ProductCreate"}
        required: true
      responses:
        "201":
          description: "Product created."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Product"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - products:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-group: "products"
      x-speakeasy-name-override: "create"
  "/v1/products/{id}":
    get:
      tags:
        - "products"
        - "documented"
        - "featured"
      summary: "Get Product"
      description: "Get a product by ID."
      operationId: "products:get"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Id"
            format: "uuid4"
            description: "The product ID."
            x-polar-selector-widget: {"resourceRoot": "/v1/products", "resourceName": "Product", "displayProperty": "name"}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Product"}
        "404":
          description: "Product not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - products:read
            - products:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-group: "products"
      x-speakeasy-name-override: "get"
    patch:
      tags:
        - "products"
        - "documented"
        - "featured"
      summary: "Update Product"
      description: "Update a product."
      operationId: "products:update"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Id"
            format: "uuid4"
            description: "The product ID."
            x-polar-selector-widget: {"resourceRoot": "/v1/products", "resourceName": "Product", "displayProperty": "name"}
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/ProductUpdate"}
        required: true
      responses:
        "200":
          description: "Product updated."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Product"}
        "403":
          description: "You don't have the permission to update this product."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/NotPermitted"}
        "404":
          description: "Product not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - products:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-group: "products"
      x-speakeasy-name-override: "update"
  "/v1/products/{id}/benefits":
    post:
      tags:
        - "products"
        - "documented"
        - "featured"
      summary: "Update Product Benefits"
      description: "Update benefits granted by a product."
      operationId: "products:update_benefits"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Id"
            format: "uuid4"
            description: "The product ID."
            x-polar-selector-widget: {"resourceRoot": "/v1/products", "resourceName": "Product", "displayProperty": "name"}
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/ProductBenefitsUpdate"}
        required: true
      responses:
        "200":
          description: "Product benefits updated."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Product"}
        "403":
          description: "You don't have the permission to update this product."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/NotPermitted"}
        "404":
          description: "Product not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - products:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-group: "products"
      x-speakeasy-name-override: "update_benefits"
  "/v1/orders/":
    get:
      tags:
        - "orders"
        - "documented"
      summary: "List Orders"
      description: "List orders."
      operationId: "orders:list"
      parameters:
        - name: "organization_id"
          in: "query"
          description: "Filter by organization ID."
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "uuid4"
                description: "The organization ID."
                x-polar-selector-widget: {"resourceRoot": "/v1/organizations", "resourceName": "Organization", "displayProperty": "name"}
              - type: "array"
                items:
                  type: "string"
                  format: "uuid4"
                  description: "The organization ID."
                  x-polar-selector-widget: {"resourceRoot": "/v1/organizations", "resourceName": "Organization", "displayProperty": "name"}
              - type: "null"
            title: "OrganizationID Filter"
            description: "Filter by organization ID."
        - name: "product_id"
          in: "query"
          description: "Filter by product ID."
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "uuid4"
                description: "The product ID."
                x-polar-selector-widget: {"resourceRoot": "/v1/products", "resourceName": "Product", "displayProperty": "name"}
              - type: "array"
                items:
                  type: "string"
                  format: "uuid4"
                  description: "The product ID."
                  x-polar-selector-widget: {"resourceRoot": "/v1/products", "resourceName": "Product", "displayProperty": "name"}
              - type: "null"
            title: "ProductID Filter"
            description: "Filter by product ID."
        - name: "product_price_type"
          in: "query"
          description: "Filter by product price type. `recurring` will return orders corresponding to subscriptions creations or renewals. `one_time` will return orders corresponding to one-time purchases."
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/ProductPriceType"}
              - type: "array"
                items: {"$ref": "#/components/schemas/ProductPriceType"}
              - type: "null"
            title: "ProductPriceType Filter"
            description: "Filter by product price type. `recurring` will return orders corresponding to subscriptions creations or renewals. `one_time` will return orders corresponding to one-time purchases."
        - name: "discount_id"
          in: "query"
          description: "Filter by discount ID."
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "uuid4"
              - type: "array"
                items:
                  type: "string"
                  format: "uuid4"
              - type: "null"
            title: "DiscountID Filter"
            description: "Filter by discount ID."
        - name: "customer_id"
          in: "query"
          description: "Filter by customer ID."
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "uuid4"
              - type: "array"
                items:
                  type: "string"
                  format: "uuid4"
              - type: "null"
            title: "CustomerID Filter"
            description: "Filter by customer ID."
        - name: "page"
          in: "query"
          description: "Page number, defaults to 1."
          required: false
          schema:
            exclusiveMinimum: 0
            type: "integer"
            title: "Page"
            description: "Page number, defaults to 1."
            default: 1
        - name: "limit"
          in: "query"
          description: "Size of a page, defaults to 10. Maximum is 100."
          required: false
          schema:
            exclusiveMinimum: 0
            type: "integer"
            title: "Limit"
            description: "Size of a page, defaults to 10. Maximum is 100."
            default: 10
        - name: "sorting"
          in: "query"
          description: "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
          required: false
          schema:
            anyOf:
              - type: "array"
                items: {"$ref": "#/components/schemas/OrderSortProperty"}
              - type: "null"
            title: "Sorting"
            description: "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
            default: ["-created_at"]
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ListResource_Order_"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - orders:read
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-pagination: {"type": "offsetLimit", "inputs": [{"name": "page", "in": "parameters", "type": "page"}, {"name": "limit", "in": "parameters", "type": "limit"}], "outputs": {"results": "$.items", "numPages": "$.pagination.max_page"}}
      x-speakeasy-group: "orders"
      x-speakeasy-name-override: "list"
  "/v1/orders/{id}":
    get:
      tags:
        - "orders"
        - "documented"
      summary: "Get Order"
      description: "Get an order by ID."
      operationId: "orders:get"
      parameters:
        - name: "id"
          in: "path"
          description: "The order ID."
          required: true
          schema:
            type: "string"
            title: "Id"
            format: "uuid4"
            description: "The order ID."
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Order"}
        "404":
          description: "Order not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - orders:read
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-group: "orders"
      x-speakeasy-name-override: "get"
  "/v1/orders/{id}/invoice":
    get:
      tags:
        - "orders"
        - "documented"
      summary: "Get Order Invoice"
      description: "Get an order's invoice data."
      operationId: "orders:invoice"
      parameters:
        - name: "id"
          in: "path"
          description: "The order ID."
          required: true
          schema:
            type: "string"
            title: "Id"
            format: "uuid4"
            description: "The order ID."
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/OrderInvoice"}
        "404":
          description: "Order not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - orders:read
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-group: "orders"
      x-speakeasy-name-override: "invoice"
  "/v1/checkouts/custom/":
    get:
      tags:
        - "checkouts"
        - "custom"
        - "documented"
        - "featured"
      summary: "List Checkout Sessions"
      description: "List checkout sessions."
      operationId: "checkouts:custom:list"
      parameters:
        - name: "organization_id"
          in: "query"
          description: "Filter by organization ID."
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "uuid4"
                description: "The organization ID."
                x-polar-selector-widget: {"resourceRoot": "/v1/organizations", "resourceName": "Organization", "displayProperty": "name"}
              - type: "array"
                items:
                  type: "string"
                  format: "uuid4"
                  description: "The organization ID."
                  x-polar-selector-widget: {"resourceRoot": "/v1/organizations", "resourceName": "Organization", "displayProperty": "name"}
              - type: "null"
            title: "OrganizationID Filter"
            description: "Filter by organization ID."
        - name: "product_id"
          in: "query"
          description: "Filter by product ID."
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "uuid4"
                description: "The product ID."
                x-polar-selector-widget: {"resourceRoot": "/v1/products", "resourceName": "Product", "displayProperty": "name"}
              - type: "array"
                items:
                  type: "string"
                  format: "uuid4"
                  description: "The product ID."
                  x-polar-selector-widget: {"resourceRoot": "/v1/products", "resourceName": "Product", "displayProperty": "name"}
              - type: "null"
            title: "ProductID Filter"
            description: "Filter by product ID."
        - name: "page"
          in: "query"
          description: "Page number, defaults to 1."
          required: false
          schema:
            exclusiveMinimum: 0
            type: "integer"
            title: "Page"
            description: "Page number, defaults to 1."
            default: 1
        - name: "limit"
          in: "query"
          description: "Size of a page, defaults to 10. Maximum is 100."
          required: false
          schema:
            exclusiveMinimum: 0
            type: "integer"
            title: "Limit"
            description: "Size of a page, defaults to 10. Maximum is 100."
            default: 10
        - name: "sorting"
          in: "query"
          description: "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
          required: false
          schema:
            anyOf:
              - type: "array"
                items: {"$ref": "#/components/schemas/CheckoutSortProperty"}
              - type: "null"
            title: "Sorting"
            description: "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
            default: ["-created_at"]
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ListResource_Checkout_"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - checkouts:read
            - checkouts:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-pagination: {"type": "offsetLimit", "inputs": [{"name": "page", "in": "parameters", "type": "page"}, {"name": "limit", "in": "parameters", "type": "limit"}], "outputs": {"results": "$.items", "numPages": "$.pagination.max_page"}}
      x-speakeasy-group: "checkouts.custom"
      x-speakeasy-name-override: "list"
    post:
      tags:
        - "checkouts"
        - "custom"
        - "documented"
        - "featured"
      summary: "Create Checkout Session"
      description: "Create a checkout session."
      operationId: "checkouts:custom:create"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CheckoutCreate"}
        required: true
      responses:
        "201":
          description: "Checkout session created."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Checkout"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - checkouts:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-group: "checkouts.custom"
      x-speakeasy-name-override: "create"
  "/v1/checkouts/custom/{id}":
    get:
      tags:
        - "checkouts"
        - "custom"
        - "documented"
        - "featured"
      summary: "Get Checkout Session"
      description: "Get a checkout session by ID."
      operationId: "checkouts:custom:get"
      parameters:
        - name: "id"
          in: "path"
          description: "The checkout session ID."
          required: true
          schema:
            type: "string"
            title: "Id"
            format: "uuid4"
            description: "The checkout session ID."
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Checkout"}
        "404":
          description: "Checkout session not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - checkouts:read
            - checkouts:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-group: "checkouts.custom"
      x-speakeasy-name-override: "get"
    patch:
      tags:
        - "checkouts"
        - "custom"
        - "documented"
        - "featured"
      summary: "Update Checkout Session"
      description: "Update a checkout session."
      operationId: "checkouts:custom:update"
      parameters:
        - name: "id"
          in: "path"
          description: "The checkout session ID."
          required: true
          schema:
            type: "string"
            title: "Id"
            format: "uuid4"
            description: "The checkout session ID."
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CheckoutUpdate"}
        required: true
      responses:
        "200":
          description: "Checkout session updated."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Checkout"}
        "404":
          description: "Checkout session not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - checkouts:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-group: "checkouts.custom"
      x-speakeasy-name-override: "update"
  "/v1/checkouts/custom/client/{client_secret}":
    get:
      tags:
        - "checkouts"
        - "custom"
        - "documented"
        - "featured"
      summary: "Get Checkout Session from Client"
      description: "Get a checkout session by client secret."
      operationId: "checkouts:custom:client_get"
      parameters:
        - name: "client_secret"
          in: "path"
          description: "The checkout session client secret."
          required: true
          schema:
            type: "string"
            title: "Client Secret"
            description: "The checkout session client secret."
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/CheckoutPublic"}
        "404":
          description: "Checkout session not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      x-speakeasy-group: "checkouts.custom"
      x-speakeasy-name-override: "client_get"
    patch:
      tags:
        - "checkouts"
        - "custom"
        - "documented"
        - "featured"
      summary: "Update Checkout Session from Client"
      description: "Update a checkout session by client secret."
      operationId: "checkouts:custom:client_update"
      parameters:
        - name: "client_secret"
          in: "path"
          description: "The checkout session client secret."
          required: true
          schema:
            type: "string"
            title: "Client Secret"
            description: "The checkout session client secret."
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CheckoutUpdatePublic"}
        required: true
      responses:
        "200":
          description: "Checkout session updated."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/CheckoutPublic"}
        "404":
          description: "Checkout session not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      x-speakeasy-group: "checkouts.custom"
      x-speakeasy-name-override: "client_update"
  "/v1/checkouts/custom/client/{client_secret}/confirm":
    post:
      tags:
        - "checkouts"
        - "custom"
        - "documented"
        - "featured"
      summary: "Confirm Checkout Session from Client"
      description: "Confirm a checkout session by client secret.\n\nOrders and subscriptions will be processed."
      operationId: "checkouts:custom:client_confirm"
      parameters:
        - name: "client_secret"
          in: "path"
          description: "The checkout session client secret."
          required: true
          schema:
            type: "string"
            title: "Client Secret"
            description: "The checkout session client secret."
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CheckoutConfirmStripe"}
        required: true
      responses:
        "200":
          description: "Checkout session confirmed."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/CheckoutPublicConfirmed"}
        "404":
          description: "Checkout session not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc: []
        - pat: []
      x-polar-allowed-subjects: ["Anonymous", "User"]
      x-speakeasy-group: "checkouts.custom"
      x-speakeasy-name-override: "client_confirm"
  "/v1/checkouts/":
    post:
      tags:
        - "checkouts"
        - "documented"
      summary: "Create Checkout"
      description: "Create a checkout session."
      operationId: "checkouts:create"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CheckoutLegacyCreate"}
        required: true
      responses:
        "201":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/CheckoutLegacy"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      deprecated: true
      security:
        - oidc: []
        - pat: []
      x-polar-allowed-subjects: ["Anonymous", "User"]
      x-speakeasy-deprecation-replacement: "checkouts:custom:create"
      x-speakeasy-deprecation-message: "This API is deprecated. We recommend you to use the new custom checkout API, which is more flexible and powerful. Please refer to the documentation for more information."
      x-speakeasy-group: "checkouts"
      x-speakeasy-name-override: "create"
  "/v1/checkouts/{id}":
    get:
      tags:
        - "checkouts"
        - "documented"
      summary: "Get Checkout"
      description: "Get an active checkout session by ID."
      operationId: "checkouts:get"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Id"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/CheckoutLegacy"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      deprecated: true
      x-speakeasy-deprecation-message: "This API is deprecated. We recommend you to use the new custom checkout API, which is more flexible and powerful. Please refer to the documentation for more information."
      x-speakeasy-group: "checkouts"
      x-speakeasy-name-override: "get"
  "/v1/files/":
    get:
      tags:
        - "files"
        - "documented"
      summary: "List Files"
      description: "List files."
      operationId: "files:list"
      parameters:
        - name: "organization_id"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "uuid4"
                description: "The organization ID."
                x-polar-selector-widget: {"resourceRoot": "/v1/organizations", "resourceName": "Organization", "displayProperty": "name"}
              - type: "null"
            title: "Organization Id"
        - name: "ids"
          in: "query"
          description: "List of file IDs to get. "
          required: false
          schema:
            anyOf:
              - type: "array"
                items:
                  type: "string"
                  format: "uuid4"
              - type: "null"
            title: "Ids"
            description: "List of file IDs to get. "
        - name: "page"
          in: "query"
          description: "Page number, defaults to 1."
          required: false
          schema:
            exclusiveMinimum: 0
            type: "integer"
            title: "Page"
            description: "Page number, defaults to 1."
            default: 1
        - name: "limit"
          in: "query"
          description: "Size of a page, defaults to 10. Maximum is 100."
          required: false
          schema:
            exclusiveMinimum: 0
            type: "integer"
            title: "Limit"
            description: "Size of a page, defaults to 10. Maximum is 100."
            default: 10
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ListResource_FileRead_"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - files:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-pagination: {"type": "offsetLimit", "inputs": [{"name": "page", "in": "parameters", "type": "page"}, {"name": "limit", "in": "parameters", "type": "limit"}], "outputs": {"results": "$.items", "numPages": "$.pagination.max_page"}}
      x-speakeasy-group: "files"
      x-speakeasy-name-override: "list"
    post:
      tags:
        - "files"
        - "documented"
      summary: "Create File"
      description: "Create a file."
      operationId: "files:create"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/FileCreate"}
        required: true
      responses:
        "201":
          description: "File created."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/FileUpload"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - files:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-group: "files"
      x-speakeasy-name-override: "create"
  "/v1/files/{id}/uploaded":
    post:
      tags:
        - "files"
        - "documented"
      summary: "Complete File Upload"
      description: "Complete a file upload."
      operationId: "files:uploaded"
      parameters:
        - name: "id"
          in: "path"
          description: "The file ID."
          required: true
          schema:
            type: "string"
            title: "Id"
            format: "uuid4"
            description: "The file ID."
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/FileUploadCompleted"}
        required: true
      responses:
        "200":
          description: "File upload completed."
          content:
            "application/json":
              schema:
                oneOf:
                  - {"$ref": "#/components/schemas/DownloadableFileRead"}
                  - {"$ref": "#/components/schemas/ProductMediaFileRead"}
                  - {"$ref": "#/components/schemas/OrganizationAvatarFileRead"}
                discriminator:
                  propertyName: "service"
                  mapping:
                    "downloadable": "#/components/schemas/DownloadableFileRead"
                    "product_media": "#/components/schemas/ProductMediaFileRead"
                    "organization_avatar": "#/components/schemas/OrganizationAvatarFileRead"
                title: "Response Files:Uploaded"
        "403":
          description: "You don't have the permission to update this file."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/NotPermitted"}
        "404":
          description: "File not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - files:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-group: "files"
      x-speakeasy-name-override: "uploaded"
  "/v1/files/{id}":
    delete:
      tags:
        - "files"
        - "documented"
      summary: "Delete File"
      description: "Delete a file."
      operationId: "files:delete"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Id"
            format: "uuid4"
      responses:
        "204":
          description: "File deleted."
        "403":
          description: "You don't have the permission to delete this file."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/NotPermitted"}
        "404":
          description: "File not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - files:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-group: "files"
      x-speakeasy-name-override: "delete"
    patch:
      tags:
        - "files"
        - "documented"
      summary: "Update File"
      description: "Update a file."
      operationId: "files:update"
      parameters:
        - name: "id"
          in: "path"
          description: "The file ID."
          required: true
          schema:
            type: "string"
            title: "Id"
            format: "uuid4"
            description: "The file ID."
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/FilePatch"}
        required: true
      responses:
        "200":
          description: "File updated."
          content:
            "application/json":
              schema:
                oneOf:
                  - {"$ref": "#/components/schemas/DownloadableFileRead"}
                  - {"$ref": "#/components/schemas/ProductMediaFileRead"}
                  - {"$ref": "#/components/schemas/OrganizationAvatarFileRead"}
                discriminator:
                  propertyName: "service"
                  mapping:
                    "downloadable": "#/components/schemas/DownloadableFileRead"
                    "product_media": "#/components/schemas/ProductMediaFileRead"
                    "organization_avatar": "#/components/schemas/OrganizationAvatarFileRead"
                title: "Response Files:Update"
        "403":
          description: "You don't have the permission to update this file."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/NotPermitted"}
        "404":
          description: "File not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - files:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-group: "files"
      x-speakeasy-name-override: "update"
  "/v1/metrics/":
    get:
      tags:
        - "metrics"
        - "documented"
      summary: "Get Metrics"
      description: "Get metrics about your orders and subscriptions."
      operationId: "metrics:get"
      parameters:
        - name: "start_date"
          in: "query"
          description: "Start date."
          required: true
          schema:
            type: "string"
            title: "Start Date"
            format: "date"
            description: "Start date."
        - name: "end_date"
          in: "query"
          description: "End date."
          required: true
          schema:
            type: "string"
            title: "End Date"
            format: "date"
            description: "End date."
        - name: "interval"
          in: "query"
          description: "Interval between two timestamps."
          required: true
          schema: {"$ref": "#/components/schemas/Interval", "description": "Interval between two timestamps."}
        - name: "organization_id"
          in: "query"
          description: "Filter by organization ID."
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "uuid4"
                description: "The organization ID."
                x-polar-selector-widget: {"resourceRoot": "/v1/organizations", "resourceName": "Organization", "displayProperty": "name"}
              - type: "array"
                items:
                  type: "string"
                  format: "uuid4"
                  description: "The organization ID."
                  x-polar-selector-widget: {"resourceRoot": "/v1/organizations", "resourceName": "Organization", "displayProperty": "name"}
              - type: "null"
            title: "OrganizationID Filter"
            description: "Filter by organization ID."
        - name: "product_id"
          in: "query"
          description: "Filter by product ID."
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "uuid4"
                description: "The product ID."
                x-polar-selector-widget: {"resourceRoot": "/v1/products", "resourceName": "Product", "displayProperty": "name"}
              - type: "array"
                items:
                  type: "string"
                  format: "uuid4"
                  description: "The product ID."
                  x-polar-selector-widget: {"resourceRoot": "/v1/products", "resourceName": "Product", "displayProperty": "name"}
              - type: "null"
            title: "ProductID Filter"
            description: "Filter by product ID."
        - name: "product_price_type"
          in: "query"
          description: "Filter by product price type. `recurring` will filter data corresponding to subscriptions creations or renewals. `one_time` will filter data corresponding to one-time purchases."
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/ProductPriceType"}
              - type: "array"
                items: {"$ref": "#/components/schemas/ProductPriceType"}
              - type: "null"
            title: "ProductPriceType Filter"
            description: "Filter by product price type. `recurring` will filter data corresponding to subscriptions creations or renewals. `one_time` will filter data corresponding to one-time purchases."
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/MetricsResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - metrics:read
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-group: "metrics"
      x-speakeasy-name-override: "get"
  "/v1/metrics/limits":
    get:
      tags:
        - "metrics"
        - "documented"
      summary: "Get Metrics Limits"
      description: "Get the interval limits for the metrics endpoint."
      operationId: "metrics:limits"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/MetricsLimits"}
      security:
        - oidc:
            - metrics:read
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-group: "metrics"
      x-speakeasy-name-override: "limits"
  "/v1/license-keys":
    get:
      tags:
        - "license_keys"
        - "documented"
        - "featured"
      summary: "List License Keys"
      description: "Get license keys connected to the given organization & filters."
      operationId: "license_keys:list"
      parameters:
        - name: "organization_id"
          in: "query"
          description: "Filter by organization ID."
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "uuid4"
                description: "The organization ID."
                x-polar-selector-widget: {"resourceRoot": "/v1/organizations", "resourceName": "Organization", "displayProperty": "name"}
              - type: "array"
                items:
                  type: "string"
                  format: "uuid4"
                  description: "The organization ID."
                  x-polar-selector-widget: {"resourceRoot": "/v1/organizations", "resourceName": "Organization", "displayProperty": "name"}
              - type: "null"
            title: "OrganizationID Filter"
            description: "Filter by organization ID."
        - name: "benefit_id"
          in: "query"
          description: "Filter by benefit ID."
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "uuid4"
                description: "The benefit ID."
                x-polar-selector-widget: {"resourceRoot": "/v1/benefits", "resourceName": "Benefit", "displayProperty": "description"}
              - type: "array"
                items:
                  type: "string"
                  format: "uuid4"
                  description: "The benefit ID."
                  x-polar-selector-widget: {"resourceRoot": "/v1/benefits", "resourceName": "Benefit", "displayProperty": "description"}
              - type: "null"
            title: "BenefitID Filter"
            description: "Filter by benefit ID."
        - name: "page"
          in: "query"
          description: "Page number, defaults to 1."
          required: false
          schema:
            exclusiveMinimum: 0
            type: "integer"
            title: "Page"
            description: "Page number, defaults to 1."
            default: 1
        - name: "limit"
          in: "query"
          description: "Size of a page, defaults to 10. Maximum is 100."
          required: false
          schema:
            exclusiveMinimum: 0
            type: "integer"
            title: "Limit"
            description: "Size of a page, defaults to 10. Maximum is 100."
            default: 10
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ListResource_LicenseKeyRead_"}
        "401":
          description: "Not authorized to manage license key."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Unauthorized"}
        "404":
          description: "License key not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - license_keys:read
            - license_keys:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-pagination: {"type": "offsetLimit", "inputs": [{"name": "page", "in": "parameters", "type": "page"}, {"name": "limit", "in": "parameters", "type": "limit"}], "outputs": {"results": "$.items", "numPages": "$.pagination.max_page"}}
      x-speakeasy-group: "license_keys"
      x-speakeasy-name-override: "list"
  "/v1/license-keys/{id}":
    get:
      tags:
        - "license_keys"
        - "documented"
        - "featured"
      summary: "Get License Key"
      description: "Get a license key."
      operationId: "license_keys:get"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Id"
            format: "uuid4"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/LicenseKeyWithActivations"}
        "401":
          description: "Not authorized to manage license key."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Unauthorized"}
        "404":
          description: "License key not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - license_keys:read
            - license_keys:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-group: "license_keys"
      x-speakeasy-name-override: "get"
    patch:
      tags:
        - "license_keys"
        - "documented"
        - "featured"
      summary: "Update License Key"
      description: "Update a license key."
      operationId: "license_keys:update"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Id"
            format: "uuid4"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/LicenseKeyUpdate"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/LicenseKeyRead"}
        "401":
          description: "Not authorized to manage license key."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Unauthorized"}
        "404":
          description: "License key not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - license_keys:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-group: "license_keys"
      x-speakeasy-name-override: "update"
  "/v1/license-keys/{id}/activations/{activation_id}":
    get:
      tags:
        - "license_keys"
        - "documented"
        - "featured"
      summary: "Get Activation"
      description: "Get a license key activation."
      operationId: "license_keys:get_activation"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Id"
            format: "uuid4"
        - name: "activation_id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Activation Id"
            format: "uuid4"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/LicenseKeyActivationRead"}
        "401":
          description: "Not authorized to manage license key."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Unauthorized"}
        "404":
          description: "License key not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - license_keys:read
            - license_keys:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-group: "license_keys"
      x-speakeasy-name-override: "get_activation"
  "/v1/checkout-links/":
    get:
      tags:
        - "checkout-links"
        - "documented"
      summary: "List Checkout Links"
      description: "List checkout links."
      operationId: "checkout-links:list"
      parameters:
        - name: "organization_id"
          in: "query"
          description: "Filter by organization ID."
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "uuid4"
                description: "The organization ID."
                x-polar-selector-widget: {"resourceRoot": "/v1/organizations", "resourceName": "Organization", "displayProperty": "name"}
              - type: "array"
                items:
                  type: "string"
                  format: "uuid4"
                  description: "The organization ID."
                  x-polar-selector-widget: {"resourceRoot": "/v1/organizations", "resourceName": "Organization", "displayProperty": "name"}
              - type: "null"
            title: "OrganizationID Filter"
            description: "Filter by organization ID."
        - name: "product_id"
          in: "query"
          description: "Filter by product ID."
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "uuid4"
                description: "The product ID."
                x-polar-selector-widget: {"resourceRoot": "/v1/products", "resourceName": "Product", "displayProperty": "name"}
              - type: "array"
                items:
                  type: "string"
                  format: "uuid4"
                  description: "The product ID."
                  x-polar-selector-widget: {"resourceRoot": "/v1/products", "resourceName": "Product", "displayProperty": "name"}
              - type: "null"
            title: "ProductID Filter"
            description: "Filter by product ID."
        - name: "page"
          in: "query"
          description: "Page number, defaults to 1."
          required: false
          schema:
            exclusiveMinimum: 0
            type: "integer"
            title: "Page"
            description: "Page number, defaults to 1."
            default: 1
        - name: "limit"
          in: "query"
          description: "Size of a page, defaults to 10. Maximum is 100."
          required: false
          schema:
            exclusiveMinimum: 0
            type: "integer"
            title: "Limit"
            description: "Size of a page, defaults to 10. Maximum is 100."
            default: 10
        - name: "sorting"
          in: "query"
          description: "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
          required: false
          schema:
            anyOf:
              - type: "array"
                items: {"$ref": "#/components/schemas/CheckoutLinkSortProperty"}
              - type: "null"
            title: "Sorting"
            description: "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
            default: ["created_at"]
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ListResource_CheckoutLink_"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - checkout_links:read
            - checkout_links:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-pagination: {"type": "offsetLimit", "inputs": [{"name": "page", "in": "parameters", "type": "page"}, {"name": "limit", "in": "parameters", "type": "limit"}], "outputs": {"results": "$.items", "numPages": "$.pagination.max_page"}}
      x-speakeasy-group: "checkout-links"
      x-speakeasy-name-override: "list"
    post:
      tags:
        - "checkout-links"
        - "documented"
      summary: "Create Checkout Link"
      description: "Create a checkout link."
      operationId: "checkout-links:create"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CheckoutLinkCreate"}
        required: true
      responses:
        "201":
          description: "Checkout link created."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/CheckoutLink"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - checkout_links:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-group: "checkout-links"
      x-speakeasy-name-override: "create"
  "/v1/checkout-links/{id}":
    get:
      tags:
        - "checkout-links"
        - "documented"
      summary: "Get Checkout Link"
      description: "Get a checkout link by ID."
      operationId: "checkout-links:get"
      parameters:
        - name: "id"
          in: "path"
          description: "The checkout link ID."
          required: true
          schema:
            type: "string"
            title: "Id"
            format: "uuid4"
            description: "The checkout link ID."
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/CheckoutLink"}
        "404":
          description: "Checkout link not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - checkout_links:read
            - checkout_links:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-group: "checkout-links"
      x-speakeasy-name-override: "get"
    delete:
      tags:
        - "checkout-links"
        - "documented"
      summary: "Delete Checkout Link"
      description: "Delete a checkout link."
      operationId: "checkout-links:delete"
      parameters:
        - name: "id"
          in: "path"
          description: "The checkout link ID."
          required: true
          schema:
            type: "string"
            title: "Id"
            format: "uuid4"
            description: "The checkout link ID."
      responses:
        "204":
          description: "Checkout link deleted."
        "404":
          description: "Checkout link not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - checkout_links:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-group: "checkout-links"
      x-speakeasy-name-override: "delete"
    patch:
      tags:
        - "checkout-links"
        - "documented"
      summary: "Update Checkout Link"
      description: "Update a checkout link."
      operationId: "checkout-links:update"
      parameters:
        - name: "id"
          in: "path"
          description: "The checkout link ID."
          required: true
          schema:
            type: "string"
            title: "Id"
            format: "uuid4"
            description: "The checkout link ID."
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CheckoutLinkUpdate"}
        required: true
      responses:
        "200":
          description: "Checkout link updated."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/CheckoutLink"}
        "404":
          description: "Checkout link not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - checkout_links:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-group: "checkout-links"
      x-speakeasy-name-override: "update"
  "/v1/custom-fields/":
    get:
      tags:
        - "custom-fields"
        - "documented"
      summary: "List Custom Fields"
      description: "List custom fields."
      operationId: "custom-fields:list"
      parameters:
        - name: "organization_id"
          in: "query"
          description: "Filter by organization ID."
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "uuid4"
                description: "The organization ID."
                x-polar-selector-widget: {"resourceRoot": "/v1/organizations", "resourceName": "Organization", "displayProperty": "name"}
              - type: "array"
                items:
                  type: "string"
                  format: "uuid4"
                  description: "The organization ID."
                  x-polar-selector-widget: {"resourceRoot": "/v1/organizations", "resourceName": "Organization", "displayProperty": "name"}
              - type: "null"
            title: "OrganizationID Filter"
            description: "Filter by organization ID."
        - name: "query"
          in: "query"
          description: "Filter by custom field name or slug."
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "Query"
            description: "Filter by custom field name or slug."
        - name: "type"
          in: "query"
          description: "Filter by custom field type."
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/CustomFieldType"}
              - type: "array"
                items: {"$ref": "#/components/schemas/CustomFieldType"}
              - type: "null"
            title: "CustomFieldType Filter"
            description: "Filter by custom field type."
        - name: "page"
          in: "query"
          description: "Page number, defaults to 1."
          required: false
          schema:
            exclusiveMinimum: 0
            type: "integer"
            title: "Page"
            description: "Page number, defaults to 1."
            default: 1
        - name: "limit"
          in: "query"
          description: "Size of a page, defaults to 10. Maximum is 100."
          required: false
          schema:
            exclusiveMinimum: 0
            type: "integer"
            title: "Limit"
            description: "Size of a page, defaults to 10. Maximum is 100."
            default: 10
        - name: "sorting"
          in: "query"
          description: "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
          required: false
          schema:
            anyOf:
              - type: "array"
                items: {"$ref": "#/components/schemas/CustomFieldSortProperty"}
              - type: "null"
            title: "Sorting"
            description: "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
            default: ["slug"]
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ListResource_CustomField_"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - custom_fields:read
            - custom_fields:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-pagination: {"type": "offsetLimit", "inputs": [{"name": "page", "in": "parameters", "type": "page"}, {"name": "limit", "in": "parameters", "type": "limit"}], "outputs": {"results": "$.items", "numPages": "$.pagination.max_page"}}
      x-speakeasy-group: "custom-fields"
      x-speakeasy-name-override: "list"
    post:
      tags:
        - "custom-fields"
        - "documented"
      summary: "Create Custom Field"
      description: "Create a custom field."
      operationId: "custom-fields:create"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CustomFieldCreate"}
        required: true
      responses:
        "201":
          description: "Custom field created."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/CustomField", "title": "CustomField"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - custom_fields:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-group: "custom-fields"
      x-speakeasy-name-override: "create"
  "/v1/custom-fields/{id}":
    get:
      tags:
        - "custom-fields"
        - "documented"
      summary: "Get Custom Field"
      description: "Get a custom field by ID."
      operationId: "custom-fields:get"
      parameters:
        - name: "id"
          in: "path"
          description: "The custom field ID."
          required: true
          schema:
            type: "string"
            title: "Id"
            format: "uuid4"
            description: "The custom field ID."
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/CustomField", "title": "CustomField"}
        "404":
          description: "Custom field not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - custom_fields:read
            - custom_fields:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-group: "custom-fields"
      x-speakeasy-name-override: "get"
    delete:
      tags:
        - "custom-fields"
        - "documented"
      summary: "Delete Custom Field"
      description: "Delete a custom field."
      operationId: "custom-fields:delete"
      parameters:
        - name: "id"
          in: "path"
          description: "The custom field ID."
          required: true
          schema:
            type: "string"
            title: "Id"
            format: "uuid4"
            description: "The custom field ID."
      responses:
        "204":
          description: "Custom field deleted."
        "404":
          description: "Custom field not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - custom_fields:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-group: "custom-fields"
      x-speakeasy-name-override: "delete"
    patch:
      tags:
        - "custom-fields"
        - "documented"
      summary: "Update Custom Field"
      description: "Update a custom field."
      operationId: "custom-fields:update"
      parameters:
        - name: "id"
          in: "path"
          description: "The custom field ID."
          required: true
          schema:
            type: "string"
            title: "Id"
            format: "uuid4"
            description: "The custom field ID."
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CustomFieldUpdate"}
        required: true
      responses:
        "200":
          description: "Custom field updated."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/CustomField", "title": "CustomField"}
        "404":
          description: "Custom field not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - custom_fields:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-group: "custom-fields"
      x-speakeasy-name-override: "update"
  "/v1/discounts/":
    get:
      tags:
        - "discounts"
        - "featured"
        - "documented"
      summary: "List Discounts"
      description: "List discounts."
      operationId: "discounts:list"
      parameters:
        - name: "organization_id"
          in: "query"
          description: "Filter by organization ID."
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "uuid4"
                description: "The organization ID."
                x-polar-selector-widget: {"resourceRoot": "/v1/organizations", "resourceName": "Organization", "displayProperty": "name"}
              - type: "array"
                items:
                  type: "string"
                  format: "uuid4"
                  description: "The organization ID."
                  x-polar-selector-widget: {"resourceRoot": "/v1/organizations", "resourceName": "Organization", "displayProperty": "name"}
              - type: "null"
            title: "OrganizationID Filter"
            description: "Filter by organization ID."
        - name: "query"
          in: "query"
          description: "Filter by name."
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "Query"
            description: "Filter by name."
        - name: "page"
          in: "query"
          description: "Page number, defaults to 1."
          required: false
          schema:
            exclusiveMinimum: 0
            type: "integer"
            title: "Page"
            description: "Page number, defaults to 1."
            default: 1
        - name: "limit"
          in: "query"
          description: "Size of a page, defaults to 10. Maximum is 100."
          required: false
          schema:
            exclusiveMinimum: 0
            type: "integer"
            title: "Limit"
            description: "Size of a page, defaults to 10. Maximum is 100."
            default: 10
        - name: "sorting"
          in: "query"
          description: "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
          required: false
          schema:
            anyOf:
              - type: "array"
                items: {"$ref": "#/components/schemas/DiscountSortProperty"}
              - type: "null"
            title: "Sorting"
            description: "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
            default: ["-created_at"]
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ListResource_Discount_"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - discounts:read
            - discounts:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-pagination: {"type": "offsetLimit", "inputs": [{"name": "page", "in": "parameters", "type": "page"}, {"name": "limit", "in": "parameters", "type": "limit"}], "outputs": {"results": "$.items", "numPages": "$.pagination.max_page"}}
      x-speakeasy-group: "discounts"
      x-speakeasy-name-override: "list"
    post:
      tags:
        - "discounts"
        - "featured"
        - "documented"
      summary: "Create Discount"
      description: "Create a discount."
      operationId: "discounts:create"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/DiscountCreate"}
        required: true
      responses:
        "201":
          description: "Discount created."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Discount", "title": "Discount"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - discounts:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-group: "discounts"
      x-speakeasy-name-override: "create"
  "/v1/discounts/{id}":
    get:
      tags:
        - "discounts"
        - "featured"
        - "documented"
      summary: "Get Discount"
      description: "Get a discount by ID."
      operationId: "discounts:get"
      parameters:
        - name: "id"
          in: "path"
          description: "The discount ID."
          required: true
          schema:
            type: "string"
            title: "Id"
            format: "uuid4"
            description: "The discount ID."
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Discount", "title": "Discount"}
        "404":
          description: "Discount not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - discounts:read
            - discounts:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-group: "discounts"
      x-speakeasy-name-override: "get"
    delete:
      tags:
        - "discounts"
        - "featured"
        - "documented"
      summary: "Delete Discount"
      description: "Delete a discount."
      operationId: "discounts:delete"
      parameters:
        - name: "id"
          in: "path"
          description: "The discount ID."
          required: true
          schema:
            type: "string"
            title: "Id"
            format: "uuid4"
            description: "The discount ID."
      responses:
        "204":
          description: "Discount deleted."
        "404":
          description: "Discount not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - discounts:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-group: "discounts"
      x-speakeasy-name-override: "delete"
    patch:
      tags:
        - "discounts"
        - "featured"
        - "documented"
      summary: "Update Discount"
      description: "Update a discount."
      operationId: "discounts:update"
      parameters:
        - name: "id"
          in: "path"
          description: "The discount ID."
          required: true
          schema:
            type: "string"
            title: "Id"
            format: "uuid4"
            description: "The discount ID."
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/DiscountUpdate"}
        required: true
      responses:
        "200":
          description: "Discount updated."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Discount", "title": "Discount"}
        "404":
          description: "Discount not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - discounts:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-group: "discounts"
      x-speakeasy-name-override: "update"
  "/v1/customers/":
    get:
      tags:
        - "customers"
        - "documented"
        - "featured"
      summary: "List Customers"
      description: "List customers."
      operationId: "customers:list"
      parameters:
        - name: "organization_id"
          in: "query"
          description: "Filter by organization ID."
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "uuid4"
                description: "The organization ID."
                x-polar-selector-widget: {"resourceRoot": "/v1/organizations", "resourceName": "Organization", "displayProperty": "name"}
              - type: "array"
                items:
                  type: "string"
                  format: "uuid4"
                  description: "The organization ID."
                  x-polar-selector-widget: {"resourceRoot": "/v1/organizations", "resourceName": "Organization", "displayProperty": "name"}
              - type: "null"
            title: "OrganizationID Filter"
            description: "Filter by organization ID."
        - name: "query"
          in: "query"
          description: "Filter by name or email."
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "Query"
            description: "Filter by name or email."
        - name: "page"
          in: "query"
          description: "Page number, defaults to 1."
          required: false
          schema:
            exclusiveMinimum: 0
            type: "integer"
            title: "Page"
            description: "Page number, defaults to 1."
            default: 1
        - name: "limit"
          in: "query"
          description: "Size of a page, defaults to 10. Maximum is 100."
          required: false
          schema:
            exclusiveMinimum: 0
            type: "integer"
            title: "Limit"
            description: "Size of a page, defaults to 10. Maximum is 100."
            default: 10
        - name: "sorting"
          in: "query"
          description: "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
          required: false
          schema:
            anyOf:
              - type: "array"
                items: {"$ref": "#/components/schemas/CustomerSortProperty"}
              - type: "null"
            title: "Sorting"
            description: "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
            default: ["-created_at"]
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ListResource_Customer_"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - customers:read
            - customers:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-pagination: {"type": "offsetLimit", "inputs": [{"name": "page", "in": "parameters", "type": "page"}, {"name": "limit", "in": "parameters", "type": "limit"}], "outputs": {"results": "$.items", "numPages": "$.pagination.max_page"}}
      x-speakeasy-group: "customers"
      x-speakeasy-name-override: "list"
    post:
      tags:
        - "customers"
        - "documented"
        - "featured"
      summary: "Create Customer"
      description: "Create a customer."
      operationId: "customers:create"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CustomerCreate"}
        required: true
      responses:
        "201":
          description: "Customer created."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Customer"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - customers:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-group: "customers"
      x-speakeasy-name-override: "create"
  "/v1/customers/{id}":
    get:
      tags:
        - "customers"
        - "documented"
        - "featured"
      summary: "Get Customer"
      description: "Get a customer by ID."
      operationId: "customers:get"
      parameters:
        - name: "id"
          in: "path"
          description: "The customer ID."
          required: true
          schema:
            type: "string"
            title: "Id"
            format: "uuid4"
            description: "The customer ID."
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Customer"}
        "404":
          description: "Customer not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - customers:read
            - customers:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-group: "customers"
      x-speakeasy-name-override: "get"
    delete:
      tags:
        - "customers"
        - "documented"
        - "featured"
      summary: "Delete Customer"
      description: "Delete a customer.\n\nImmediately cancels any active subscriptions and revokes any active benefits."
      operationId: "customers:delete"
      parameters:
        - name: "id"
          in: "path"
          description: "The customer ID."
          required: true
          schema:
            type: "string"
            title: "Id"
            format: "uuid4"
            description: "The customer ID."
      responses:
        "204":
          description: "Customer deleted."
        "404":
          description: "Customer not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - customers:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-group: "customers"
      x-speakeasy-name-override: "delete"
    patch:
      tags:
        - "customers"
        - "documented"
        - "featured"
      summary: "Update Customer"
      description: "Update a customer."
      operationId: "customers:update"
      parameters:
        - name: "id"
          in: "path"
          description: "The customer ID."
          required: true
          schema:
            type: "string"
            title: "Id"
            format: "uuid4"
            description: "The customer ID."
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CustomerUpdate"}
        required: true
      responses:
        "200":
          description: "Customer updated."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Customer"}
        "404":
          description: "Customer not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - customers:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-group: "customers"
      x-speakeasy-name-override: "update"
  "/v1/customer-portal/benefit-grants/":
    get:
      tags:
        - "customer_portal"
        - "benefit-grants"
        - "documented"
      summary: "List Benefit Grants"
      description: "List benefits grants of the authenticated customer or user."
      operationId: "customer_portal:benefit-grants:list"
      parameters:
        - name: "type"
          in: "query"
          description: "Filter by benefit type."
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/BenefitType"}
              - type: "array"
                items: {"$ref": "#/components/schemas/BenefitType"}
              - type: "null"
            title: "BenefitType Filter"
            description: "Filter by benefit type."
        - name: "benefit_id"
          in: "query"
          description: "Filter by benefit ID."
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "uuid4"
              - type: "array"
                items:
                  type: "string"
                  format: "uuid4"
              - type: "null"
            title: "BenefitID Filter"
            description: "Filter by benefit ID."
        - name: "organization_id"
          in: "query"
          description: "Filter by organization ID."
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "uuid4"
                description: "The organization ID."
                x-polar-selector-widget: {"resourceRoot": "/v1/organizations", "resourceName": "Organization", "displayProperty": "name"}
              - type: "array"
                items:
                  type: "string"
                  format: "uuid4"
                  description: "The organization ID."
                  x-polar-selector-widget: {"resourceRoot": "/v1/organizations", "resourceName": "Organization", "displayProperty": "name"}
              - type: "null"
            title: "OrganizationID Filter"
            description: "Filter by organization ID."
        - name: "checkout_id"
          in: "query"
          description: "Filter by checkout ID."
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "uuid4"
              - type: "array"
                items:
                  type: "string"
                  format: "uuid4"
              - type: "null"
            title: "CheckoutID Filter"
            description: "Filter by checkout ID."
        - name: "order_id"
          in: "query"
          description: "Filter by order ID."
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "uuid4"
              - type: "array"
                items:
                  type: "string"
                  format: "uuid4"
              - type: "null"
            title: "OrderID Filter"
            description: "Filter by order ID."
        - name: "subscription_id"
          in: "query"
          description: "Filter by subscription ID."
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "uuid4"
              - type: "array"
                items:
                  type: "string"
                  format: "uuid4"
              - type: "null"
            title: "SubscriptionID Filter"
            description: "Filter by subscription ID."
        - name: "page"
          in: "query"
          description: "Page number, defaults to 1."
          required: false
          schema:
            exclusiveMinimum: 0
            type: "integer"
            title: "Page"
            description: "Page number, defaults to 1."
            default: 1
        - name: "limit"
          in: "query"
          description: "Size of a page, defaults to 10. Maximum is 100."
          required: false
          schema:
            exclusiveMinimum: 0
            type: "integer"
            title: "Limit"
            description: "Size of a page, defaults to 10. Maximum is 100."
            default: 10
        - name: "sorting"
          in: "query"
          description: "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
          required: false
          schema:
            anyOf:
              - type: "array"
                items: {"$ref": "#/components/schemas/CustomerBenefitGrantSortProperty"}
              - type: "null"
            title: "Sorting"
            description: "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
            default: ["-granted_at"]
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ListResource_CustomerBenefitGrant_"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - customer_portal:read
            - customer_portal:write
        - pat: []
        - customer_session: []
      x-polar-allowed-subjects: ["Customer", "User"]
      x-speakeasy-pagination: {"type": "offsetLimit", "inputs": [{"name": "page", "in": "parameters", "type": "page"}, {"name": "limit", "in": "parameters", "type": "limit"}], "outputs": {"results": "$.items", "numPages": "$.pagination.max_page"}}
      x-speakeasy-group: "customer_portal.benefit-grants"
      x-speakeasy-name-override: "list"
  "/v1/customer-portal/benefit-grants/{id}":
    get:
      tags:
        - "customer_portal"
        - "benefit-grants"
        - "documented"
      summary: "Get Benefit Grant"
      description: "Get a benefit grant by ID for the authenticated customer or user."
      operationId: "customer_portal:benefit-grants:get"
      parameters:
        - name: "id"
          in: "path"
          description: "The benefit grant ID."
          required: true
          schema:
            type: "string"
            title: "Id"
            format: "uuid4"
            description: "The benefit grant ID."
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/CustomerBenefitGrant", "title": "CustomerBenefitGrant"}
        "404":
          description: "Benefit grant not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - customer_portal:read
            - customer_portal:write
        - pat: []
        - customer_session: []
      x-polar-allowed-subjects: ["Customer", "User"]
      x-speakeasy-group: "customer_portal.benefit-grants"
      x-speakeasy-name-override: "get"
    patch:
      tags:
        - "customer_portal"
        - "benefit-grants"
        - "documented"
      summary: "Update Benefit Grant"
      description: "Update a benefit grant for the authenticated customer or user."
      operationId: "customer_portal:benefit-grants:update"
      parameters:
        - name: "id"
          in: "path"
          description: "The benefit grant ID."
          required: true
          schema:
            type: "string"
            title: "Id"
            format: "uuid4"
            description: "The benefit grant ID."
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CustomerBenefitGrantUpdate", "title": "CustomerBenefitGrantUpdate"}
        required: true
      responses:
        "200":
          description: "Benefit grant updated."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/CustomerBenefitGrant", "title": "CustomerBenefitGrant"}
        "403":
          description: "The benefit grant is revoked and cannot be updated."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/NotPermitted"}
        "404":
          description: "Benefit grant not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - customer_portal:write
        - pat: []
        - customer_session: []
      x-polar-allowed-subjects: ["Customer", "User"]
      x-speakeasy-group: "customer_portal.benefit-grants"
      x-speakeasy-name-override: "update"
  "/v1/customer-portal/customers/{id}":
    get:
      tags:
        - "customer_portal"
        - "customers"
        - "documented"
      summary: "Get Customer"
      description: "Get a customer by ID for the authenticated customer or user."
      operationId: "customer_portal:customers:get"
      parameters:
        - name: "id"
          in: "path"
          description: "The customer ID."
          required: true
          schema:
            type: "string"
            title: "Id"
            format: "uuid4"
            description: "The customer ID."
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/CustomerPortalCustomer"}
        "404":
          description: "Customer not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - customer_portal:read
            - customer_portal:write
        - pat: []
        - customer_session: []
      x-polar-allowed-subjects: ["Customer", "User"]
      x-speakeasy-group: "customer_portal.customers"
      x-speakeasy-name-override: "get"
  "/v1/customer-portal/downloadables/":
    get:
      tags:
        - "customer_portal"
        - "downloadables"
        - "documented"
      summary: "List Downloadables"
      operationId: "customer_portal:downloadables:list"
      parameters:
        - name: "organization_id"
          in: "query"
          description: "Filter by organization ID."
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "uuid4"
                description: "The organization ID."
                x-polar-selector-widget: {"resourceRoot": "/v1/organizations", "resourceName": "Organization", "displayProperty": "name"}
              - type: "array"
                items:
                  type: "string"
                  format: "uuid4"
                  description: "The organization ID."
                  x-polar-selector-widget: {"resourceRoot": "/v1/organizations", "resourceName": "Organization", "displayProperty": "name"}
              - type: "null"
            title: "OrganizationID Filter"
            description: "Filter by organization ID."
        - name: "benefit_id"
          in: "query"
          description: "Filter by benefit ID."
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "uuid4"
                description: "The benefit ID."
                x-polar-selector-widget: {"resourceRoot": "/v1/benefits", "resourceName": "Benefit", "displayProperty": "description"}
              - type: "array"
                items:
                  type: "string"
                  format: "uuid4"
                  description: "The benefit ID."
                  x-polar-selector-widget: {"resourceRoot": "/v1/benefits", "resourceName": "Benefit", "displayProperty": "description"}
              - type: "null"
            title: "BenefitID Filter"
            description: "Filter by benefit ID."
        - name: "page"
          in: "query"
          description: "Page number, defaults to 1."
          required: false
          schema:
            exclusiveMinimum: 0
            type: "integer"
            title: "Page"
            description: "Page number, defaults to 1."
            default: 1
        - name: "limit"
          in: "query"
          description: "Size of a page, defaults to 10. Maximum is 100."
          required: false
          schema:
            exclusiveMinimum: 0
            type: "integer"
            title: "Limit"
            description: "Size of a page, defaults to 10. Maximum is 100."
            default: 10
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ListResource_DownloadableRead_"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - customer_portal:read
            - customer_portal:write
        - pat: []
        - customer_session: []
      x-polar-allowed-subjects: ["Customer", "User"]
      x-speakeasy-pagination: {"type": "offsetLimit", "inputs": [{"name": "page", "in": "parameters", "type": "page"}, {"name": "limit", "in": "parameters", "type": "limit"}], "outputs": {"results": "$.items", "numPages": "$.pagination.max_page"}}
      x-speakeasy-group: "customer_portal.downloadables"
      x-speakeasy-name-override: "list"
  "/v1/customer-portal/downloadables/{token}":
    get:
      tags:
        - "customer_portal"
        - "downloadables"
        - "documented"
      summary: "Get Downloadable"
      operationId: "customer_portal:downloadables:customer_portal.downloadables.get"
      parameters:
        - name: "token"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Token"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "302":
          description: "Redirected to download"
        "400":
          description: "Invalid signature"
        "404":
          description: "Downloadable not found"
        "410":
          description: "Expired signature"
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      x-speakeasy-group: "customer_portal.downloadables"
      x-speakeasy-name-override: "get"
  "/v1/customer-portal/license-keys/":
    get:
      tags:
        - "customer_portal"
        - "license_keys"
        - "documented"
        - "featured"
      summary: "List License Keys"
      operationId: "customer_portal:license_keys:list"
      parameters:
        - name: "organization_id"
          in: "query"
          description: "Filter by organization ID."
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "uuid4"
                description: "The organization ID."
                x-polar-selector-widget: {"resourceRoot": "/v1/organizations", "resourceName": "Organization", "displayProperty": "name"}
              - type: "array"
                items:
                  type: "string"
                  format: "uuid4"
                  description: "The organization ID."
                  x-polar-selector-widget: {"resourceRoot": "/v1/organizations", "resourceName": "Organization", "displayProperty": "name"}
              - type: "null"
            title: "OrganizationID Filter"
            description: "Filter by organization ID."
        - name: "benefit_id"
          in: "query"
          description: "Filter by a specific benefit"
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "uuid4"
                description: "The benefit ID."
                x-polar-selector-widget: {"resourceRoot": "/v1/benefits", "resourceName": "Benefit", "displayProperty": "description"}
              - type: "null"
            title: "Benefit Id"
            description: "Filter by a specific benefit"
        - name: "page"
          in: "query"
          description: "Page number, defaults to 1."
          required: false
          schema:
            exclusiveMinimum: 0
            type: "integer"
            title: "Page"
            description: "Page number, defaults to 1."
            default: 1
        - name: "limit"
          in: "query"
          description: "Size of a page, defaults to 10. Maximum is 100."
          required: false
          schema:
            exclusiveMinimum: 0
            type: "integer"
            title: "Limit"
            description: "Size of a page, defaults to 10. Maximum is 100."
            default: 10
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ListResource_LicenseKeyRead_"}
        "401":
          description: "Not authorized to manage license key."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Unauthorized"}
        "404":
          description: "License key not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - customer_portal:read
            - customer_portal:write
        - pat: []
        - customer_session: []
      x-polar-allowed-subjects: ["Customer", "User"]
      x-speakeasy-pagination: {"type": "offsetLimit", "inputs": [{"name": "page", "in": "parameters", "type": "page"}, {"name": "limit", "in": "parameters", "type": "limit"}], "outputs": {"results": "$.items", "numPages": "$.pagination.max_page"}}
      x-speakeasy-group: "customer_portal.license_keys"
      x-speakeasy-name-override: "list"
  "/v1/customer-portal/license-keys/{id}":
    get:
      tags:
        - "customer_portal"
        - "license_keys"
        - "documented"
        - "featured"
      summary: "Get License Key"
      description: "Get a license key."
      operationId: "customer_portal:license_keys:get"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Id"
            format: "uuid4"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/LicenseKeyWithActivations"}
        "404":
          description: "License key not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - customer_portal:read
            - customer_portal:write
        - pat: []
        - customer_session: []
      x-polar-allowed-subjects: ["Customer", "User"]
      x-speakeasy-group: "customer_portal.license_keys"
      x-speakeasy-name-override: "get"
  "/v1/customer-portal/license-keys/validate":
    post:
      tags:
        - "customer_portal"
        - "license_keys"
        - "documented"
        - "featured"
      summary: "Validate License Key"
      description: "Validate a license key."
      operationId: "customer_portal:license_keys:validate"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/LicenseKeyValidate"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ValidatedLicenseKey"}
        "404":
          description: "License key not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      x-speakeasy-group: "customer_portal.license_keys"
      x-speakeasy-name-override: "validate"
  "/v1/customer-portal/license-keys/activate":
    post:
      tags:
        - "customer_portal"
        - "license_keys"
        - "documented"
        - "featured"
      summary: "Activate License Key"
      description: "Activate a license key instance."
      operationId: "customer_portal:license_keys:activate"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/LicenseKeyActivate"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/LicenseKeyActivationRead"}
        "403":
          description: "License key activation not required or permitted (limit reached)."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/NotPermitted"}
        "404":
          description: "License key not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      x-speakeasy-group: "customer_portal.license_keys"
      x-speakeasy-name-override: "activate"
  "/v1/customer-portal/license-keys/deactivate":
    post:
      tags:
        - "customer_portal"
        - "license_keys"
        - "documented"
        - "featured"
      summary: "Deactivate License Key"
      description: "Deactivate a license key instance."
      operationId: "customer_portal:license_keys:deactivate"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/LicenseKeyDeactivate"}
        required: true
      responses:
        "204":
          description: "License key activation deactivated."
        "404":
          description: "License key not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      x-speakeasy-group: "customer_portal.license_keys"
      x-speakeasy-name-override: "deactivate"
  "/v1/customer-portal/orders/":
    get:
      tags:
        - "customer_portal"
        - "orders"
        - "documented"
      summary: "List Orders"
      description: "List orders of the authenticated customer or user."
      operationId: "customer_portal:orders:list"
      parameters:
        - name: "organization_id"
          in: "query"
          description: "Filter by organization ID."
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "uuid4"
                description: "The organization ID."
                x-polar-selector-widget: {"resourceRoot": "/v1/organizations", "resourceName": "Organization", "displayProperty": "name"}
              - type: "array"
                items:
                  type: "string"
                  format: "uuid4"
                  description: "The organization ID."
                  x-polar-selector-widget: {"resourceRoot": "/v1/organizations", "resourceName": "Organization", "displayProperty": "name"}
              - type: "null"
            title: "OrganizationID Filter"
            description: "Filter by organization ID."
        - name: "product_id"
          in: "query"
          description: "Filter by product ID."
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "uuid4"
                description: "The product ID."
                x-polar-selector-widget: {"resourceRoot": "/v1/products", "resourceName": "Product", "displayProperty": "name"}
              - type: "array"
                items:
                  type: "string"
                  format: "uuid4"
                  description: "The product ID."
                  x-polar-selector-widget: {"resourceRoot": "/v1/products", "resourceName": "Product", "displayProperty": "name"}
              - type: "null"
            title: "ProductID Filter"
            description: "Filter by product ID."
        - name: "product_price_type"
          in: "query"
          description: "Filter by product price type. `recurring` will return orders corresponding to subscriptions creations or renewals. `one_time` will return orders corresponding to one-time purchases."
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/ProductPriceType"}
              - type: "array"
                items: {"$ref": "#/components/schemas/ProductPriceType"}
              - type: "null"
            title: "ProductPriceType Filter"
            description: "Filter by product price type. `recurring` will return orders corresponding to subscriptions creations or renewals. `one_time` will return orders corresponding to one-time purchases."
        - name: "subscription_id"
          in: "query"
          description: "Filter by subscription ID."
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "uuid4"
              - type: "array"
                items:
                  type: "string"
                  format: "uuid4"
              - type: "null"
            title: "SubscriptionID Filter"
            description: "Filter by subscription ID."
        - name: "query"
          in: "query"
          description: "Search by product or organization name."
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "Query"
            description: "Search by product or organization name."
        - name: "page"
          in: "query"
          description: "Page number, defaults to 1."
          required: false
          schema:
            exclusiveMinimum: 0
            type: "integer"
            title: "Page"
            description: "Page number, defaults to 1."
            default: 1
        - name: "limit"
          in: "query"
          description: "Size of a page, defaults to 10. Maximum is 100."
          required: false
          schema:
            exclusiveMinimum: 0
            type: "integer"
            title: "Limit"
            description: "Size of a page, defaults to 10. Maximum is 100."
            default: 10
        - name: "sorting"
          in: "query"
          description: "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
          required: false
          schema:
            anyOf:
              - type: "array"
                items: {"$ref": "#/components/schemas/CustomerOrderSortProperty"}
              - type: "null"
            title: "Sorting"
            description: "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
            default: ["-created_at"]
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ListResource_CustomerOrder_"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - customer_portal:read
            - customer_portal:write
        - pat: []
        - customer_session: []
      x-polar-allowed-subjects: ["Customer", "User"]
      x-speakeasy-pagination: {"type": "offsetLimit", "inputs": [{"name": "page", "in": "parameters", "type": "page"}, {"name": "limit", "in": "parameters", "type": "limit"}], "outputs": {"results": "$.items", "numPages": "$.pagination.max_page"}}
      x-speakeasy-group: "customer_portal.orders"
      x-speakeasy-name-override: "list"
  "/v1/customer-portal/orders/{id}":
    get:
      tags:
        - "customer_portal"
        - "orders"
        - "documented"
      summary: "Get Order"
      description: "Get an order by ID for the authenticated customer or user."
      operationId: "customer_portal:orders:get"
      parameters:
        - name: "id"
          in: "path"
          description: "The order ID."
          required: true
          schema:
            type: "string"
            title: "Id"
            format: "uuid4"
            description: "The order ID."
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/CustomerOrder"}
        "404":
          description: "Order not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - customer_portal:read
            - customer_portal:write
        - pat: []
        - customer_session: []
      x-polar-allowed-subjects: ["Customer", "User"]
      x-speakeasy-group: "customer_portal.orders"
      x-speakeasy-name-override: "get"
  "/v1/customer-portal/orders/{id}/invoice":
    get:
      tags:
        - "customer_portal"
        - "orders"
        - "documented"
      summary: "Get Order Invoice"
      description: "Get an order's invoice data."
      operationId: "customer_portal:orders:invoice"
      parameters:
        - name: "id"
          in: "path"
          description: "The order ID."
          required: true
          schema:
            type: "string"
            title: "Id"
            format: "uuid4"
            description: "The order ID."
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/CustomerOrderInvoice"}
        "404":
          description: "Order not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - customer_portal:read
            - customer_portal:write
        - pat: []
        - customer_session: []
      x-polar-allowed-subjects: ["Customer", "User"]
      x-speakeasy-group: "customer_portal.orders"
      x-speakeasy-name-override: "invoice"
  "/v1/customer-portal/organizations/{slug}":
    get:
      tags:
        - "customer_portal"
        - "organizations"
        - "documented"
      summary: "Get Organization"
      description: "Get a customer portal's organization by slug."
      operationId: "customer_portal:organizations:get"
      parameters:
        - name: "slug"
          in: "path"
          description: "The organization slug."
          required: true
          schema:
            type: "string"
            title: "Slug"
            description: "The organization slug."
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Organization"}
        "404":
          description: "Organization not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      x-speakeasy-group: "customer_portal.organizations"
      x-speakeasy-name-override: "get"
  "/v1/customer-portal/subscriptions/":
    get:
      tags:
        - "customer_portal"
        - "subscriptions"
        - "documented"
        - "featured"
      summary: "List Subscriptions"
      description: "List subscriptions of the authenticated customer or user."
      operationId: "customer_portal:subscriptions:list"
      parameters:
        - name: "organization_id"
          in: "query"
          description: "Filter by organization ID."
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "uuid4"
                description: "The organization ID."
                x-polar-selector-widget: {"resourceRoot": "/v1/organizations", "resourceName": "Organization", "displayProperty": "name"}
              - type: "array"
                items:
                  type: "string"
                  format: "uuid4"
                  description: "The organization ID."
                  x-polar-selector-widget: {"resourceRoot": "/v1/organizations", "resourceName": "Organization", "displayProperty": "name"}
              - type: "null"
            title: "OrganizationID Filter"
            description: "Filter by organization ID."
        - name: "product_id"
          in: "query"
          description: "Filter by product ID."
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "uuid4"
                description: "The product ID."
                x-polar-selector-widget: {"resourceRoot": "/v1/products", "resourceName": "Product", "displayProperty": "name"}
              - type: "array"
                items:
                  type: "string"
                  format: "uuid4"
                  description: "The product ID."
                  x-polar-selector-widget: {"resourceRoot": "/v1/products", "resourceName": "Product", "displayProperty": "name"}
              - type: "null"
            title: "ProductID Filter"
            description: "Filter by product ID."
        - name: "active"
          in: "query"
          description: "Filter by active or cancelled subscription."
          required: false
          schema:
            anyOf:
              - type: "boolean"
              - type: "null"
            title: "Active"
            description: "Filter by active or cancelled subscription."
        - name: "query"
          in: "query"
          description: "Search by product or organization name."
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "Query"
            description: "Search by product or organization name."
        - name: "page"
          in: "query"
          description: "Page number, defaults to 1."
          required: false
          schema:
            exclusiveMinimum: 0
            type: "integer"
            title: "Page"
            description: "Page number, defaults to 1."
            default: 1
        - name: "limit"
          in: "query"
          description: "Size of a page, defaults to 10. Maximum is 100."
          required: false
          schema:
            exclusiveMinimum: 0
            type: "integer"
            title: "Limit"
            description: "Size of a page, defaults to 10. Maximum is 100."
            default: 10
        - name: "sorting"
          in: "query"
          description: "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
          required: false
          schema:
            anyOf:
              - type: "array"
                items: {"$ref": "#/components/schemas/CustomerSubscriptionSortProperty"}
              - type: "null"
            title: "Sorting"
            description: "Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order."
            default: ["-started_at"]
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ListResource_CustomerSubscription_"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - customer_portal:read
            - customer_portal:write
        - pat: []
        - customer_session: []
      x-polar-allowed-subjects: ["Customer", "User"]
      x-speakeasy-pagination: {"type": "offsetLimit", "inputs": [{"name": "page", "in": "parameters", "type": "page"}, {"name": "limit", "in": "parameters", "type": "limit"}], "outputs": {"results": "$.items", "numPages": "$.pagination.max_page"}}
      x-speakeasy-group: "customer_portal.subscriptions"
      x-speakeasy-name-override: "list"
  "/v1/customer-portal/subscriptions/{id}":
    get:
      tags:
        - "customer_portal"
        - "subscriptions"
        - "documented"
        - "featured"
      summary: "Get Subscription"
      description: "Get a subscription for the authenticated customer or user."
      operationId: "customer_portal:subscriptions:get"
      parameters:
        - name: "id"
          in: "path"
          description: "The subscription ID."
          required: true
          schema:
            type: "string"
            title: "Id"
            format: "uuid4"
            description: "The subscription ID."
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/CustomerSubscription"}
        "404":
          description: "Subscription not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - customer_portal:read
            - customer_portal:write
        - pat: []
        - customer_session: []
      x-polar-allowed-subjects: ["Customer", "User"]
      x-speakeasy-group: "customer_portal.subscriptions"
      x-speakeasy-name-override: "get"
    delete:
      tags:
        - "customer_portal"
        - "subscriptions"
        - "documented"
        - "featured"
      summary: "Cancel Subscription"
      description: "Cancel a subscription of the authenticated customer or user."
      operationId: "customer_portal:subscriptions:cancel"
      parameters:
        - name: "id"
          in: "path"
          description: "The subscription ID."
          required: true
          schema:
            type: "string"
            title: "Id"
            format: "uuid4"
            description: "The subscription ID."
      responses:
        "200":
          description: "Subscription canceled."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/CustomerSubscription"}
        "403":
          description: "This subscription is already canceled or will be at the end of the period."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/AlreadyCanceledSubscription"}
        "404":
          description: "Subscription not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - customer_portal:write
        - pat: []
        - customer_session: []
      x-polar-allowed-subjects: ["Customer", "User"]
      x-speakeasy-group: "customer_portal.subscriptions"
      x-speakeasy-name-override: "cancel"
    patch:
      tags:
        - "customer_portal"
        - "subscriptions"
        - "documented"
        - "featured"
      summary: "Update Subscription"
      description: "Update a subscription of the authenticated customer or user."
      operationId: "customer_portal:subscriptions:update"
      parameters:
        - name: "id"
          in: "path"
          description: "The subscription ID."
          required: true
          schema:
            type: "string"
            title: "Id"
            format: "uuid4"
            description: "The subscription ID."
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CustomerSubscriptionUpdate"}
        required: true
      responses:
        "200":
          description: "Subscription updated."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/CustomerSubscription"}
        "404":
          description: "Subscription not found."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ResourceNotFound"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - customer_portal:write
        - pat: []
        - customer_session: []
      x-polar-allowed-subjects: ["Customer", "User"]
      x-speakeasy-group: "customer_portal.subscriptions"
      x-speakeasy-name-override: "update"
  "/v1/customer-sessions/":
    post:
      tags:
        - "customer-sessions"
        - "documented"
        - "featured"
      summary: "Create Customer Session"
      description: "Create a customer session."
      operationId: "customer-sessions:create"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CustomerSessionCreate"}
        required: true
      responses:
        "201":
          description: "Customer session created."
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/CustomerSession"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - oidc:
            - customer_sessions:write
        - pat: []
      x-polar-allowed-subjects: ["Organization", "User"]
      x-speakeasy-group: "customer-sessions"
      x-speakeasy-name-override: "create"
components:
  schemas:
    "Address":
      type: "object"
      properties:
        "line1":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Line1"
        "line2":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Line2"
        "postal_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Postal Code"
        "city":
          anyOf:
            - type: "string"
            - type: "null"
          title: "City"
        "state":
          anyOf:
            - type: "string"
            - type: "null"
          title: "State"
        "country":
          type: "string"
          title: "Country"
          pattern: "^\\w{2}$"
      title: "Address"
      required:
        - "country"
    "AdvertisementCampaign":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
        "image_url":
          type: "string"
          title: "Image Url"
          maxLength: 2083
          minLength: 1
          format: "uri"
        "image_url_dark":
          anyOf:
            - type: "string"
              maxLength: 2083
              minLength: 1
              format: "uri"
            - type: "null"
          title: "Image Url Dark"
        "text":
          type: "string"
          title: "Text"
        "link_url":
          type: "string"
          title: "Link Url"
          maxLength: 2083
          minLength: 1
          format: "uri"
      title: "AdvertisementCampaign"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "image_url"
        - "image_url_dark"
        - "text"
        - "link_url"
    "AdvertisementCampaignListResource":
      type: "object"
      properties:
        "items":
          type: "array"
          items: {"$ref": "#/components/schemas/AdvertisementCampaign"}
          title: "Items"
        "pagination": {"$ref": "#/components/schemas/Pagination"}
        "dimensions":
          type: "array"
          prefixItems:
            - type: "integer"
            - type: "integer"
          items:
            type: "integer"
          title: "Dimensions"
          maxItems: 2
          minItems: 2
          description: "The dimensions (width, height) in pixels of the advertisement images."
      title: "AdvertisementCampaignListResource"
      required:
        - "items"
        - "pagination"
        - "dimensions"
    "AdvertisementSortProperty":
      type: "string"
      title: "AdvertisementSortProperty"
      enum:
        - "created_at"
        - "-created_at"
        - "granted_at"
        - "-granted_at"
        - "views"
        - "-views"
        - "clicks"
        - "-clicks"
    "AlreadyCanceledSubscription":
      type: "object"
      properties:
        "error":
          type: "string"
          title: "Error"
          enum:
            - "AlreadyCanceledSubscription"
          const: "AlreadyCanceledSubscription"
        "detail":
          type: "string"
          title: "Detail"
      title: "AlreadyCanceledSubscription"
      required:
        - "error"
        - "detail"
    "Assignee":
      type: "object"
      properties:
        "id":
          type: "integer"
          title: "Id"
        "login":
          type: "string"
          title: "Login"
        "html_url":
          type: "string"
          title: "Html Url"
          maxLength: 2083
          minLength: 1
          format: "uri"
        "avatar_url":
          type: "string"
          title: "Avatar Url"
          maxLength: 2083
          minLength: 1
          format: "uri"
      title: "Assignee"
      required:
        - "id"
        - "login"
        - "html_url"
        - "avatar_url"
    "AttachedCustomField":
      type: "object"
      properties:
        "custom_field_id":
          type: "string"
          title: "Custom Field Id"
          format: "uuid4"
          description: "ID of the custom field."
        "custom_field": {"$ref": "#/components/schemas/CustomField", "title": "CustomField"}
        "order":
          type: "integer"
          title: "Order"
          description: "Order of the custom field in the resource."
        "required":
          type: "boolean"
          title: "Required"
          description: "Whether the value is required for this custom field."
      title: "AttachedCustomField"
      required:
        - "custom_field_id"
        - "custom_field"
        - "order"
        - "required"
      description: "Schema of a custom field attached to a resource."
    "AttachedCustomFieldCreate":
      type: "object"
      properties:
        "custom_field_id":
          type: "string"
          title: "Custom Field Id"
          format: "uuid4"
          description: "ID of the custom field to attach."
        "required":
          type: "boolean"
          title: "Required"
          description: "Whether the value is required for this custom field."
      title: "AttachedCustomFieldCreate"
      required:
        - "custom_field_id"
        - "required"
      description: "Schema to attach a custom field to a resource."
    "Author":
      type: "object"
      properties:
        "id":
          type: "integer"
          title: "Id"
        "login":
          type: "string"
          title: "Login"
        "html_url":
          type: "string"
          title: "Html Url"
          maxLength: 2083
          minLength: 1
          format: "uri"
        "avatar_url":
          type: "string"
          title: "Avatar Url"
          maxLength: 2083
          minLength: 1
          format: "uri"
      title: "Author"
      required:
        - "id"
        - "login"
        - "html_url"
        - "avatar_url"
    "AuthorizeOrganization":
      type: "object"
      properties:
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
        "slug":
          type: "string"
          title: "Slug"
        "avatar_url":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Avatar Url"
      title: "AuthorizeOrganization"
      required:
        - "id"
        - "slug"
        - "avatar_url"
    "AuthorizeResponseOrganization":
      type: "object"
      properties:
        "client": {"$ref": "#/components/schemas/OAuth2ClientPublic"}
        "sub_type":
          type: "string"
          title: "Sub Type"
          enum:
            - "organization"
          const: "organization"
        "sub":
          anyOf:
            - {"$ref": "#/components/schemas/AuthorizeOrganization"}
            - type: "null"
        "scopes":
          type: "array"
          items: {"$ref": "#/components/schemas/Scope"}
          title: "Scopes"
        "organizations":
          type: "array"
          items: {"$ref": "#/components/schemas/AuthorizeOrganization"}
          title: "Organizations"
      title: "AuthorizeResponseOrganization"
      required:
        - "client"
        - "sub_type"
        - "sub"
        - "scopes"
        - "organizations"
    "AuthorizeResponseUser":
      type: "object"
      properties:
        "client": {"$ref": "#/components/schemas/OAuth2ClientPublic"}
        "sub_type":
          type: "string"
          title: "Sub Type"
          enum:
            - "user"
          const: "user"
        "sub":
          anyOf:
            - {"$ref": "#/components/schemas/AuthorizeUser"}
            - type: "null"
        "scopes":
          type: "array"
          items: {"$ref": "#/components/schemas/Scope"}
          title: "Scopes"
      title: "AuthorizeResponseUser"
      required:
        - "client"
        - "sub_type"
        - "sub"
        - "scopes"
    "AuthorizeUser":
      type: "object"
      properties:
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
        "email":
          type: "string"
          title: "Email"
          format: "email"
        "avatar_url":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Avatar Url"
      title: "AuthorizeUser"
      required:
        - "id"
        - "email"
        - "avatar_url"
    "Benefit":
      anyOf:
        - {"$ref": "#/components/schemas/BenefitAds"}
        - {"$ref": "#/components/schemas/BenefitCustom"}
        - {"$ref": "#/components/schemas/BenefitDiscord"}
        - {"$ref": "#/components/schemas/BenefitGitHubRepository"}
        - {"$ref": "#/components/schemas/BenefitDownloadables"}
        - {"$ref": "#/components/schemas/BenefitLicenseKeys"}
    "BenefitAds":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the benefit."
        "type":
          type: "string"
          title: "Type"
          enum:
            - "ads"
          const: "ads"
        "description":
          type: "string"
          title: "Description"
          description: "The description of the benefit."
        "selectable":
          type: "boolean"
          title: "Selectable"
          description: "Whether the benefit is selectable when creating a product."
        "deletable":
          type: "boolean"
          title: "Deletable"
          description: "Whether the benefit is deletable."
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
          description: "The ID of the organization owning the benefit."
        "properties": {"$ref": "#/components/schemas/BenefitAdsProperties"}
      title: "BenefitAds"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "type"
        - "description"
        - "selectable"
        - "deletable"
        - "organization_id"
        - "properties"
      description: "A benefit of type `ads`.\n\nUse it so your backers can display ads on your README, website, etc."
    "BenefitAdsCreate":
      type: "object"
      properties:
        "type":
          type: "string"
          title: "Type"
          enum:
            - "ads"
          const: "ads"
        "description":
          type: "string"
          title: "Description"
          maxLength: 42
          minLength: 3
          description: "The description of the benefit. Will be displayed on products having this benefit."
        "organization_id":
          anyOf:
            - type: "string"
              format: "uuid4"
              description: "The organization ID."
              x-polar-selector-widget: {"displayProperty": "name", "resourceName": "Organization", "resourceRoot": "/v1/organizations"}
            - type: "null"
          title: "Organization Id"
          description: "The ID of the organization owning the benefit. **Required unless you use an organization token.**"
        "properties": {"$ref": "#/components/schemas/BenefitAdsProperties"}
      title: "BenefitAdsCreate"
      required:
        - "type"
        - "description"
        - "properties"
    "BenefitAdsProperties":
      type: "object"
      properties:
        "image_height":
          type: "integer"
          title: "Image Height"
          description: "The height of the displayed ad."
          default: 400
        "image_width":
          type: "integer"
          title: "Image Width"
          description: "The width of the displayed ad."
          default: 400
      title: "BenefitAdsProperties"
      description: "Properties for a benefit of type `ads`."
    "BenefitAdsSubscriber":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the benefit."
        "type":
          type: "string"
          title: "Type"
          enum:
            - "ads"
          const: "ads"
        "description":
          type: "string"
          title: "Description"
          description: "The description of the benefit."
        "selectable":
          type: "boolean"
          title: "Selectable"
          description: "Whether the benefit is selectable when creating a product."
        "deletable":
          type: "boolean"
          title: "Deletable"
          description: "Whether the benefit is deletable."
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
          description: "The ID of the organization owning the benefit."
        "organization": {"$ref": "#/components/schemas/Organization"}
        "properties": {"$ref": "#/components/schemas/BenefitAdsProperties"}
      title: "BenefitAdsSubscriber"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "type"
        - "description"
        - "selectable"
        - "deletable"
        - "organization_id"
        - "organization"
        - "properties"
    "BenefitAdsUpdate":
      type: "object"
      properties:
        "description":
          anyOf:
            - type: "string"
              maxLength: 42
              minLength: 3
            - type: "null"
          title: "Description"
          description: "The description of the benefit. Will be displayed on products having this benefit."
        "type":
          type: "string"
          title: "Type"
          enum:
            - "ads"
          const: "ads"
        "properties":
          anyOf:
            - {"$ref": "#/components/schemas/BenefitAdsProperties"}
            - type: "null"
      title: "BenefitAdsUpdate"
      required:
        - "type"
    "BenefitBase":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the benefit."
        "type": {"$ref": "#/components/schemas/BenefitType", "description": "The type of the benefit."}
        "description":
          type: "string"
          title: "Description"
          description: "The description of the benefit."
        "selectable":
          type: "boolean"
          title: "Selectable"
          description: "Whether the benefit is selectable when creating a product."
        "deletable":
          type: "boolean"
          title: "Deletable"
          description: "Whether the benefit is deletable."
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
          description: "The ID of the organization owning the benefit."
      title: "BenefitBase"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "type"
        - "description"
        - "selectable"
        - "deletable"
        - "organization_id"
    "BenefitCreate":
      oneOf:
        - {"$ref": "#/components/schemas/BenefitCustomCreate"}
        - {"$ref": "#/components/schemas/BenefitAdsCreate"}
        - {"$ref": "#/components/schemas/BenefitDiscordCreate"}
        - {"$ref": "#/components/schemas/BenefitGitHubRepositoryCreate"}
        - {"$ref": "#/components/schemas/BenefitDownloadablesCreate"}
        - {"$ref": "#/components/schemas/BenefitLicenseKeysCreate"}
      discriminator:
        propertyName: "type"
        mapping:
          "ads": "#/components/schemas/BenefitAdsCreate"
          "custom": "#/components/schemas/BenefitCustomCreate"
          "discord": "#/components/schemas/BenefitDiscordCreate"
          "downloadables": "#/components/schemas/BenefitDownloadablesCreate"
          "github_repository": "#/components/schemas/BenefitGitHubRepositoryCreate"
          "license_keys": "#/components/schemas/BenefitLicenseKeysCreate"
    "BenefitCustom":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the benefit."
        "type":
          type: "string"
          title: "Type"
          enum:
            - "custom"
          const: "custom"
        "description":
          type: "string"
          title: "Description"
          description: "The description of the benefit."
        "selectable":
          type: "boolean"
          title: "Selectable"
          description: "Whether the benefit is selectable when creating a product."
        "deletable":
          type: "boolean"
          title: "Deletable"
          description: "Whether the benefit is deletable."
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
          description: "The ID of the organization owning the benefit."
        "properties": {"$ref": "#/components/schemas/BenefitCustomProperties"}
        "is_tax_applicable":
          type: "boolean"
          title: "Is Tax Applicable"
          deprecated: true
      title: "BenefitCustom"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "type"
        - "description"
        - "selectable"
        - "deletable"
        - "organization_id"
        - "properties"
        - "is_tax_applicable"
      description: "A benefit of type `custom`.\n\nUse it to grant any kind of benefit that doesn't fit in the other types."
    "BenefitCustomCreate":
      type: "object"
      properties:
        "type":
          type: "string"
          title: "Type"
          enum:
            - "custom"
          const: "custom"
        "description":
          type: "string"
          title: "Description"
          maxLength: 42
          minLength: 3
          description: "The description of the benefit. Will be displayed on products having this benefit."
        "organization_id":
          anyOf:
            - type: "string"
              format: "uuid4"
              description: "The organization ID."
              x-polar-selector-widget: {"displayProperty": "name", "resourceName": "Organization", "resourceRoot": "/v1/organizations"}
            - type: "null"
          title: "Organization Id"
          description: "The ID of the organization owning the benefit. **Required unless you use an organization token.**"
        "properties": {"$ref": "#/components/schemas/BenefitCustomCreateProperties"}
      title: "BenefitCustomCreate"
      required:
        - "type"
        - "description"
        - "properties"
      description: "Schema to create a benefit of type `custom`."
    "BenefitCustomCreateProperties":
      type: "object"
      properties:
        "note":
          anyOf:
            - anyOf:
                - type: "string"
                - type: "null"
              description: "Private note to be shared with customers who have this benefit granted."
            - type: "null"
          title: "Note"
      title: "BenefitCustomCreateProperties"
      description: "Properties for creating a benefit of type `custom`."
    "BenefitCustomProperties":
      type: "object"
      properties:
        "note":
          anyOf:
            - anyOf:
                - type: "string"
                - type: "null"
              description: "Private note to be shared with customers who have this benefit granted."
            - type: "null"
          title: "Note"
      title: "BenefitCustomProperties"
      required:
        - "note"
      description: "Properties for a benefit of type `custom`."
    "BenefitCustomSubscriber":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the benefit."
        "type":
          type: "string"
          title: "Type"
          enum:
            - "custom"
          const: "custom"
        "description":
          type: "string"
          title: "Description"
          description: "The description of the benefit."
        "selectable":
          type: "boolean"
          title: "Selectable"
          description: "Whether the benefit is selectable when creating a product."
        "deletable":
          type: "boolean"
          title: "Deletable"
          description: "Whether the benefit is deletable."
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
          description: "The ID of the organization owning the benefit."
        "organization": {"$ref": "#/components/schemas/Organization"}
        "properties": {"$ref": "#/components/schemas/BenefitCustomSubscriberProperties"}
      title: "BenefitCustomSubscriber"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "type"
        - "description"
        - "selectable"
        - "deletable"
        - "organization_id"
        - "organization"
        - "properties"
    "BenefitCustomSubscriberProperties":
      type: "object"
      properties:
        "note":
          anyOf:
            - anyOf:
                - type: "string"
                - type: "null"
              description: "Private note to be shared with customers who have this benefit granted."
            - type: "null"
          title: "Note"
      title: "BenefitCustomSubscriberProperties"
      required:
        - "note"
      description: "Properties available to subscribers for a benefit of type `custom`."
    "BenefitCustomUpdate":
      type: "object"
      properties:
        "description":
          anyOf:
            - type: "string"
              maxLength: 42
              minLength: 3
            - type: "null"
          title: "Description"
          description: "The description of the benefit. Will be displayed on products having this benefit."
        "type":
          type: "string"
          title: "Type"
          enum:
            - "custom"
          const: "custom"
        "properties":
          anyOf:
            - {"$ref": "#/components/schemas/BenefitCustomProperties"}
            - type: "null"
      title: "BenefitCustomUpdate"
      required:
        - "type"
    "BenefitDiscord":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the benefit."
        "type":
          type: "string"
          title: "Type"
          enum:
            - "discord"
          const: "discord"
        "description":
          type: "string"
          title: "Description"
          description: "The description of the benefit."
        "selectable":
          type: "boolean"
          title: "Selectable"
          description: "Whether the benefit is selectable when creating a product."
        "deletable":
          type: "boolean"
          title: "Deletable"
          description: "Whether the benefit is deletable."
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
          description: "The ID of the organization owning the benefit."
        "properties": {"$ref": "#/components/schemas/BenefitDiscordProperties"}
      title: "BenefitDiscord"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "type"
        - "description"
        - "selectable"
        - "deletable"
        - "organization_id"
        - "properties"
      description: "A benefit of type `discord`.\n\nUse it to automatically invite your backers to a Discord server."
    "BenefitDiscordCreate":
      type: "object"
      properties:
        "type":
          type: "string"
          title: "Type"
          enum:
            - "discord"
          const: "discord"
        "description":
          type: "string"
          title: "Description"
          maxLength: 42
          minLength: 3
          description: "The description of the benefit. Will be displayed on products having this benefit."
        "organization_id":
          anyOf:
            - type: "string"
              format: "uuid4"
              description: "The organization ID."
              x-polar-selector-widget: {"displayProperty": "name", "resourceName": "Organization", "resourceRoot": "/v1/organizations"}
            - type: "null"
          title: "Organization Id"
          description: "The ID of the organization owning the benefit. **Required unless you use an organization token.**"
        "properties": {"$ref": "#/components/schemas/BenefitDiscordCreateProperties"}
      title: "BenefitDiscordCreate"
      required:
        - "type"
        - "description"
        - "properties"
    "BenefitDiscordCreateProperties":
      type: "object"
      properties:
        "guild_token":
          type: "string"
          title: "Guild Token"
        "role_id":
          type: "string"
          title: "Role Id"
          description: "The ID of the Discord role to grant."
      title: "BenefitDiscordCreateProperties"
      required:
        - "guild_token"
        - "role_id"
      description: "Properties to create a benefit of type `discord`."
    "BenefitDiscordProperties":
      type: "object"
      properties:
        "guild_id":
          type: "string"
          title: "Guild Id"
          description: "The ID of the Discord server."
        "role_id":
          type: "string"
          title: "Role Id"
          description: "The ID of the Discord role to grant."
        "guild_token":
          type: "string"
          title: "Guild Token"
          readOnly: true
      title: "BenefitDiscordProperties"
      required:
        - "guild_id"
        - "role_id"
        - "guild_token"
      description: "Properties for a benefit of type `discord`."
    "BenefitDiscordSubscriber":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the benefit."
        "type":
          type: "string"
          title: "Type"
          enum:
            - "discord"
          const: "discord"
        "description":
          type: "string"
          title: "Description"
          description: "The description of the benefit."
        "selectable":
          type: "boolean"
          title: "Selectable"
          description: "Whether the benefit is selectable when creating a product."
        "deletable":
          type: "boolean"
          title: "Deletable"
          description: "Whether the benefit is deletable."
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
          description: "The ID of the organization owning the benefit."
        "organization": {"$ref": "#/components/schemas/Organization"}
        "properties": {"$ref": "#/components/schemas/BenefitDiscordSubscriberProperties"}
      title: "BenefitDiscordSubscriber"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "type"
        - "description"
        - "selectable"
        - "deletable"
        - "organization_id"
        - "organization"
        - "properties"
    "BenefitDiscordSubscriberProperties":
      type: "object"
      properties:
        "guild_id":
          type: "string"
          title: "Guild Id"
          description: "The ID of the Discord server."
      title: "BenefitDiscordSubscriberProperties"
      required:
        - "guild_id"
      description: "Properties available to subscribers for a benefit of type `discord`."
    "BenefitDiscordUpdate":
      type: "object"
      properties:
        "description":
          anyOf:
            - type: "string"
              maxLength: 42
              minLength: 3
            - type: "null"
          title: "Description"
          description: "The description of the benefit. Will be displayed on products having this benefit."
        "type":
          type: "string"
          title: "Type"
          enum:
            - "discord"
          const: "discord"
        "properties":
          anyOf:
            - {"$ref": "#/components/schemas/BenefitDiscordCreateProperties"}
            - type: "null"
      title: "BenefitDiscordUpdate"
      required:
        - "type"
    "BenefitDownloadables":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the benefit."
        "type":
          type: "string"
          title: "Type"
          enum:
            - "downloadables"
          const: "downloadables"
        "description":
          type: "string"
          title: "Description"
          description: "The description of the benefit."
        "selectable":
          type: "boolean"
          title: "Selectable"
          description: "Whether the benefit is selectable when creating a product."
        "deletable":
          type: "boolean"
          title: "Deletable"
          description: "Whether the benefit is deletable."
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
          description: "The ID of the organization owning the benefit."
        "properties": {"$ref": "#/components/schemas/BenefitDownloadablesProperties"}
      title: "BenefitDownloadables"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "type"
        - "description"
        - "selectable"
        - "deletable"
        - "organization_id"
        - "properties"
    "BenefitDownloadablesCreate":
      type: "object"
      properties:
        "type":
          type: "string"
          title: "Type"
          enum:
            - "downloadables"
          const: "downloadables"
        "description":
          type: "string"
          title: "Description"
          maxLength: 42
          minLength: 3
          description: "The description of the benefit. Will be displayed on products having this benefit."
        "organization_id":
          anyOf:
            - type: "string"
              format: "uuid4"
              description: "The organization ID."
              x-polar-selector-widget: {"displayProperty": "name", "resourceName": "Organization", "resourceRoot": "/v1/organizations"}
            - type: "null"
          title: "Organization Id"
          description: "The ID of the organization owning the benefit. **Required unless you use an organization token.**"
        "properties": {"$ref": "#/components/schemas/BenefitDownloadablesCreateProperties"}
      title: "BenefitDownloadablesCreate"
      required:
        - "type"
        - "description"
        - "properties"
    "BenefitDownloadablesCreateProperties":
      type: "object"
      properties:
        "archived":
          type: "object"
          title: "Archived"
          additionalProperties:
            type: "boolean"
          default: {}
        "files":
          type: "array"
          items:
            type: "string"
            format: "uuid4"
          title: "Files"
          minItems: 1
      title: "BenefitDownloadablesCreateProperties"
      required:
        - "files"
    "BenefitDownloadablesProperties":
      type: "object"
      properties:
        "archived":
          type: "object"
          title: "Archived"
          additionalProperties:
            type: "boolean"
        "files":
          type: "array"
          items:
            type: "string"
            format: "uuid4"
          title: "Files"
      title: "BenefitDownloadablesProperties"
      required:
        - "archived"
        - "files"
    "BenefitDownloadablesSubscriber":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the benefit."
        "type":
          type: "string"
          title: "Type"
          enum:
            - "downloadables"
          const: "downloadables"
        "description":
          type: "string"
          title: "Description"
          description: "The description of the benefit."
        "selectable":
          type: "boolean"
          title: "Selectable"
          description: "Whether the benefit is selectable when creating a product."
        "deletable":
          type: "boolean"
          title: "Deletable"
          description: "Whether the benefit is deletable."
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
          description: "The ID of the organization owning the benefit."
        "organization": {"$ref": "#/components/schemas/Organization"}
        "properties": {"$ref": "#/components/schemas/BenefitDownloadablesSubscriberProperties"}
      title: "BenefitDownloadablesSubscriber"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "type"
        - "description"
        - "selectable"
        - "deletable"
        - "organization_id"
        - "organization"
        - "properties"
    "BenefitDownloadablesSubscriberProperties":
      type: "object"
      properties:
        "active_files":
          type: "array"
          items:
            type: "string"
            format: "uuid4"
          title: "Active Files"
      title: "BenefitDownloadablesSubscriberProperties"
      required:
        - "active_files"
    "BenefitDownloadablesUpdate":
      type: "object"
      properties:
        "description":
          anyOf:
            - type: "string"
              maxLength: 42
              minLength: 3
            - type: "null"
          title: "Description"
          description: "The description of the benefit. Will be displayed on products having this benefit."
        "type":
          type: "string"
          title: "Type"
          enum:
            - "downloadables"
          const: "downloadables"
        "properties":
          anyOf:
            - {"$ref": "#/components/schemas/BenefitDownloadablesCreateProperties"}
            - type: "null"
      title: "BenefitDownloadablesUpdate"
      required:
        - "type"
    "BenefitGitHubRepository":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the benefit."
        "type":
          type: "string"
          title: "Type"
          enum:
            - "github_repository"
          const: "github_repository"
        "description":
          type: "string"
          title: "Description"
          description: "The description of the benefit."
        "selectable":
          type: "boolean"
          title: "Selectable"
          description: "Whether the benefit is selectable when creating a product."
        "deletable":
          type: "boolean"
          title: "Deletable"
          description: "Whether the benefit is deletable."
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
          description: "The ID of the organization owning the benefit."
        "properties": {"$ref": "#/components/schemas/BenefitGitHubRepositoryProperties"}
      title: "BenefitGitHubRepository"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "type"
        - "description"
        - "selectable"
        - "deletable"
        - "organization_id"
        - "properties"
      description: "A benefit of type `github_repository`.\n\nUse it to automatically invite your backers to a private GitHub repository."
    "BenefitGitHubRepositoryCreate":
      type: "object"
      properties:
        "type":
          type: "string"
          title: "Type"
          enum:
            - "github_repository"
          const: "github_repository"
        "description":
          type: "string"
          title: "Description"
          maxLength: 42
          minLength: 3
          description: "The description of the benefit. Will be displayed on products having this benefit."
        "organization_id":
          anyOf:
            - type: "string"
              format: "uuid4"
              description: "The organization ID."
              x-polar-selector-widget: {"displayProperty": "name", "resourceName": "Organization", "resourceRoot": "/v1/organizations"}
            - type: "null"
          title: "Organization Id"
          description: "The ID of the organization owning the benefit. **Required unless you use an organization token.**"
        "properties": {"$ref": "#/components/schemas/BenefitGitHubRepositoryCreateProperties"}
      title: "BenefitGitHubRepositoryCreate"
      required:
        - "type"
        - "description"
        - "properties"
    "BenefitGitHubRepositoryCreateProperties":
      type: "object"
      properties:
        "repository_owner":
          type: "string"
          examples:
            - "polarsource"
          title: "Repository Owner"
          description: "The owner of the repository."
        "repository_name":
          type: "string"
          examples:
            - "private_repo"
          title: "Repository Name"
          description: "The name of the repository."
        "permission":
          type: "string"
          title: "Permission"
          enum:
            - "pull"
            - "triage"
            - "push"
            - "maintain"
            - "admin"
          description: "The permission level to grant. Read more about roles and their permissions on [GitHub documentation](https://docs.github.com/en/organizations/managing-user-access-to-your-organizations-repositories/managing-repository-roles/repository-roles-for-an-organization#permissions-for-each-role)."
      title: "BenefitGitHubRepositoryCreateProperties"
      required:
        - "repository_owner"
        - "repository_name"
        - "permission"
      description: "Properties to create a benefit of type `github_repository`."
    "BenefitGitHubRepositoryProperties":
      type: "object"
      properties:
        "repository_owner":
          type: "string"
          examples:
            - "polarsource"
          title: "Repository Owner"
          description: "The owner of the repository."
        "repository_name":
          type: "string"
          examples:
            - "private_repo"
          title: "Repository Name"
          description: "The name of the repository."
        "permission":
          type: "string"
          title: "Permission"
          enum:
            - "pull"
            - "triage"
            - "push"
            - "maintain"
            - "admin"
          description: "The permission level to grant. Read more about roles and their permissions on [GitHub documentation](https://docs.github.com/en/organizations/managing-user-access-to-your-organizations-repositories/managing-repository-roles/repository-roles-for-an-organization#permissions-for-each-role)."
        "repository_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Repository Id"
          deprecated: true
      title: "BenefitGitHubRepositoryProperties"
      required:
        - "repository_owner"
        - "repository_name"
        - "permission"
      description: "Properties for a benefit of type `github_repository`."
    "BenefitGitHubRepositorySubscriber":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the benefit."
        "type":
          type: "string"
          title: "Type"
          enum:
            - "github_repository"
          const: "github_repository"
        "description":
          type: "string"
          title: "Description"
          description: "The description of the benefit."
        "selectable":
          type: "boolean"
          title: "Selectable"
          description: "Whether the benefit is selectable when creating a product."
        "deletable":
          type: "boolean"
          title: "Deletable"
          description: "Whether the benefit is deletable."
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
          description: "The ID of the organization owning the benefit."
        "organization": {"$ref": "#/components/schemas/Organization"}
        "properties": {"$ref": "#/components/schemas/BenefitGitHubRepositorySubscriberProperties"}
      title: "BenefitGitHubRepositorySubscriber"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "type"
        - "description"
        - "selectable"
        - "deletable"
        - "organization_id"
        - "organization"
        - "properties"
    "BenefitGitHubRepositorySubscriberProperties":
      type: "object"
      properties:
        "repository_owner":
          type: "string"
          examples:
            - "polarsource"
          title: "Repository Owner"
          description: "The owner of the repository."
        "repository_name":
          type: "string"
          examples:
            - "private_repo"
          title: "Repository Name"
          description: "The name of the repository."
      title: "BenefitGitHubRepositorySubscriberProperties"
      required:
        - "repository_owner"
        - "repository_name"
      description: "Properties available to subscribers for a benefit of type `github_repository`."
    "BenefitGitHubRepositoryUpdate":
      type: "object"
      properties:
        "description":
          anyOf:
            - type: "string"
              maxLength: 42
              minLength: 3
            - type: "null"
          title: "Description"
          description: "The description of the benefit. Will be displayed on products having this benefit."
        "type":
          type: "string"
          title: "Type"
          enum:
            - "github_repository"
          const: "github_repository"
        "properties":
          anyOf:
            - {"$ref": "#/components/schemas/BenefitGitHubRepositoryCreateProperties"}
            - type: "null"
      title: "BenefitGitHubRepositoryUpdate"
      required:
        - "type"
    "BenefitGrant":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the grant."
        "granted_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Granted At"
          description: "The timestamp when the benefit was granted. If `None`, the benefit is not granted."
        "is_granted":
          type: "boolean"
          title: "Is Granted"
          description: "Whether the benefit is granted."
        "revoked_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Revoked At"
          description: "The timestamp when the benefit was revoked. If `None`, the benefit is not revoked."
        "is_revoked":
          type: "boolean"
          title: "Is Revoked"
          description: "Whether the benefit is revoked."
        "subscription_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Subscription Id"
          description: "The ID of the subscription that granted this benefit."
        "order_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Order Id"
          description: "The ID of the order that granted this benefit."
        "customer_id":
          type: "string"
          title: "Customer Id"
          format: "uuid4"
          description: "The ID of the customer concerned by this grant."
        "user_id":
          type: "string"
          title: "User Id"
          format: "uuid4"
          deprecated: true
        "benefit_id":
          type: "string"
          title: "Benefit Id"
          format: "uuid4"
          description: "The ID of the benefit concerned by this grant."
        "properties":
          anyOf:
            - {"$ref": "#/components/schemas/BenefitGrantDiscordProperties"}
            - {"$ref": "#/components/schemas/BenefitGrantGitHubRepositoryProperties"}
            - {"$ref": "#/components/schemas/BenefitGrantDownloadablesProperties"}
            - {"$ref": "#/components/schemas/BenefitGrantLicenseKeysProperties"}
            - {"$ref": "#/components/schemas/BenefitGrantAdsProperties"}
            - {"$ref": "#/components/schemas/BenefitGrantCustomProperties"}
          title: "Properties"
      title: "BenefitGrant"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "is_granted"
        - "is_revoked"
        - "subscription_id"
        - "order_id"
        - "customer_id"
        - "user_id"
        - "benefit_id"
        - "properties"
    "BenefitGrantAdsProperties":
      type: "object"
      properties:
        "advertisement_campaign_id":
          type: "string"
          title: "Advertisement Campaign Id"
      title: "BenefitGrantAdsProperties"
      required:
        - "advertisement_campaign_id"
    "BenefitGrantCustomProperties":
      type: "object"
      title: "BenefitGrantCustomProperties"
    "BenefitGrantDiscordProperties":
      type: "object"
      properties:
        "account_id":
          type: "string"
          title: "Account Id"
        "guild_id":
          type: "string"
          title: "Guild Id"
        "role_id":
          type: "string"
          title: "Role Id"
      title: "BenefitGrantDiscordProperties"
    "BenefitGrantDownloadablesProperties":
      type: "object"
      properties:
        "files":
          type: "array"
          items:
            type: "string"
          title: "Files"
      title: "BenefitGrantDownloadablesProperties"
    "BenefitGrantGitHubRepositoryProperties":
      type: "object"
      properties:
        "account_id":
          type: "string"
          title: "Account Id"
        "repository_owner":
          type: "string"
          title: "Repository Owner"
        "repository_name":
          type: "string"
          title: "Repository Name"
        "permission":
          type: "string"
          title: "Permission"
          enum:
            - "pull"
            - "triage"
            - "push"
            - "maintain"
            - "admin"
      title: "BenefitGrantGitHubRepositoryProperties"
    "BenefitGrantLicenseKeysProperties":
      type: "object"
      properties:
        "license_key_id":
          type: "string"
          title: "License Key Id"
        "display_key":
          type: "string"
          title: "Display Key"
      title: "BenefitGrantLicenseKeysProperties"
    "BenefitGrantWebhook":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the grant."
        "granted_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Granted At"
          description: "The timestamp when the benefit was granted. If `None`, the benefit is not granted."
        "is_granted":
          type: "boolean"
          title: "Is Granted"
          description: "Whether the benefit is granted."
        "revoked_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Revoked At"
          description: "The timestamp when the benefit was revoked. If `None`, the benefit is not revoked."
        "is_revoked":
          type: "boolean"
          title: "Is Revoked"
          description: "Whether the benefit is revoked."
        "subscription_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Subscription Id"
          description: "The ID of the subscription that granted this benefit."
        "order_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Order Id"
          description: "The ID of the order that granted this benefit."
        "customer_id":
          type: "string"
          title: "Customer Id"
          format: "uuid4"
          description: "The ID of the customer concerned by this grant."
        "user_id":
          type: "string"
          title: "User Id"
          format: "uuid4"
          deprecated: true
        "benefit_id":
          type: "string"
          title: "Benefit Id"
          format: "uuid4"
          description: "The ID of the benefit concerned by this grant."
        "properties":
          anyOf:
            - {"$ref": "#/components/schemas/BenefitGrantDiscordProperties"}
            - {"$ref": "#/components/schemas/BenefitGrantGitHubRepositoryProperties"}
            - {"$ref": "#/components/schemas/BenefitGrantDownloadablesProperties"}
            - {"$ref": "#/components/schemas/BenefitGrantLicenseKeysProperties"}
            - {"$ref": "#/components/schemas/BenefitGrantAdsProperties"}
            - {"$ref": "#/components/schemas/BenefitGrantCustomProperties"}
          title: "Properties"
        "benefit": {"$ref": "#/components/schemas/Benefit", "title": "Benefit"}
        "previous_properties":
          anyOf:
            - {"$ref": "#/components/schemas/BenefitGrantDiscordProperties"}
            - {"$ref": "#/components/schemas/BenefitGrantGitHubRepositoryProperties"}
            - {"$ref": "#/components/schemas/BenefitGrantDownloadablesProperties"}
            - {"$ref": "#/components/schemas/BenefitGrantLicenseKeysProperties"}
            - {"$ref": "#/components/schemas/BenefitGrantAdsProperties"}
            - {"$ref": "#/components/schemas/BenefitGrantCustomProperties"}
            - type: "null"
          title: "Previous Properties"
      title: "BenefitGrantWebhook"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "is_granted"
        - "is_revoked"
        - "subscription_id"
        - "order_id"
        - "customer_id"
        - "user_id"
        - "benefit_id"
        - "properties"
        - "benefit"
    "BenefitLicenseKeyActivationProperties":
      type: "object"
      properties:
        "limit":
          exclusiveMinimum: 0
          type: "integer"
          title: "Limit"
          maximum: 50
        "enable_customer_admin":
          type: "boolean"
          title: "Enable Customer Admin"
      title: "BenefitLicenseKeyActivationProperties"
      required:
        - "limit"
        - "enable_customer_admin"
    "BenefitLicenseKeyExpirationProperties":
      type: "object"
      properties:
        "ttl":
          exclusiveMinimum: 0
          type: "integer"
          title: "Ttl"
        "timeframe":
          type: "string"
          title: "Timeframe"
          enum:
            - "year"
            - "month"
            - "day"
      title: "BenefitLicenseKeyExpirationProperties"
      required:
        - "ttl"
        - "timeframe"
    "BenefitLicenseKeys":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the benefit."
        "type":
          type: "string"
          title: "Type"
          enum:
            - "license_keys"
          const: "license_keys"
        "description":
          type: "string"
          title: "Description"
          description: "The description of the benefit."
        "selectable":
          type: "boolean"
          title: "Selectable"
          description: "Whether the benefit is selectable when creating a product."
        "deletable":
          type: "boolean"
          title: "Deletable"
          description: "Whether the benefit is deletable."
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
          description: "The ID of the organization owning the benefit."
        "properties": {"$ref": "#/components/schemas/BenefitLicenseKeysProperties"}
      title: "BenefitLicenseKeys"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "type"
        - "description"
        - "selectable"
        - "deletable"
        - "organization_id"
        - "properties"
    "BenefitLicenseKeysCreate":
      type: "object"
      properties:
        "type":
          type: "string"
          title: "Type"
          enum:
            - "license_keys"
          const: "license_keys"
        "description":
          type: "string"
          title: "Description"
          maxLength: 42
          minLength: 3
          description: "The description of the benefit. Will be displayed on products having this benefit."
        "organization_id":
          anyOf:
            - type: "string"
              format: "uuid4"
              description: "The organization ID."
              x-polar-selector-widget: {"displayProperty": "name", "resourceName": "Organization", "resourceRoot": "/v1/organizations"}
            - type: "null"
          title: "Organization Id"
          description: "The ID of the organization owning the benefit. **Required unless you use an organization token.**"
        "properties": {"$ref": "#/components/schemas/BenefitLicenseKeysCreateProperties"}
      title: "BenefitLicenseKeysCreate"
      required:
        - "type"
        - "description"
        - "properties"
    "BenefitLicenseKeysCreateProperties":
      type: "object"
      properties:
        "prefix":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Prefix"
        "expires":
          anyOf:
            - {"$ref": "#/components/schemas/BenefitLicenseKeyExpirationProperties"}
            - type: "null"
        "activations":
          anyOf:
            - {"$ref": "#/components/schemas/BenefitLicenseKeyActivationProperties"}
            - type: "null"
        "limit_usage":
          anyOf:
            - exclusiveMinimum: 0
              type: "integer"
            - type: "null"
          title: "Limit Usage"
      title: "BenefitLicenseKeysCreateProperties"
    "BenefitLicenseKeysProperties":
      type: "object"
      properties:
        "prefix":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Prefix"
        "expires":
          anyOf:
            - {"$ref": "#/components/schemas/BenefitLicenseKeyExpirationProperties"}
            - type: "null"
        "activations":
          anyOf:
            - {"$ref": "#/components/schemas/BenefitLicenseKeyActivationProperties"}
            - type: "null"
        "limit_usage":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Limit Usage"
      title: "BenefitLicenseKeysProperties"
      required:
        - "prefix"
        - "expires"
        - "activations"
        - "limit_usage"
    "BenefitLicenseKeysSubscriber":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the benefit."
        "type":
          type: "string"
          title: "Type"
          enum:
            - "license_keys"
          const: "license_keys"
        "description":
          type: "string"
          title: "Description"
          description: "The description of the benefit."
        "selectable":
          type: "boolean"
          title: "Selectable"
          description: "Whether the benefit is selectable when creating a product."
        "deletable":
          type: "boolean"
          title: "Deletable"
          description: "Whether the benefit is deletable."
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
          description: "The ID of the organization owning the benefit."
        "organization": {"$ref": "#/components/schemas/Organization"}
        "properties": {"$ref": "#/components/schemas/BenefitLicenseKeysSubscriberProperties"}
      title: "BenefitLicenseKeysSubscriber"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "type"
        - "description"
        - "selectable"
        - "deletable"
        - "organization_id"
        - "organization"
        - "properties"
    "BenefitLicenseKeysSubscriberProperties":
      type: "object"
      properties:
        "prefix":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Prefix"
        "expires":
          anyOf:
            - {"$ref": "#/components/schemas/BenefitLicenseKeyExpirationProperties"}
            - type: "null"
        "activations":
          anyOf:
            - {"$ref": "#/components/schemas/BenefitLicenseKeyActivationProperties"}
            - type: "null"
        "limit_usage":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Limit Usage"
      title: "BenefitLicenseKeysSubscriberProperties"
      required:
        - "prefix"
        - "expires"
        - "activations"
        - "limit_usage"
    "BenefitLicenseKeysUpdate":
      type: "object"
      properties:
        "description":
          anyOf:
            - type: "string"
              maxLength: 42
              minLength: 3
            - type: "null"
          title: "Description"
          description: "The description of the benefit. Will be displayed on products having this benefit."
        "type":
          type: "string"
          title: "Type"
          enum:
            - "license_keys"
          const: "license_keys"
        "properties":
          anyOf:
            - {"$ref": "#/components/schemas/BenefitLicenseKeysCreateProperties"}
            - type: "null"
      title: "BenefitLicenseKeysUpdate"
      required:
        - "type"
    "BenefitType":
      type: "string"
      title: "BenefitType"
      enum:
        - "custom"
        - "ads"
        - "discord"
        - "github_repository"
        - "downloadables"
        - "license_keys"
    "Checkout":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the object."
        "custom_field_data":
          type: "object"
          title: "Custom Field Data"
          description: "Key-value object storing custom field values."
        "payment_processor": {"$ref": "#/components/schemas/PaymentProcessor", "description": "Payment processor used."}
        "status": {"$ref": "#/components/schemas/CheckoutStatus", "description": "Status of the checkout session."}
        "client_secret":
          type: "string"
          title: "Client Secret"
          description: "Client secret used to update and complete the checkout session from the client."
        "url":
          type: "string"
          title: "Url"
          description: "URL where the customer can access the checkout session."
        "expires_at":
          type: "string"
          title: "Expires At"
          format: "date-time"
          description: "Expiration date and time of the checkout session."
        "success_url":
          type: "string"
          title: "Success Url"
          description: "URL where the customer will be redirected after a successful payment."
        "embed_origin":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Embed Origin"
          description: "When checkout is embedded, represents the Origin of the page embedding the checkout. Used as a security measure to send messages only to the embedding page."
        "amount":
          anyOf:
            - type: "integer"
              description: "Amount to pay in cents. Only useful for custom prices, it'll be ignored for fixed and free prices."
            - type: "null"
          title: "Amount"
        "tax_amount":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Tax Amount"
          description: "Computed tax amount to pay in cents."
        "currency":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Currency"
          description: "Currency code of the checkout session."
        "subtotal_amount":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Subtotal Amount"
          description: "Subtotal amount in cents, including discounts and before tax."
        "total_amount":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Amount"
          description: "Total amount to pay in cents, including discounts and after tax."
        "product_id":
          type: "string"
          title: "Product Id"
          format: "uuid4"
          description: "ID of the product to checkout."
        "product_price_id":
          type: "string"
          title: "Product Price Id"
          format: "uuid4"
          description: "ID of the product price to checkout."
        "discount_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Discount Id"
          description: "ID of the discount applied to the checkout."
        "allow_discount_codes":
          type: "boolean"
          title: "Allow Discount Codes"
          description: "Whether to allow the customer to apply discount codes. If you apply a discount through `discount_id`, it'll still be applied, but the customer won't be able to change it."
        "is_discount_applicable":
          type: "boolean"
          title: "Is Discount Applicable"
          description: "Whether the discount is applicable to the checkout. Typically, free and custom prices are not discountable."
        "is_free_product_price":
          type: "boolean"
          title: "Is Free Product Price"
          description: "Whether the product price is free, regardless of discounts."
        "is_payment_required":
          type: "boolean"
          title: "Is Payment Required"
          description: "Whether the checkout requires payment, e.g. in case of free products or discounts that cover the total amount."
        "is_payment_setup_required":
          type: "boolean"
          title: "Is Payment Setup Required"
          description: "Whether the checkout requires setting up a payment method, regardless of the amount, e.g. subscriptions that have first free cycles."
        "is_payment_form_required":
          type: "boolean"
          title: "Is Payment Form Required"
          description: "Whether the checkout requires a payment form, whether because of a payment or payment method setup."
        "customer_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Customer Id"
        "customer_name":
          anyOf:
            - type: "string"
              description: "Name of the customer."
            - type: "null"
          title: "Customer Name"
        "customer_email":
          anyOf:
            - type: "string"
              format: "email"
              description: "Email address of the customer."
            - type: "null"
          title: "Customer Email"
        "customer_ip_address":
          anyOf:
            - type: "string"
              format: "ipvanyaddress"
              description: "IP address of the customer. Used to detect tax location."
            - type: "null"
          title: "Customer Ip Address"
        "customer_billing_address":
          anyOf:
            - {"$ref": "#/components/schemas/Address", "description": "Billing address of the customer."}
            - type: "null"
        "customer_tax_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Customer Tax Id"
        "payment_processor_metadata":
          type: "object"
          title: "Payment Processor Metadata"
        "metadata":
          type: "object"
          title: "Metadata"
          additionalProperties:
            anyOf:
              - type: "string"
              - type: "integer"
              - type: "boolean"
        "product": {"$ref": "#/components/schemas/CheckoutProduct"}
        "product_price": {"$ref": "#/components/schemas/ProductPrice"}
        "discount":
          anyOf:
            - oneOf:
                - {"$ref": "#/components/schemas/CheckoutDiscountFixedOnceForeverDuration"}
                - {"$ref": "#/components/schemas/CheckoutDiscountFixedRepeatDuration"}
                - {"$ref": "#/components/schemas/CheckoutDiscountPercentageOnceForeverDuration"}
                - {"$ref": "#/components/schemas/CheckoutDiscountPercentageRepeatDuration"}
            - type: "null"
          title: "Discount"
        "subscription_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Subscription Id"
        "attached_custom_fields":
          type: "array"
          items: {"$ref": "#/components/schemas/AttachedCustomField"}
          title: "Attached Custom Fields"
        "customer_metadata":
          type: "object"
          title: "Customer Metadata"
          additionalProperties:
            anyOf:
              - type: "string"
              - type: "integer"
              - type: "boolean"
      title: "Checkout"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "payment_processor"
        - "status"
        - "client_secret"
        - "url"
        - "expires_at"
        - "success_url"
        - "embed_origin"
        - "amount"
        - "tax_amount"
        - "currency"
        - "subtotal_amount"
        - "total_amount"
        - "product_id"
        - "product_price_id"
        - "discount_id"
        - "allow_discount_codes"
        - "is_discount_applicable"
        - "is_free_product_price"
        - "is_payment_required"
        - "is_payment_setup_required"
        - "is_payment_form_required"
        - "customer_id"
        - "customer_name"
        - "customer_email"
        - "customer_ip_address"
        - "customer_billing_address"
        - "customer_tax_id"
        - "payment_processor_metadata"
        - "metadata"
        - "product"
        - "product_price"
        - "discount"
        - "subscription_id"
        - "attached_custom_fields"
        - "customer_metadata"
      description: "Checkout session data retrieved using an access token."
    "CheckoutConfirmStripe":
      type: "object"
      properties:
        "custom_field_data":
          anyOf:
            - type: "object"
            - type: "null"
          title: "Custom Field Data"
          description: "Key-value object storing custom field values."
        "product_price_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Product Price Id"
          description: "ID of the product price to checkout. Must correspond to a price linked to the same product."
        "amount":
          anyOf:
            - type: "integer"
              description: "Amount to pay in cents. Only useful for custom prices, it'll be ignored for fixed and free prices."
            - type: "null"
          title: "Amount"
        "customer_name":
          anyOf:
            - type: "string"
              description: "Name of the customer."
            - type: "null"
          title: "Customer Name"
        "customer_email":
          anyOf:
            - type: "string"
              format: "email"
              description: "Email address of the customer."
            - type: "null"
          title: "Customer Email"
        "customer_billing_address":
          anyOf:
            - {"$ref": "#/components/schemas/Address", "description": "Billing address of the customer."}
            - type: "null"
        "customer_tax_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Customer Tax Id"
        "discount_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Discount Code"
          description: "Discount code to apply to the checkout."
        "confirmation_token_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Confirmation Token Id"
          description: "ID of the Stripe confirmation token. Required for fixed prices and custom prices."
      title: "CheckoutConfirmStripe"
      description: "Confirm a checkout session using a Stripe confirmation token."
    "CheckoutCreate":
      anyOf:
        - {"$ref": "#/components/schemas/CheckoutProductCreate"}
        - {"$ref": "#/components/schemas/CheckoutPriceCreate"}
    "CheckoutDiscountFixedOnceForeverDuration":
      type: "object"
      properties:
        "duration": {"$ref": "#/components/schemas/DiscountDuration"}
        "type": {"$ref": "#/components/schemas/DiscountType"}
        "amount":
          type: "integer"
          title: "Amount"
        "currency":
          type: "string"
          title: "Currency"
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the object."
        "name":
          type: "string"
          title: "Name"
        "code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Code"
      title: "CheckoutDiscountFixedOnceForeverDuration"
      required:
        - "duration"
        - "type"
        - "amount"
        - "currency"
        - "id"
        - "name"
        - "code"
      description: "Schema for a fixed amount discount that is applied once or forever."
    "CheckoutDiscountFixedRepeatDuration":
      type: "object"
      properties:
        "duration": {"$ref": "#/components/schemas/DiscountDuration"}
        "duration_in_months":
          type: "integer"
          title: "Duration In Months"
        "type": {"$ref": "#/components/schemas/DiscountType"}
        "amount":
          type: "integer"
          title: "Amount"
        "currency":
          type: "string"
          title: "Currency"
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the object."
        "name":
          type: "string"
          title: "Name"
        "code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Code"
      title: "CheckoutDiscountFixedRepeatDuration"
      required:
        - "duration"
        - "duration_in_months"
        - "type"
        - "amount"
        - "currency"
        - "id"
        - "name"
        - "code"
      description: "Schema for a fixed amount discount that is applied on every invoice\nfor a certain number of months."
    "CheckoutDiscountPercentageOnceForeverDuration":
      type: "object"
      properties:
        "duration": {"$ref": "#/components/schemas/DiscountDuration"}
        "type": {"$ref": "#/components/schemas/DiscountType"}
        "basis_points":
          type: "integer"
          title: "Basis Points"
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the object."
        "name":
          type: "string"
          title: "Name"
        "code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Code"
      title: "CheckoutDiscountPercentageOnceForeverDuration"
      required:
        - "duration"
        - "type"
        - "basis_points"
        - "id"
        - "name"
        - "code"
      description: "Schema for a percentage discount that is applied once or forever."
    "CheckoutDiscountPercentageRepeatDuration":
      type: "object"
      properties:
        "duration": {"$ref": "#/components/schemas/DiscountDuration"}
        "duration_in_months":
          type: "integer"
          title: "Duration In Months"
        "type": {"$ref": "#/components/schemas/DiscountType"}
        "basis_points":
          type: "integer"
          title: "Basis Points"
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the object."
        "name":
          type: "string"
          title: "Name"
        "code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Code"
      title: "CheckoutDiscountPercentageRepeatDuration"
      required:
        - "duration"
        - "duration_in_months"
        - "type"
        - "basis_points"
        - "id"
        - "name"
        - "code"
      description: "Schema for a percentage discount that is applied on every invoice\nfor a certain number of months."
    "CheckoutLegacy":
      type: "object"
      properties:
        "id":
          type: "string"
          title: "Id"
          description: "The ID of the checkout."
        "url":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Url"
          description: "URL the customer should be redirected to complete the purchase."
        "customer_email":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Customer Email"
        "customer_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Customer Name"
        "product": {"$ref": "#/components/schemas/CheckoutProduct"}
        "product_price": {"$ref": "#/components/schemas/ProductPrice"}
      title: "CheckoutLegacy"
      required:
        - "id"
        - "customer_email"
        - "customer_name"
        - "product"
        - "product_price"
      description: "A checkout session."
    "CheckoutLegacyCreate":
      type: "object"
      properties:
        "product_price_id":
          type: "string"
          title: "Product Price Id"
          format: "uuid4"
          description: "ID of the product price to subscribe to."
        "success_url":
          type: "string"
          title: "Success Url"
          minLength: 1
          format: "uri"
          description: "URL where the customer will be redirected after a successful subscription. You can add the `session_id={CHECKOUT_SESSION_ID}` query parameter to retrieve the checkout session id."
        "customer_email":
          anyOf:
            - type: "string"
              format: "email"
            - type: "null"
          title: "Customer Email"
          description: "If you already know the email of your customer, you can set it. It'll be pre-filled on the checkout page."
        "subscription_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Subscription Id"
          description: "ID of the subscription to update. If not provided, a new subscription will be created."
      title: "CheckoutLegacyCreate"
      required:
        - "product_price_id"
        - "success_url"
    "CheckoutLink":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the object."
        "metadata":
          type: "object"
          title: "Metadata"
          additionalProperties:
            anyOf:
              - type: "string"
              - type: "integer"
              - type: "boolean"
        "payment_processor": {"$ref": "#/components/schemas/PaymentProcessor", "description": "Payment processor used."}
        "client_secret":
          type: "string"
          title: "Client Secret"
          description: "Client secret used to access the checkout link."
        "success_url":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Success Url"
          description: "URL where the customer will be redirected after a successful payment."
        "label":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Label"
          description: "Optional label to distinguish links internally"
        "allow_discount_codes":
          type: "boolean"
          title: "Allow Discount Codes"
          description: "Whether to allow the customer to apply discount codes. If you apply a discount through `discount_id`, it'll still be applied, but the customer won't be able to change it."
        "product_id":
          type: "string"
          title: "Product Id"
          format: "uuid4"
          description: "ID of the product to checkout."
        "product_price_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Product Price Id"
          description: "ID of the product price to checkout. First available price will be selected unless an explicit price ID is set."
        "discount_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Discount Id"
          description: "ID of the discount to apply to the checkout. If the discount is not applicable anymore when opening the checkout link, it'll be ignored."
        "product": {"$ref": "#/components/schemas/CheckoutLinkProduct"}
        "product_price":
          anyOf:
            - {"$ref": "#/components/schemas/ProductPrice"}
            - type: "null"
        "discount":
          anyOf:
            - oneOf:
                - {"$ref": "#/components/schemas/DiscountFixedOnceForeverDurationBase"}
                - {"$ref": "#/components/schemas/DiscountFixedRepeatDurationBase"}
                - {"$ref": "#/components/schemas/DiscountPercentageOnceForeverDurationBase"}
                - {"$ref": "#/components/schemas/DiscountPercentageRepeatDurationBase"}
              title: "CheckoutLinkDiscount"
            - type: "null"
          title: "Discount"
        "url":
          type: "string"
          title: "Url"
          readOnly: true
      title: "CheckoutLink"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "metadata"
        - "payment_processor"
        - "client_secret"
        - "success_url"
        - "label"
        - "allow_discount_codes"
        - "product_id"
        - "product_price_id"
        - "discount_id"
        - "product"
        - "product_price"
        - "discount"
        - "url"
      description: "Checkout link data."
    "CheckoutLinkCreate":
      anyOf:
        - {"$ref": "#/components/schemas/CheckoutLinkProductCreate"}
        - {"$ref": "#/components/schemas/CheckoutLinkPriceCreate"}
    "CheckoutLinkPriceCreate":
      type: "object"
      properties:
        "metadata":
          type: "object"
          title: "Metadata"
          maxProperties: 50
          additionalProperties:
            anyOf:
              - type: "string"
                maxLength: 500
                minLength: 1
              - type: "integer"
              - type: "boolean"
          description: "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
        "payment_processor":
          type: "string"
          title: "Payment Processor"
          enum:
            - "stripe"
          description: "Payment processor to use. Currently only Stripe is supported."
          const: "stripe"
        "label":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Label"
          description: "Optional label to distinguish links internally"
        "allow_discount_codes":
          type: "boolean"
          title: "Allow Discount Codes"
          description: "Whether to allow the customer to apply discount codes. If you apply a discount through `discount_id`, it'll still be applied, but the customer won't be able to change it."
          default: true
        "discount_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Discount Id"
          description: "ID of the discount to apply to the checkout. If the discount is not applicable anymore when opening the checkout link, it'll be ignored."
        "success_url":
          anyOf:
            - type: "string"
              maxLength: 2083
              minLength: 1
              format: "uri"
            - type: "null"
          title: "Success Url"
          description: "URL where the customer will be redirected after a successful payment.You can add the `checkout_id={CHECKOUT_ID}` query parameter to retrieve the checkout session id."
        "product_price_id":
          type: "string"
          title: "Product Price Id"
          format: "uuid4"
          description: "ID of the product price to checkout."
      title: "CheckoutLinkPriceCreate"
      required:
        - "payment_processor"
        - "product_price_id"
    "CheckoutLinkProduct":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the product."
        "name":
          type: "string"
          title: "Name"
          description: "The name of the product."
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
          description: "The description of the product."
        "is_recurring":
          type: "boolean"
          title: "Is Recurring"
          description: "Whether the product is a subscription tier."
        "is_archived":
          type: "boolean"
          title: "Is Archived"
          description: "Whether the product is archived and no longer available."
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
          description: "The ID of the organization owning the product."
        "prices":
          type: "array"
          items: {"$ref": "#/components/schemas/ProductPrice"}
          title: "Prices"
          description: "List of prices for this product."
        "benefits":
          type: "array"
          items: {"$ref": "#/components/schemas/BenefitBase"}
          title: "BenefitPublic"
          description: "List of benefits granted by the product."
        "medias":
          type: "array"
          items: {"$ref": "#/components/schemas/ProductMediaFileRead"}
          title: "Medias"
          description: "List of medias associated to the product."
      title: "CheckoutLinkProduct"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "name"
        - "description"
        - "is_recurring"
        - "is_archived"
        - "organization_id"
        - "prices"
        - "benefits"
        - "medias"
      description: "Product data for a checkout link."
    "CheckoutLinkProductCreate":
      type: "object"
      properties:
        "metadata":
          type: "object"
          title: "Metadata"
          maxProperties: 50
          additionalProperties:
            anyOf:
              - type: "string"
                maxLength: 500
                minLength: 1
              - type: "integer"
              - type: "boolean"
          description: "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
        "payment_processor":
          type: "string"
          title: "Payment Processor"
          enum:
            - "stripe"
          description: "Payment processor to use. Currently only Stripe is supported."
          const: "stripe"
        "label":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Label"
          description: "Optional label to distinguish links internally"
        "allow_discount_codes":
          type: "boolean"
          title: "Allow Discount Codes"
          description: "Whether to allow the customer to apply discount codes. If you apply a discount through `discount_id`, it'll still be applied, but the customer won't be able to change it."
          default: true
        "discount_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Discount Id"
          description: "ID of the discount to apply to the checkout. If the discount is not applicable anymore when opening the checkout link, it'll be ignored."
        "success_url":
          anyOf:
            - type: "string"
              maxLength: 2083
              minLength: 1
              format: "uri"
            - type: "null"
          title: "Success Url"
          description: "URL where the customer will be redirected after a successful payment.You can add the `checkout_id={CHECKOUT_ID}` query parameter to retrieve the checkout session id."
        "product_id":
          type: "string"
          title: "Product Id"
          format: "uuid4"
          description: "ID of the product to checkout. First available price will be selected."
      title: "CheckoutLinkProductCreate"
      required:
        - "payment_processor"
        - "product_id"
    "CheckoutLinkSortProperty":
      type: "string"
      title: "CheckoutLinkSortProperty"
      enum:
        - "created_at"
        - "-created_at"
    "CheckoutLinkUpdate":
      type: "object"
      properties:
        "metadata":
          anyOf:
            - type: "object"
              maxProperties: 50
              additionalProperties:
                anyOf:
                  - type: "string"
                    maxLength: 500
                    minLength: 1
                  - type: "integer"
                  - type: "boolean"
              description: "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
            - type: "null"
          title: "Metadata"
        "label":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Label"
        "allow_discount_codes":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Allow Discount Codes"
          description: "Whether to allow the customer to apply discount codes. If you apply a discount through `discount_id`, it'll still be applied, but the customer won't be able to change it."
        "product_price_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Product Price Id"
        "discount_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Discount Id"
          description: "ID of the discount to apply to the checkout. If the discount is not applicable anymore when opening the checkout link, it'll be ignored."
        "success_url":
          anyOf:
            - type: "string"
              maxLength: 2083
              minLength: 1
              format: "uri"
            - type: "null"
          title: "Success Url"
          description: "URL where the customer will be redirected after a successful payment.You can add the `checkout_id={CHECKOUT_ID}` query parameter to retrieve the checkout session id."
      title: "CheckoutLinkUpdate"
      description: "Schema to update an existing checkout link."
    "CheckoutPriceCreate":
      type: "object"
      properties:
        "metadata":
          type: "object"
          title: "Metadata"
          maxProperties: 50
          additionalProperties:
            anyOf:
              - type: "string"
                maxLength: 500
                minLength: 1
              - type: "integer"
              - type: "boolean"
          description: "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
        "custom_field_data":
          type: "object"
          title: "Custom Field Data"
          description: "Key-value object storing custom field values."
        "payment_processor":
          type: "string"
          title: "Payment Processor"
          enum:
            - "stripe"
          description: "Payment processor to use. Currently only Stripe is supported."
          const: "stripe"
        "discount_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Discount Id"
          description: "ID of the discount to apply to the checkout."
        "allow_discount_codes":
          type: "boolean"
          title: "Allow Discount Codes"
          description: "Whether to allow the customer to apply discount codes. If you apply a discount through `discount_id`, it'll still be applied, but the customer won't be able to change it."
          default: true
        "amount":
          anyOf:
            - type: "integer"
              description: "Amount to pay in cents. Only useful for custom prices, it'll be ignored for fixed and free prices."
            - type: "null"
          title: "Amount"
        "customer_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Customer Id"
          description: "ID of an existing customer in the organization. The customer data will be pre-filled in the checkout form. The resulting order will be linked to this customer."
        "customer_name":
          anyOf:
            - type: "string"
              description: "Name of the customer."
            - type: "null"
          title: "Customer Name"
        "customer_email":
          anyOf:
            - type: "string"
              format: "email"
              description: "Email address of the customer."
            - type: "null"
          title: "Customer Email"
        "customer_ip_address":
          anyOf:
            - type: "string"
              format: "ipvanyaddress"
              description: "IP address of the customer. Used to detect tax location."
            - type: "null"
          title: "Customer Ip Address"
        "customer_billing_address":
          anyOf:
            - {"$ref": "#/components/schemas/Address", "description": "Billing address of the customer."}
            - type: "null"
        "customer_tax_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Customer Tax Id"
        "customer_metadata":
          type: "object"
          title: "Customer Metadata"
          maxProperties: 50
          additionalProperties:
            anyOf:
              - type: "string"
                maxLength: 500
                minLength: 1
              - type: "integer"
              - type: "boolean"
          description: "Key-value object allowing you to store additional information that'll be copied to the created customer.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
        "subscription_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Subscription Id"
          description: "ID of a subscription to upgrade. It must be on a free pricing. If checkout is successful, metadata set on this checkout will be copied to the subscription, and existing keys will be overwritten."
        "success_url":
          anyOf:
            - type: "string"
              maxLength: 2083
              minLength: 1
              format: "uri"
            - type: "null"
          title: "Success Url"
          description: "URL where the customer will be redirected after a successful payment.You can add the `checkout_id={CHECKOUT_ID}` query parameter to retrieve the checkout session id."
        "embed_origin":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Embed Origin"
          description: "If you plan to embed the checkout session, set this to the Origin of the embedding page. It'll allow the Polar iframe to communicate with the parent page."
        "product_price_id":
          type: "string"
          title: "Product Price Id"
          format: "uuid4"
          description: "ID of the product price to checkout."
      title: "CheckoutPriceCreate"
      required:
        - "payment_processor"
        - "product_price_id"
      description: "Create a new checkout session from a product price.\n\nMetadata set on the checkout will be copied\nto the resulting order and/or subscription."
    "CheckoutProduct":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the product."
        "name":
          type: "string"
          title: "Name"
          description: "The name of the product."
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
          description: "The description of the product."
        "is_recurring":
          type: "boolean"
          title: "Is Recurring"
          description: "Whether the product is a subscription tier."
        "is_archived":
          type: "boolean"
          title: "Is Archived"
          description: "Whether the product is archived and no longer available."
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
          description: "The ID of the organization owning the product."
        "prices":
          type: "array"
          items: {"$ref": "#/components/schemas/ProductPrice"}
          title: "Prices"
          description: "List of prices for this product."
        "benefits":
          type: "array"
          items: {"$ref": "#/components/schemas/BenefitBase"}
          title: "BenefitPublic"
          description: "List of benefits granted by the product."
        "medias":
          type: "array"
          items: {"$ref": "#/components/schemas/ProductMediaFileRead"}
          title: "Medias"
          description: "List of medias associated to the product."
      title: "CheckoutProduct"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "name"
        - "description"
        - "is_recurring"
        - "is_archived"
        - "organization_id"
        - "prices"
        - "benefits"
        - "medias"
      description: "Product data for a checkout session."
    "CheckoutProductCreate":
      type: "object"
      properties:
        "metadata":
          type: "object"
          title: "Metadata"
          maxProperties: 50
          additionalProperties:
            anyOf:
              - type: "string"
                maxLength: 500
                minLength: 1
              - type: "integer"
              - type: "boolean"
          description: "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
        "custom_field_data":
          type: "object"
          title: "Custom Field Data"
          description: "Key-value object storing custom field values."
        "payment_processor":
          type: "string"
          title: "Payment Processor"
          enum:
            - "stripe"
          description: "Payment processor to use. Currently only Stripe is supported."
          const: "stripe"
        "discount_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Discount Id"
          description: "ID of the discount to apply to the checkout."
        "allow_discount_codes":
          type: "boolean"
          title: "Allow Discount Codes"
          description: "Whether to allow the customer to apply discount codes. If you apply a discount through `discount_id`, it'll still be applied, but the customer won't be able to change it."
          default: true
        "amount":
          anyOf:
            - type: "integer"
              description: "Amount to pay in cents. Only useful for custom prices, it'll be ignored for fixed and free prices."
            - type: "null"
          title: "Amount"
        "customer_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Customer Id"
          description: "ID of an existing customer in the organization. The customer data will be pre-filled in the checkout form. The resulting order will be linked to this customer."
        "customer_name":
          anyOf:
            - type: "string"
              description: "Name of the customer."
            - type: "null"
          title: "Customer Name"
        "customer_email":
          anyOf:
            - type: "string"
              format: "email"
              description: "Email address of the customer."
            - type: "null"
          title: "Customer Email"
        "customer_ip_address":
          anyOf:
            - type: "string"
              format: "ipvanyaddress"
              description: "IP address of the customer. Used to detect tax location."
            - type: "null"
          title: "Customer Ip Address"
        "customer_billing_address":
          anyOf:
            - {"$ref": "#/components/schemas/Address", "description": "Billing address of the customer."}
            - type: "null"
        "customer_tax_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Customer Tax Id"
        "customer_metadata":
          type: "object"
          title: "Customer Metadata"
          maxProperties: 50
          additionalProperties:
            anyOf:
              - type: "string"
                maxLength: 500
                minLength: 1
              - type: "integer"
              - type: "boolean"
          description: "Key-value object allowing you to store additional information that'll be copied to the created customer.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
        "subscription_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Subscription Id"
          description: "ID of a subscription to upgrade. It must be on a free pricing. If checkout is successful, metadata set on this checkout will be copied to the subscription, and existing keys will be overwritten."
        "success_url":
          anyOf:
            - type: "string"
              maxLength: 2083
              minLength: 1
              format: "uri"
            - type: "null"
          title: "Success Url"
          description: "URL where the customer will be redirected after a successful payment.You can add the `checkout_id={CHECKOUT_ID}` query parameter to retrieve the checkout session id."
        "embed_origin":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Embed Origin"
          description: "If you plan to embed the checkout session, set this to the Origin of the embedding page. It'll allow the Polar iframe to communicate with the parent page."
        "product_id":
          type: "string"
          title: "Product Id"
          format: "uuid4"
          description: "ID of the product to checkout. First available price will be selected."
      title: "CheckoutProductCreate"
      required:
        - "payment_processor"
        - "product_id"
      description: "Create a new checkout session from a product.\n\nMetadata set on the checkout will be copied\nto the resulting order and/or subscription."
    "CheckoutPublic":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the object."
        "custom_field_data":
          type: "object"
          title: "Custom Field Data"
          description: "Key-value object storing custom field values."
        "payment_processor": {"$ref": "#/components/schemas/PaymentProcessor", "description": "Payment processor used."}
        "status": {"$ref": "#/components/schemas/CheckoutStatus", "description": "Status of the checkout session."}
        "client_secret":
          type: "string"
          title: "Client Secret"
          description: "Client secret used to update and complete the checkout session from the client."
        "url":
          type: "string"
          title: "Url"
          description: "URL where the customer can access the checkout session."
        "expires_at":
          type: "string"
          title: "Expires At"
          format: "date-time"
          description: "Expiration date and time of the checkout session."
        "success_url":
          type: "string"
          title: "Success Url"
          description: "URL where the customer will be redirected after a successful payment."
        "embed_origin":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Embed Origin"
          description: "When checkout is embedded, represents the Origin of the page embedding the checkout. Used as a security measure to send messages only to the embedding page."
        "amount":
          anyOf:
            - type: "integer"
              description: "Amount to pay in cents. Only useful for custom prices, it'll be ignored for fixed and free prices."
            - type: "null"
          title: "Amount"
        "tax_amount":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Tax Amount"
          description: "Computed tax amount to pay in cents."
        "currency":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Currency"
          description: "Currency code of the checkout session."
        "subtotal_amount":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Subtotal Amount"
          description: "Subtotal amount in cents, including discounts and before tax."
        "total_amount":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Amount"
          description: "Total amount to pay in cents, including discounts and after tax."
        "product_id":
          type: "string"
          title: "Product Id"
          format: "uuid4"
          description: "ID of the product to checkout."
        "product_price_id":
          type: "string"
          title: "Product Price Id"
          format: "uuid4"
          description: "ID of the product price to checkout."
        "discount_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Discount Id"
          description: "ID of the discount applied to the checkout."
        "allow_discount_codes":
          type: "boolean"
          title: "Allow Discount Codes"
          description: "Whether to allow the customer to apply discount codes. If you apply a discount through `discount_id`, it'll still be applied, but the customer won't be able to change it."
        "is_discount_applicable":
          type: "boolean"
          title: "Is Discount Applicable"
          description: "Whether the discount is applicable to the checkout. Typically, free and custom prices are not discountable."
        "is_free_product_price":
          type: "boolean"
          title: "Is Free Product Price"
          description: "Whether the product price is free, regardless of discounts."
        "is_payment_required":
          type: "boolean"
          title: "Is Payment Required"
          description: "Whether the checkout requires payment, e.g. in case of free products or discounts that cover the total amount."
        "is_payment_setup_required":
          type: "boolean"
          title: "Is Payment Setup Required"
          description: "Whether the checkout requires setting up a payment method, regardless of the amount, e.g. subscriptions that have first free cycles."
        "is_payment_form_required":
          type: "boolean"
          title: "Is Payment Form Required"
          description: "Whether the checkout requires a payment form, whether because of a payment or payment method setup."
        "customer_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Customer Id"
        "customer_name":
          anyOf:
            - type: "string"
              description: "Name of the customer."
            - type: "null"
          title: "Customer Name"
        "customer_email":
          anyOf:
            - type: "string"
              format: "email"
              description: "Email address of the customer."
            - type: "null"
          title: "Customer Email"
        "customer_ip_address":
          anyOf:
            - type: "string"
              format: "ipvanyaddress"
              description: "IP address of the customer. Used to detect tax location."
            - type: "null"
          title: "Customer Ip Address"
        "customer_billing_address":
          anyOf:
            - {"$ref": "#/components/schemas/Address", "description": "Billing address of the customer."}
            - type: "null"
        "customer_tax_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Customer Tax Id"
        "payment_processor_metadata":
          type: "object"
          title: "Payment Processor Metadata"
        "product": {"$ref": "#/components/schemas/CheckoutProduct"}
        "product_price": {"$ref": "#/components/schemas/ProductPrice"}
        "discount":
          anyOf:
            - oneOf:
                - {"$ref": "#/components/schemas/CheckoutDiscountFixedOnceForeverDuration"}
                - {"$ref": "#/components/schemas/CheckoutDiscountFixedRepeatDuration"}
                - {"$ref": "#/components/schemas/CheckoutDiscountPercentageOnceForeverDuration"}
                - {"$ref": "#/components/schemas/CheckoutDiscountPercentageRepeatDuration"}
            - type: "null"
          title: "Discount"
        "organization": {"$ref": "#/components/schemas/Organization"}
        "attached_custom_fields":
          type: "array"
          items: {"$ref": "#/components/schemas/AttachedCustomField"}
          title: "Attached Custom Fields"
      title: "CheckoutPublic"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "payment_processor"
        - "status"
        - "client_secret"
        - "url"
        - "expires_at"
        - "success_url"
        - "embed_origin"
        - "amount"
        - "tax_amount"
        - "currency"
        - "subtotal_amount"
        - "total_amount"
        - "product_id"
        - "product_price_id"
        - "discount_id"
        - "allow_discount_codes"
        - "is_discount_applicable"
        - "is_free_product_price"
        - "is_payment_required"
        - "is_payment_setup_required"
        - "is_payment_form_required"
        - "customer_id"
        - "customer_name"
        - "customer_email"
        - "customer_ip_address"
        - "customer_billing_address"
        - "customer_tax_id"
        - "payment_processor_metadata"
        - "product"
        - "product_price"
        - "discount"
        - "organization"
        - "attached_custom_fields"
      description: "Checkout session data retrieved using the client secret."
    "CheckoutPublicConfirmed":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the object."
        "custom_field_data":
          type: "object"
          title: "Custom Field Data"
          description: "Key-value object storing custom field values."
        "payment_processor": {"$ref": "#/components/schemas/PaymentProcessor", "description": "Payment processor used."}
        "status":
          type: "string"
          title: "Status"
          enum:
            - "confirmed"
          const: "confirmed"
        "client_secret":
          type: "string"
          title: "Client Secret"
          description: "Client secret used to update and complete the checkout session from the client."
        "url":
          type: "string"
          title: "Url"
          description: "URL where the customer can access the checkout session."
        "expires_at":
          type: "string"
          title: "Expires At"
          format: "date-time"
          description: "Expiration date and time of the checkout session."
        "success_url":
          type: "string"
          title: "Success Url"
          description: "URL where the customer will be redirected after a successful payment."
        "embed_origin":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Embed Origin"
          description: "When checkout is embedded, represents the Origin of the page embedding the checkout. Used as a security measure to send messages only to the embedding page."
        "amount":
          anyOf:
            - type: "integer"
              description: "Amount to pay in cents. Only useful for custom prices, it'll be ignored for fixed and free prices."
            - type: "null"
          title: "Amount"
        "tax_amount":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Tax Amount"
          description: "Computed tax amount to pay in cents."
        "currency":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Currency"
          description: "Currency code of the checkout session."
        "subtotal_amount":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Subtotal Amount"
          description: "Subtotal amount in cents, including discounts and before tax."
        "total_amount":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Amount"
          description: "Total amount to pay in cents, including discounts and after tax."
        "product_id":
          type: "string"
          title: "Product Id"
          format: "uuid4"
          description: "ID of the product to checkout."
        "product_price_id":
          type: "string"
          title: "Product Price Id"
          format: "uuid4"
          description: "ID of the product price to checkout."
        "discount_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Discount Id"
          description: "ID of the discount applied to the checkout."
        "allow_discount_codes":
          type: "boolean"
          title: "Allow Discount Codes"
          description: "Whether to allow the customer to apply discount codes. If you apply a discount through `discount_id`, it'll still be applied, but the customer won't be able to change it."
        "is_discount_applicable":
          type: "boolean"
          title: "Is Discount Applicable"
          description: "Whether the discount is applicable to the checkout. Typically, free and custom prices are not discountable."
        "is_free_product_price":
          type: "boolean"
          title: "Is Free Product Price"
          description: "Whether the product price is free, regardless of discounts."
        "is_payment_required":
          type: "boolean"
          title: "Is Payment Required"
          description: "Whether the checkout requires payment, e.g. in case of free products or discounts that cover the total amount."
        "is_payment_setup_required":
          type: "boolean"
          title: "Is Payment Setup Required"
          description: "Whether the checkout requires setting up a payment method, regardless of the amount, e.g. subscriptions that have first free cycles."
        "is_payment_form_required":
          type: "boolean"
          title: "Is Payment Form Required"
          description: "Whether the checkout requires a payment form, whether because of a payment or payment method setup."
        "customer_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Customer Id"
        "customer_name":
          anyOf:
            - type: "string"
              description: "Name of the customer."
            - type: "null"
          title: "Customer Name"
        "customer_email":
          anyOf:
            - type: "string"
              format: "email"
              description: "Email address of the customer."
            - type: "null"
          title: "Customer Email"
        "customer_ip_address":
          anyOf:
            - type: "string"
              format: "ipvanyaddress"
              description: "IP address of the customer. Used to detect tax location."
            - type: "null"
          title: "Customer Ip Address"
        "customer_billing_address":
          anyOf:
            - {"$ref": "#/components/schemas/Address", "description": "Billing address of the customer."}
            - type: "null"
        "customer_tax_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Customer Tax Id"
        "payment_processor_metadata":
          type: "object"
          title: "Payment Processor Metadata"
        "product": {"$ref": "#/components/schemas/CheckoutProduct"}
        "product_price": {"$ref": "#/components/schemas/ProductPrice"}
        "discount":
          anyOf:
            - oneOf:
                - {"$ref": "#/components/schemas/CheckoutDiscountFixedOnceForeverDuration"}
                - {"$ref": "#/components/schemas/CheckoutDiscountFixedRepeatDuration"}
                - {"$ref": "#/components/schemas/CheckoutDiscountPercentageOnceForeverDuration"}
                - {"$ref": "#/components/schemas/CheckoutDiscountPercentageRepeatDuration"}
            - type: "null"
          title: "Discount"
        "organization": {"$ref": "#/components/schemas/Organization"}
        "attached_custom_fields":
          type: "array"
          items: {"$ref": "#/components/schemas/AttachedCustomField"}
          title: "Attached Custom Fields"
        "customer_session_token":
          type: "string"
          title: "Customer Session Token"
      title: "CheckoutPublicConfirmed"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "payment_processor"
        - "status"
        - "client_secret"
        - "url"
        - "expires_at"
        - "success_url"
        - "embed_origin"
        - "amount"
        - "tax_amount"
        - "currency"
        - "subtotal_amount"
        - "total_amount"
        - "product_id"
        - "product_price_id"
        - "discount_id"
        - "allow_discount_codes"
        - "is_discount_applicable"
        - "is_free_product_price"
        - "is_payment_required"
        - "is_payment_setup_required"
        - "is_payment_form_required"
        - "customer_id"
        - "customer_name"
        - "customer_email"
        - "customer_ip_address"
        - "customer_billing_address"
        - "customer_tax_id"
        - "payment_processor_metadata"
        - "product"
        - "product_price"
        - "discount"
        - "organization"
        - "attached_custom_fields"
        - "customer_session_token"
      description: "Checkout session data retrieved using the client secret after confirmation.\n\nIt contains a customer session token to retrieve order information\nright after the checkout."
    "CheckoutSortProperty":
      type: "string"
      title: "CheckoutSortProperty"
      enum:
        - "created_at"
        - "-created_at"
        - "expires_at"
        - "-expires_at"
    "CheckoutStatus":
      type: "string"
      title: "CheckoutStatus"
      enum:
        - "open"
        - "expired"
        - "confirmed"
        - "succeeded"
        - "failed"
    "CheckoutUpdate":
      type: "object"
      properties:
        "custom_field_data":
          anyOf:
            - type: "object"
            - type: "null"
          title: "Custom Field Data"
          description: "Key-value object storing custom field values."
        "product_price_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Product Price Id"
          description: "ID of the product price to checkout. Must correspond to a price linked to the same product."
        "amount":
          anyOf:
            - type: "integer"
              description: "Amount to pay in cents. Only useful for custom prices, it'll be ignored for fixed and free prices."
            - type: "null"
          title: "Amount"
        "customer_name":
          anyOf:
            - type: "string"
              description: "Name of the customer."
            - type: "null"
          title: "Customer Name"
        "customer_email":
          anyOf:
            - type: "string"
              format: "email"
              description: "Email address of the customer."
            - type: "null"
          title: "Customer Email"
        "customer_billing_address":
          anyOf:
            - {"$ref": "#/components/schemas/Address", "description": "Billing address of the customer."}
            - type: "null"
        "customer_tax_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Customer Tax Id"
        "metadata":
          anyOf:
            - type: "object"
              maxProperties: 50
              additionalProperties:
                anyOf:
                  - type: "string"
                    maxLength: 500
                    minLength: 1
                  - type: "integer"
                  - type: "boolean"
              description: "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
            - type: "null"
          title: "Metadata"
        "discount_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Discount Id"
          description: "ID of the discount to apply to the checkout."
        "allow_discount_codes":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Allow Discount Codes"
          description: "Whether to allow the customer to apply discount codes. If you apply a discount through `discount_id`, it'll still be applied, but the customer won't be able to change it."
        "customer_ip_address":
          anyOf:
            - type: "string"
              format: "ipvanyaddress"
              description: "IP address of the customer. Used to detect tax location."
            - type: "null"
          title: "Customer Ip Address"
        "customer_metadata":
          anyOf:
            - type: "object"
              maxProperties: 50
              additionalProperties:
                anyOf:
                  - type: "string"
                    maxLength: 500
                    minLength: 1
                  - type: "integer"
                  - type: "boolean"
              description: "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
            - type: "null"
          title: "Customer Metadata"
          description: "Key-value object allowing you to store additional information that'll be copied to the created customer.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
        "success_url":
          anyOf:
            - type: "string"
              maxLength: 2083
              minLength: 1
              format: "uri"
            - type: "null"
          title: "Success Url"
          description: "URL where the customer will be redirected after a successful payment.You can add the `checkout_id={CHECKOUT_ID}` query parameter to retrieve the checkout session id."
        "embed_origin":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Embed Origin"
          description: "If you plan to embed the checkout session, set this to the Origin of the embedding page. It'll allow the Polar iframe to communicate with the parent page."
      title: "CheckoutUpdate"
      description: "Update an existing checkout session using an access token."
    "CheckoutUpdatePublic":
      type: "object"
      properties:
        "custom_field_data":
          anyOf:
            - type: "object"
            - type: "null"
          title: "Custom Field Data"
          description: "Key-value object storing custom field values."
        "product_price_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Product Price Id"
          description: "ID of the product price to checkout. Must correspond to a price linked to the same product."
        "amount":
          anyOf:
            - type: "integer"
              description: "Amount to pay in cents. Only useful for custom prices, it'll be ignored for fixed and free prices."
            - type: "null"
          title: "Amount"
        "customer_name":
          anyOf:
            - type: "string"
              description: "Name of the customer."
            - type: "null"
          title: "Customer Name"
        "customer_email":
          anyOf:
            - type: "string"
              format: "email"
              description: "Email address of the customer."
            - type: "null"
          title: "Customer Email"
        "customer_billing_address":
          anyOf:
            - {"$ref": "#/components/schemas/Address", "description": "Billing address of the customer."}
            - type: "null"
        "customer_tax_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Customer Tax Id"
        "discount_code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Discount Code"
          description: "Discount code to apply to the checkout."
      title: "CheckoutUpdatePublic"
      description: "Update an existing checkout session using the client secret."
    "CurrencyAmount":
      type: "object"
      properties:
        "currency":
          type: "string"
          title: "Currency"
          description: "Three letter currency code (eg: USD)"
        "amount":
          type: "integer"
          title: "Amount"
          description: "Amount in the currencies smallest unit (cents if currency is USD)"
      title: "CurrencyAmount"
      required:
        - "currency"
        - "amount"
    "CustomField":
      oneOf:
        - {"$ref": "#/components/schemas/CustomFieldText"}
        - {"$ref": "#/components/schemas/CustomFieldNumber"}
        - {"$ref": "#/components/schemas/CustomFieldDate"}
        - {"$ref": "#/components/schemas/CustomFieldCheckbox"}
        - {"$ref": "#/components/schemas/CustomFieldSelect"}
      discriminator:
        propertyName: "type"
        mapping:
          "checkbox": "#/components/schemas/CustomFieldCheckbox"
          "date": "#/components/schemas/CustomFieldDate"
          "number": "#/components/schemas/CustomFieldNumber"
          "select": "#/components/schemas/CustomFieldSelect"
          "text": "#/components/schemas/CustomFieldText"
    "CustomFieldCheckbox":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the object."
        "metadata":
          type: "object"
          title: "Metadata"
          additionalProperties:
            anyOf:
              - type: "string"
              - type: "integer"
              - type: "boolean"
        "type":
          type: "string"
          title: "Type"
          enum:
            - "checkbox"
          const: "checkbox"
        "slug":
          type: "string"
          title: "Slug"
          description: "Identifier of the custom field. It'll be used as key when storing the value."
        "name":
          type: "string"
          title: "Name"
          description: "Name of the custom field."
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
          description: "The ID of the organization owning the custom field."
          x-polar-selector-widget: {"displayProperty": "name", "resourceName": "Organization", "resourceRoot": "/v1/organizations"}
        "properties": {"$ref": "#/components/schemas/CustomFieldCheckboxProperties"}
      title: "CustomFieldCheckbox"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "metadata"
        - "type"
        - "slug"
        - "name"
        - "organization_id"
        - "properties"
      description: "Schema for a custom field of type checkbox."
    "CustomFieldCheckboxProperties":
      type: "object"
      properties:
        "form_label":
          type: "string"
          title: "Form Label"
          minLength: 1
        "form_help_text":
          type: "string"
          title: "Form Help Text"
          minLength: 1
        "form_placeholder":
          type: "string"
          title: "Form Placeholder"
          minLength: 1
      title: "CustomFieldCheckboxProperties"
    "CustomFieldCreate":
      oneOf:
        - {"$ref": "#/components/schemas/CustomFieldCreateText"}
        - {"$ref": "#/components/schemas/CustomFieldCreateNumber"}
        - {"$ref": "#/components/schemas/CustomFieldCreateDate"}
        - {"$ref": "#/components/schemas/CustomFieldCreateCheckbox"}
        - {"$ref": "#/components/schemas/CustomFieldCreateSelect"}
      discriminator:
        propertyName: "type"
        mapping:
          "checkbox": "#/components/schemas/CustomFieldCreateCheckbox"
          "date": "#/components/schemas/CustomFieldCreateDate"
          "number": "#/components/schemas/CustomFieldCreateNumber"
          "select": "#/components/schemas/CustomFieldCreateSelect"
          "text": "#/components/schemas/CustomFieldCreateText"
    "CustomFieldCreateCheckbox":
      type: "object"
      properties:
        "metadata":
          type: "object"
          title: "Metadata"
          maxProperties: 50
          additionalProperties:
            anyOf:
              - type: "string"
                maxLength: 500
                minLength: 1
              - type: "integer"
              - type: "boolean"
          description: "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
        "type":
          type: "string"
          title: "Type"
          enum:
            - "checkbox"
          const: "checkbox"
        "slug":
          type: "string"
          title: "Slug"
          minLength: 1
          pattern: "^[a-z0-9-_]+$"
          description: "Identifier of the custom field. It'll be used as key when storing the value. Must be unique across the organization.It can only contain ASCII letters, numbers and hyphens."
        "name":
          type: "string"
          title: "Name"
          minLength: 1
          description: "Name of the custom field."
        "organization_id":
          anyOf:
            - type: "string"
              format: "uuid4"
              description: "The organization ID."
              x-polar-selector-widget: {"displayProperty": "name", "resourceName": "Organization", "resourceRoot": "/v1/organizations"}
            - type: "null"
          title: "Organization Id"
          description: "The ID of the organization owning the custom field. **Required unless you use an organization token.**"
        "properties": {"$ref": "#/components/schemas/CustomFieldCheckboxProperties"}
      title: "CustomFieldCreateCheckbox"
      required:
        - "type"
        - "slug"
        - "name"
        - "properties"
      description: "Schema to create a custom field of type checkbox."
    "CustomFieldCreateDate":
      type: "object"
      properties:
        "metadata":
          type: "object"
          title: "Metadata"
          maxProperties: 50
          additionalProperties:
            anyOf:
              - type: "string"
                maxLength: 500
                minLength: 1
              - type: "integer"
              - type: "boolean"
          description: "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
        "type":
          type: "string"
          title: "Type"
          enum:
            - "date"
          const: "date"
        "slug":
          type: "string"
          title: "Slug"
          minLength: 1
          pattern: "^[a-z0-9-_]+$"
          description: "Identifier of the custom field. It'll be used as key when storing the value. Must be unique across the organization.It can only contain ASCII letters, numbers and hyphens."
        "name":
          type: "string"
          title: "Name"
          minLength: 1
          description: "Name of the custom field."
        "organization_id":
          anyOf:
            - type: "string"
              format: "uuid4"
              description: "The organization ID."
              x-polar-selector-widget: {"displayProperty": "name", "resourceName": "Organization", "resourceRoot": "/v1/organizations"}
            - type: "null"
          title: "Organization Id"
          description: "The ID of the organization owning the custom field. **Required unless you use an organization token.**"
        "properties": {"$ref": "#/components/schemas/CustomFieldDateProperties"}
      title: "CustomFieldCreateDate"
      required:
        - "type"
        - "slug"
        - "name"
        - "properties"
      description: "Schema to create a custom field of type date."
    "CustomFieldCreateNumber":
      type: "object"
      properties:
        "metadata":
          type: "object"
          title: "Metadata"
          maxProperties: 50
          additionalProperties:
            anyOf:
              - type: "string"
                maxLength: 500
                minLength: 1
              - type: "integer"
              - type: "boolean"
          description: "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
        "type":
          type: "string"
          title: "Type"
          enum:
            - "number"
          const: "number"
        "slug":
          type: "string"
          title: "Slug"
          minLength: 1
          pattern: "^[a-z0-9-_]+$"
          description: "Identifier of the custom field. It'll be used as key when storing the value. Must be unique across the organization.It can only contain ASCII letters, numbers and hyphens."
        "name":
          type: "string"
          title: "Name"
          minLength: 1
          description: "Name of the custom field."
        "organization_id":
          anyOf:
            - type: "string"
              format: "uuid4"
              description: "The organization ID."
              x-polar-selector-widget: {"displayProperty": "name", "resourceName": "Organization", "resourceRoot": "/v1/organizations"}
            - type: "null"
          title: "Organization Id"
          description: "The ID of the organization owning the custom field. **Required unless you use an organization token.**"
        "properties": {"$ref": "#/components/schemas/CustomFieldNumberProperties"}
      title: "CustomFieldCreateNumber"
      required:
        - "type"
        - "slug"
        - "name"
        - "properties"
      description: "Schema to create a custom field of type number."
    "CustomFieldCreateSelect":
      type: "object"
      properties:
        "metadata":
          type: "object"
          title: "Metadata"
          maxProperties: 50
          additionalProperties:
            anyOf:
              - type: "string"
                maxLength: 500
                minLength: 1
              - type: "integer"
              - type: "boolean"
          description: "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
        "type":
          type: "string"
          title: "Type"
          enum:
            - "select"
          const: "select"
        "slug":
          type: "string"
          title: "Slug"
          minLength: 1
          pattern: "^[a-z0-9-_]+$"
          description: "Identifier of the custom field. It'll be used as key when storing the value. Must be unique across the organization.It can only contain ASCII letters, numbers and hyphens."
        "name":
          type: "string"
          title: "Name"
          minLength: 1
          description: "Name of the custom field."
        "organization_id":
          anyOf:
            - type: "string"
              format: "uuid4"
              description: "The organization ID."
              x-polar-selector-widget: {"displayProperty": "name", "resourceName": "Organization", "resourceRoot": "/v1/organizations"}
            - type: "null"
          title: "Organization Id"
          description: "The ID of the organization owning the custom field. **Required unless you use an organization token.**"
        "properties": {"$ref": "#/components/schemas/CustomFieldSelectProperties"}
      title: "CustomFieldCreateSelect"
      required:
        - "type"
        - "slug"
        - "name"
        - "properties"
      description: "Schema to create a custom field of type select."
    "CustomFieldCreateText":
      type: "object"
      properties:
        "metadata":
          type: "object"
          title: "Metadata"
          maxProperties: 50
          additionalProperties:
            anyOf:
              - type: "string"
                maxLength: 500
                minLength: 1
              - type: "integer"
              - type: "boolean"
          description: "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
        "type":
          type: "string"
          title: "Type"
          enum:
            - "text"
          const: "text"
        "slug":
          type: "string"
          title: "Slug"
          minLength: 1
          pattern: "^[a-z0-9-_]+$"
          description: "Identifier of the custom field. It'll be used as key when storing the value. Must be unique across the organization.It can only contain ASCII letters, numbers and hyphens."
        "name":
          type: "string"
          title: "Name"
          minLength: 1
          description: "Name of the custom field."
        "organization_id":
          anyOf:
            - type: "string"
              format: "uuid4"
              description: "The organization ID."
              x-polar-selector-widget: {"displayProperty": "name", "resourceName": "Organization", "resourceRoot": "/v1/organizations"}
            - type: "null"
          title: "Organization Id"
          description: "The ID of the organization owning the custom field. **Required unless you use an organization token.**"
        "properties": {"$ref": "#/components/schemas/CustomFieldTextProperties"}
      title: "CustomFieldCreateText"
      required:
        - "type"
        - "slug"
        - "name"
        - "properties"
      description: "Schema to create a custom field of type text."
    "CustomFieldDate":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the object."
        "metadata":
          type: "object"
          title: "Metadata"
          additionalProperties:
            anyOf:
              - type: "string"
              - type: "integer"
              - type: "boolean"
        "type":
          type: "string"
          title: "Type"
          enum:
            - "date"
          const: "date"
        "slug":
          type: "string"
          title: "Slug"
          description: "Identifier of the custom field. It'll be used as key when storing the value."
        "name":
          type: "string"
          title: "Name"
          description: "Name of the custom field."
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
          description: "The ID of the organization owning the custom field."
          x-polar-selector-widget: {"displayProperty": "name", "resourceName": "Organization", "resourceRoot": "/v1/organizations"}
        "properties": {"$ref": "#/components/schemas/CustomFieldDateProperties"}
      title: "CustomFieldDate"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "metadata"
        - "type"
        - "slug"
        - "name"
        - "organization_id"
        - "properties"
      description: "Schema for a custom field of type date."
    "CustomFieldDateProperties":
      type: "object"
      properties:
        "form_label":
          type: "string"
          title: "Form Label"
          minLength: 1
        "form_help_text":
          type: "string"
          title: "Form Help Text"
          minLength: 1
        "form_placeholder":
          type: "string"
          title: "Form Placeholder"
          minLength: 1
        "ge":
          type: "integer"
          title: "Ge"
        "le":
          type: "integer"
          title: "Le"
      title: "CustomFieldDateProperties"
    "CustomFieldNumber":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the object."
        "metadata":
          type: "object"
          title: "Metadata"
          additionalProperties:
            anyOf:
              - type: "string"
              - type: "integer"
              - type: "boolean"
        "type":
          type: "string"
          title: "Type"
          enum:
            - "number"
          const: "number"
        "slug":
          type: "string"
          title: "Slug"
          description: "Identifier of the custom field. It'll be used as key when storing the value."
        "name":
          type: "string"
          title: "Name"
          description: "Name of the custom field."
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
          description: "The ID of the organization owning the custom field."
          x-polar-selector-widget: {"displayProperty": "name", "resourceName": "Organization", "resourceRoot": "/v1/organizations"}
        "properties": {"$ref": "#/components/schemas/CustomFieldNumberProperties"}
      title: "CustomFieldNumber"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "metadata"
        - "type"
        - "slug"
        - "name"
        - "organization_id"
        - "properties"
      description: "Schema for a custom field of type number."
    "CustomFieldNumberProperties":
      type: "object"
      properties:
        "form_label":
          type: "string"
          title: "Form Label"
          minLength: 1
        "form_help_text":
          type: "string"
          title: "Form Help Text"
          minLength: 1
        "form_placeholder":
          type: "string"
          title: "Form Placeholder"
          minLength: 1
        "ge":
          type: "integer"
          title: "Ge"
        "le":
          type: "integer"
          title: "Le"
      title: "CustomFieldNumberProperties"
    "CustomFieldSelect":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the object."
        "metadata":
          type: "object"
          title: "Metadata"
          additionalProperties:
            anyOf:
              - type: "string"
              - type: "integer"
              - type: "boolean"
        "type":
          type: "string"
          title: "Type"
          enum:
            - "select"
          const: "select"
        "slug":
          type: "string"
          title: "Slug"
          description: "Identifier of the custom field. It'll be used as key when storing the value."
        "name":
          type: "string"
          title: "Name"
          description: "Name of the custom field."
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
          description: "The ID of the organization owning the custom field."
          x-polar-selector-widget: {"displayProperty": "name", "resourceName": "Organization", "resourceRoot": "/v1/organizations"}
        "properties": {"$ref": "#/components/schemas/CustomFieldSelectProperties"}
      title: "CustomFieldSelect"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "metadata"
        - "type"
        - "slug"
        - "name"
        - "organization_id"
        - "properties"
      description: "Schema for a custom field of type select."
    "CustomFieldSelectOption":
      type: "object"
      properties:
        "value":
          type: "string"
          title: "Value"
          minLength: 1
        "label":
          type: "string"
          title: "Label"
          minLength: 1
      title: "CustomFieldSelectOption"
      required:
        - "value"
        - "label"
    "CustomFieldSelectProperties":
      type: "object"
      properties:
        "form_label":
          type: "string"
          title: "Form Label"
          minLength: 1
        "form_help_text":
          type: "string"
          title: "Form Help Text"
          minLength: 1
        "form_placeholder":
          type: "string"
          title: "Form Placeholder"
          minLength: 1
        "options":
          type: "array"
          items: {"$ref": "#/components/schemas/CustomFieldSelectOption"}
          title: "Options"
      title: "CustomFieldSelectProperties"
      required:
        - "options"
    "CustomFieldSortProperty":
      type: "string"
      title: "CustomFieldSortProperty"
      enum:
        - "created_at"
        - "-created_at"
        - "slug"
        - "-slug"
        - "name"
        - "-name"
        - "type"
        - "-type"
    "CustomFieldText":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the object."
        "metadata":
          type: "object"
          title: "Metadata"
          additionalProperties:
            anyOf:
              - type: "string"
              - type: "integer"
              - type: "boolean"
        "type":
          type: "string"
          title: "Type"
          enum:
            - "text"
          const: "text"
        "slug":
          type: "string"
          title: "Slug"
          description: "Identifier of the custom field. It'll be used as key when storing the value."
        "name":
          type: "string"
          title: "Name"
          description: "Name of the custom field."
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
          description: "The ID of the organization owning the custom field."
          x-polar-selector-widget: {"displayProperty": "name", "resourceName": "Organization", "resourceRoot": "/v1/organizations"}
        "properties": {"$ref": "#/components/schemas/CustomFieldTextProperties"}
      title: "CustomFieldText"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "metadata"
        - "type"
        - "slug"
        - "name"
        - "organization_id"
        - "properties"
      description: "Schema for a custom field of type text."
    "CustomFieldTextProperties":
      type: "object"
      properties:
        "form_label":
          type: "string"
          title: "Form Label"
          minLength: 1
        "form_help_text":
          type: "string"
          title: "Form Help Text"
          minLength: 1
        "form_placeholder":
          type: "string"
          title: "Form Placeholder"
          minLength: 1
        "textarea":
          type: "boolean"
          title: "Textarea"
        "min_length":
          type: "integer"
          title: "Min Length"
          minimum: 0
        "max_length":
          type: "integer"
          title: "Max Length"
          minimum: 0
      title: "CustomFieldTextProperties"
    "CustomFieldType":
      type: "string"
      title: "CustomFieldType"
      enum:
        - "text"
        - "number"
        - "date"
        - "checkbox"
        - "select"
    "CustomFieldUpdate":
      oneOf:
        - {"$ref": "#/components/schemas/CustomFieldUpdateText"}
        - {"$ref": "#/components/schemas/CustomFieldUpdateNumber"}
        - {"$ref": "#/components/schemas/CustomFieldUpdateDate"}
        - {"$ref": "#/components/schemas/CustomFieldUpdateCheckbox"}
        - {"$ref": "#/components/schemas/CustomFieldUpdateSelect"}
      discriminator:
        propertyName: "type"
        mapping:
          "checkbox": "#/components/schemas/CustomFieldUpdateCheckbox"
          "date": "#/components/schemas/CustomFieldUpdateDate"
          "number": "#/components/schemas/CustomFieldUpdateNumber"
          "select": "#/components/schemas/CustomFieldUpdateSelect"
          "text": "#/components/schemas/CustomFieldUpdateText"
    "CustomFieldUpdateCheckbox":
      type: "object"
      properties:
        "metadata":
          anyOf:
            - type: "object"
              maxProperties: 50
              additionalProperties:
                anyOf:
                  - type: "string"
                    maxLength: 500
                    minLength: 1
                  - type: "integer"
                  - type: "boolean"
              description: "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
            - type: "null"
          title: "Metadata"
        "name":
          anyOf:
            - type: "string"
              minLength: 1
              description: "Name of the custom field."
            - type: "null"
          title: "Name"
        "slug":
          anyOf:
            - type: "string"
              minLength: 1
              pattern: "^[a-z0-9-_]+$"
              description: "Identifier of the custom field. It'll be used as key when storing the value. Must be unique across the organization.It can only contain ASCII letters, numbers and hyphens."
            - type: "null"
          title: "Slug"
        "type":
          type: "string"
          title: "Type"
          enum:
            - "checkbox"
          const: "checkbox"
        "properties":
          anyOf:
            - {"$ref": "#/components/schemas/CustomFieldCheckboxProperties"}
            - type: "null"
      title: "CustomFieldUpdateCheckbox"
      required:
        - "type"
      description: "Schema to update a custom field of type checkbox."
    "CustomFieldUpdateDate":
      type: "object"
      properties:
        "metadata":
          anyOf:
            - type: "object"
              maxProperties: 50
              additionalProperties:
                anyOf:
                  - type: "string"
                    maxLength: 500
                    minLength: 1
                  - type: "integer"
                  - type: "boolean"
              description: "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
            - type: "null"
          title: "Metadata"
        "name":
          anyOf:
            - type: "string"
              minLength: 1
              description: "Name of the custom field."
            - type: "null"
          title: "Name"
        "slug":
          anyOf:
            - type: "string"
              minLength: 1
              pattern: "^[a-z0-9-_]+$"
              description: "Identifier of the custom field. It'll be used as key when storing the value. Must be unique across the organization.It can only contain ASCII letters, numbers and hyphens."
            - type: "null"
          title: "Slug"
        "type":
          type: "string"
          title: "Type"
          enum:
            - "date"
          const: "date"
        "properties":
          anyOf:
            - {"$ref": "#/components/schemas/CustomFieldDateProperties"}
            - type: "null"
      title: "CustomFieldUpdateDate"
      required:
        - "type"
      description: "Schema to update a custom field of type date."
    "CustomFieldUpdateNumber":
      type: "object"
      properties:
        "metadata":
          anyOf:
            - type: "object"
              maxProperties: 50
              additionalProperties:
                anyOf:
                  - type: "string"
                    maxLength: 500
                    minLength: 1
                  - type: "integer"
                  - type: "boolean"
              description: "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
            - type: "null"
          title: "Metadata"
        "name":
          anyOf:
            - type: "string"
              minLength: 1
              description: "Name of the custom field."
            - type: "null"
          title: "Name"
        "slug":
          anyOf:
            - type: "string"
              minLength: 1
              pattern: "^[a-z0-9-_]+$"
              description: "Identifier of the custom field. It'll be used as key when storing the value. Must be unique across the organization.It can only contain ASCII letters, numbers and hyphens."
            - type: "null"
          title: "Slug"
        "type":
          type: "string"
          title: "Type"
          enum:
            - "number"
          const: "number"
        "properties":
          anyOf:
            - {"$ref": "#/components/schemas/CustomFieldNumberProperties"}
            - type: "null"
      title: "CustomFieldUpdateNumber"
      required:
        - "type"
      description: "Schema to update a custom field of type number."
    "CustomFieldUpdateSelect":
      type: "object"
      properties:
        "metadata":
          anyOf:
            - type: "object"
              maxProperties: 50
              additionalProperties:
                anyOf:
                  - type: "string"
                    maxLength: 500
                    minLength: 1
                  - type: "integer"
                  - type: "boolean"
              description: "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
            - type: "null"
          title: "Metadata"
        "name":
          anyOf:
            - type: "string"
              minLength: 1
              description: "Name of the custom field."
            - type: "null"
          title: "Name"
        "slug":
          anyOf:
            - type: "string"
              minLength: 1
              pattern: "^[a-z0-9-_]+$"
              description: "Identifier of the custom field. It'll be used as key when storing the value. Must be unique across the organization.It can only contain ASCII letters, numbers and hyphens."
            - type: "null"
          title: "Slug"
        "type":
          type: "string"
          title: "Type"
          enum:
            - "select"
          const: "select"
        "properties":
          anyOf:
            - {"$ref": "#/components/schemas/CustomFieldSelectProperties"}
            - type: "null"
      title: "CustomFieldUpdateSelect"
      required:
        - "type"
      description: "Schema to update a custom field of type select."
    "CustomFieldUpdateText":
      type: "object"
      properties:
        "metadata":
          anyOf:
            - type: "object"
              maxProperties: 50
              additionalProperties:
                anyOf:
                  - type: "string"
                    maxLength: 500
                    minLength: 1
                  - type: "integer"
                  - type: "boolean"
              description: "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
            - type: "null"
          title: "Metadata"
        "name":
          anyOf:
            - type: "string"
              minLength: 1
              description: "Name of the custom field."
            - type: "null"
          title: "Name"
        "slug":
          anyOf:
            - type: "string"
              minLength: 1
              pattern: "^[a-z0-9-_]+$"
              description: "Identifier of the custom field. It'll be used as key when storing the value. Must be unique across the organization.It can only contain ASCII letters, numbers and hyphens."
            - type: "null"
          title: "Slug"
        "type":
          type: "string"
          title: "Type"
          enum:
            - "text"
          const: "text"
        "properties":
          anyOf:
            - {"$ref": "#/components/schemas/CustomFieldTextProperties"}
            - type: "null"
      title: "CustomFieldUpdateText"
      required:
        - "type"
      description: "Schema to update a custom field of type text."
    "Customer":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the object."
        "metadata":
          type: "object"
          title: "Metadata"
          additionalProperties:
            anyOf:
              - type: "string"
              - type: "integer"
              - type: "boolean"
        "email":
          type: "string"
          title: "Email"
        "email_verified":
          type: "boolean"
          title: "Email Verified"
        "name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Name"
        "billing_address":
          anyOf:
            - {"$ref": "#/components/schemas/Address"}
            - type: "null"
        "tax_id":
          anyOf:
            - type: "array"
              prefixItems:
                - type: "string"
                - {"$ref": "#/components/schemas/TaxIDFormat"}
              maxItems: 2
              minItems: 2
            - type: "null"
          title: "Tax Id"
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
        "avatar_url":
          type: "string"
          title: "Avatar Url"
          readOnly: true
      title: "Customer"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "metadata"
        - "email"
        - "email_verified"
        - "name"
        - "billing_address"
        - "tax_id"
        - "organization_id"
        - "avatar_url"
      description: "A customer in an organization."
    "CustomerBenefitGrant":
      anyOf:
        - {"$ref": "#/components/schemas/CustomerBenefitGrantDiscord"}
        - {"$ref": "#/components/schemas/CustomerBenefitGrantGitHubRepository"}
        - {"$ref": "#/components/schemas/CustomerBenefitGrantDownloadables"}
        - {"$ref": "#/components/schemas/CustomerBenefitGrantLicenseKeys"}
        - {"$ref": "#/components/schemas/CustomerBenefitGrantAds"}
        - {"$ref": "#/components/schemas/CustomerBenefitGrantCustom"}
    "CustomerBenefitGrantAds":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the object."
        "granted_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Granted At"
        "revoked_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Revoked At"
        "customer_id":
          type: "string"
          title: "Customer Id"
          format: "uuid4"
        "benefit_id":
          type: "string"
          title: "Benefit Id"
          format: "uuid4"
        "subscription_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Subscription Id"
        "order_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Order Id"
        "is_granted":
          type: "boolean"
          title: "Is Granted"
        "is_revoked":
          type: "boolean"
          title: "Is Revoked"
        "benefit": {"$ref": "#/components/schemas/BenefitAdsSubscriber"}
        "properties": {"$ref": "#/components/schemas/BenefitGrantAdsProperties"}
      title: "CustomerBenefitGrantAds"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "granted_at"
        - "revoked_at"
        - "customer_id"
        - "benefit_id"
        - "subscription_id"
        - "order_id"
        - "is_granted"
        - "is_revoked"
        - "benefit"
        - "properties"
    "CustomerBenefitGrantAdsUpdate":
      type: "object"
      properties:
        "benefit_type":
          type: "string"
          title: "Benefit Type"
          enum:
            - "ads"
          const: "ads"
      title: "CustomerBenefitGrantAdsUpdate"
      required:
        - "benefit_type"
    "CustomerBenefitGrantCustom":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the object."
        "granted_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Granted At"
        "revoked_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Revoked At"
        "customer_id":
          type: "string"
          title: "Customer Id"
          format: "uuid4"
        "benefit_id":
          type: "string"
          title: "Benefit Id"
          format: "uuid4"
        "subscription_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Subscription Id"
        "order_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Order Id"
        "is_granted":
          type: "boolean"
          title: "Is Granted"
        "is_revoked":
          type: "boolean"
          title: "Is Revoked"
        "benefit": {"$ref": "#/components/schemas/BenefitCustomSubscriber"}
        "properties": {"$ref": "#/components/schemas/BenefitGrantCustomProperties"}
      title: "CustomerBenefitGrantCustom"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "granted_at"
        - "revoked_at"
        - "customer_id"
        - "benefit_id"
        - "subscription_id"
        - "order_id"
        - "is_granted"
        - "is_revoked"
        - "benefit"
        - "properties"
    "CustomerBenefitGrantCustomUpdate":
      type: "object"
      properties:
        "benefit_type":
          type: "string"
          title: "Benefit Type"
          enum:
            - "custom"
          const: "custom"
      title: "CustomerBenefitGrantCustomUpdate"
      required:
        - "benefit_type"
    "CustomerBenefitGrantDiscord":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the object."
        "granted_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Granted At"
        "revoked_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Revoked At"
        "customer_id":
          type: "string"
          title: "Customer Id"
          format: "uuid4"
        "benefit_id":
          type: "string"
          title: "Benefit Id"
          format: "uuid4"
        "subscription_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Subscription Id"
        "order_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Order Id"
        "is_granted":
          type: "boolean"
          title: "Is Granted"
        "is_revoked":
          type: "boolean"
          title: "Is Revoked"
        "benefit": {"$ref": "#/components/schemas/BenefitDiscordSubscriber"}
        "properties": {"$ref": "#/components/schemas/BenefitGrantDiscordProperties"}
      title: "CustomerBenefitGrantDiscord"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "granted_at"
        - "revoked_at"
        - "customer_id"
        - "benefit_id"
        - "subscription_id"
        - "order_id"
        - "is_granted"
        - "is_revoked"
        - "benefit"
        - "properties"
    "CustomerBenefitGrantDiscordPropertiesUpdate":
      type: "object"
      properties:
        "account_id":
          type: "string"
          title: "Account Id"
      title: "CustomerBenefitGrantDiscordPropertiesUpdate"
      required:
        - "account_id"
    "CustomerBenefitGrantDiscordUpdate":
      type: "object"
      properties:
        "benefit_type":
          type: "string"
          title: "Benefit Type"
          enum:
            - "discord"
          const: "discord"
        "properties": {"$ref": "#/components/schemas/CustomerBenefitGrantDiscordPropertiesUpdate"}
      title: "CustomerBenefitGrantDiscordUpdate"
      required:
        - "benefit_type"
        - "properties"
    "CustomerBenefitGrantDownloadables":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the object."
        "granted_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Granted At"
        "revoked_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Revoked At"
        "customer_id":
          type: "string"
          title: "Customer Id"
          format: "uuid4"
        "benefit_id":
          type: "string"
          title: "Benefit Id"
          format: "uuid4"
        "subscription_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Subscription Id"
        "order_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Order Id"
        "is_granted":
          type: "boolean"
          title: "Is Granted"
        "is_revoked":
          type: "boolean"
          title: "Is Revoked"
        "benefit": {"$ref": "#/components/schemas/BenefitDownloadablesSubscriber"}
        "properties": {"$ref": "#/components/schemas/BenefitGrantDownloadablesProperties"}
      title: "CustomerBenefitGrantDownloadables"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "granted_at"
        - "revoked_at"
        - "customer_id"
        - "benefit_id"
        - "subscription_id"
        - "order_id"
        - "is_granted"
        - "is_revoked"
        - "benefit"
        - "properties"
    "CustomerBenefitGrantDownloadablesUpdate":
      type: "object"
      properties:
        "benefit_type":
          type: "string"
          title: "Benefit Type"
          enum:
            - "downloadables"
          const: "downloadables"
      title: "CustomerBenefitGrantDownloadablesUpdate"
      required:
        - "benefit_type"
    "CustomerBenefitGrantGitHubRepository":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the object."
        "granted_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Granted At"
        "revoked_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Revoked At"
        "customer_id":
          type: "string"
          title: "Customer Id"
          format: "uuid4"
        "benefit_id":
          type: "string"
          title: "Benefit Id"
          format: "uuid4"
        "subscription_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Subscription Id"
        "order_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Order Id"
        "is_granted":
          type: "boolean"
          title: "Is Granted"
        "is_revoked":
          type: "boolean"
          title: "Is Revoked"
        "benefit": {"$ref": "#/components/schemas/BenefitGitHubRepositorySubscriber"}
        "properties": {"$ref": "#/components/schemas/BenefitGrantGitHubRepositoryProperties"}
      title: "CustomerBenefitGrantGitHubRepository"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "granted_at"
        - "revoked_at"
        - "customer_id"
        - "benefit_id"
        - "subscription_id"
        - "order_id"
        - "is_granted"
        - "is_revoked"
        - "benefit"
        - "properties"
    "CustomerBenefitGrantGitHubRepositoryPropertiesUpdate":
      type: "object"
      properties:
        "account_id":
          type: "string"
          title: "Account Id"
      title: "CustomerBenefitGrantGitHubRepositoryPropertiesUpdate"
      required:
        - "account_id"
    "CustomerBenefitGrantGitHubRepositoryUpdate":
      type: "object"
      properties:
        "benefit_type":
          type: "string"
          title: "Benefit Type"
          enum:
            - "github_repository"
          const: "github_repository"
        "properties": {"$ref": "#/components/schemas/CustomerBenefitGrantGitHubRepositoryPropertiesUpdate"}
      title: "CustomerBenefitGrantGitHubRepositoryUpdate"
      required:
        - "benefit_type"
        - "properties"
    "CustomerBenefitGrantLicenseKeys":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the object."
        "granted_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Granted At"
        "revoked_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Revoked At"
        "customer_id":
          type: "string"
          title: "Customer Id"
          format: "uuid4"
        "benefit_id":
          type: "string"
          title: "Benefit Id"
          format: "uuid4"
        "subscription_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Subscription Id"
        "order_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Order Id"
        "is_granted":
          type: "boolean"
          title: "Is Granted"
        "is_revoked":
          type: "boolean"
          title: "Is Revoked"
        "benefit": {"$ref": "#/components/schemas/BenefitLicenseKeysSubscriber"}
        "properties": {"$ref": "#/components/schemas/BenefitGrantLicenseKeysProperties"}
      title: "CustomerBenefitGrantLicenseKeys"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "granted_at"
        - "revoked_at"
        - "customer_id"
        - "benefit_id"
        - "subscription_id"
        - "order_id"
        - "is_granted"
        - "is_revoked"
        - "benefit"
        - "properties"
    "CustomerBenefitGrantLicenseKeysUpdate":
      type: "object"
      properties:
        "benefit_type":
          type: "string"
          title: "Benefit Type"
          enum:
            - "license_keys"
          const: "license_keys"
      title: "CustomerBenefitGrantLicenseKeysUpdate"
      required:
        - "benefit_type"
    "CustomerBenefitGrantSortProperty":
      type: "string"
      title: "CustomerBenefitGrantSortProperty"
      enum:
        - "granted_at"
        - "-granted_at"
        - "type"
        - "-type"
        - "organization"
        - "-organization"
    "CustomerBenefitGrantUpdate":
      oneOf:
        - {"$ref": "#/components/schemas/CustomerBenefitGrantDiscordUpdate"}
        - {"$ref": "#/components/schemas/CustomerBenefitGrantGitHubRepositoryUpdate"}
        - {"$ref": "#/components/schemas/CustomerBenefitGrantDownloadablesUpdate"}
        - {"$ref": "#/components/schemas/CustomerBenefitGrantLicenseKeysUpdate"}
        - {"$ref": "#/components/schemas/CustomerBenefitGrantAdsUpdate"}
        - {"$ref": "#/components/schemas/CustomerBenefitGrantCustomUpdate"}
      discriminator:
        propertyName: "benefit_type"
        mapping:
          "ads": "#/components/schemas/CustomerBenefitGrantAdsUpdate"
          "custom": "#/components/schemas/CustomerBenefitGrantCustomUpdate"
          "discord": "#/components/schemas/CustomerBenefitGrantDiscordUpdate"
          "downloadables": "#/components/schemas/CustomerBenefitGrantDownloadablesUpdate"
          "github_repository": "#/components/schemas/CustomerBenefitGrantGitHubRepositoryUpdate"
          "license_keys": "#/components/schemas/CustomerBenefitGrantLicenseKeysUpdate"
    "CustomerCreate":
      type: "object"
      properties:
        "email":
          type: "string"
          title: "Email"
          format: "email"
        "name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Name"
        "billing_address":
          anyOf:
            - {"$ref": "#/components/schemas/Address"}
            - type: "null"
        "tax_id":
          anyOf:
            - type: "array"
              prefixItems:
                - type: "string"
                - {"$ref": "#/components/schemas/TaxIDFormat"}
              maxItems: 2
              minItems: 2
            - type: "null"
          title: "Tax Id"
        "organization_id":
          anyOf:
            - type: "string"
              format: "uuid4"
              description: "The organization ID."
              x-polar-selector-widget: {"displayProperty": "name", "resourceName": "Organization", "resourceRoot": "/v1/organizations"}
            - type: "null"
          title: "Organization Id"
          description: "The ID of the organization owning the customer. **Required unless you use an organization token.**"
      title: "CustomerCreate"
      required:
        - "email"
    "CustomerOrder":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
        "amount":
          type: "integer"
          title: "Amount"
        "tax_amount":
          type: "integer"
          title: "Tax Amount"
        "currency":
          type: "string"
          title: "Currency"
        "customer_id":
          type: "string"
          title: "Customer Id"
          format: "uuid4"
        "product_id":
          type: "string"
          title: "Product Id"
          format: "uuid4"
        "product_price_id":
          type: "string"
          title: "Product Price Id"
          format: "uuid4"
        "subscription_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Subscription Id"
        "user_id":
          type: "string"
          title: "User Id"
          format: "uuid4"
          deprecated: true
        "product": {"$ref": "#/components/schemas/CustomerOrderProduct"}
        "product_price": {"$ref": "#/components/schemas/ProductPrice"}
        "subscription":
          anyOf:
            - {"$ref": "#/components/schemas/CustomerOrderSubscription"}
            - type: "null"
      title: "CustomerOrder"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "amount"
        - "tax_amount"
        - "currency"
        - "customer_id"
        - "product_id"
        - "product_price_id"
        - "subscription_id"
        - "user_id"
        - "product"
        - "product_price"
        - "subscription"
    "CustomerOrderInvoice":
      type: "object"
      properties:
        "url":
          type: "string"
          title: "Url"
          description: "The URL to the invoice."
      title: "CustomerOrderInvoice"
      required:
        - "url"
      description: "Order's invoice data."
    "CustomerOrderProduct":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the product."
        "name":
          type: "string"
          title: "Name"
          description: "The name of the product."
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
          description: "The description of the product."
        "is_recurring":
          type: "boolean"
          title: "Is Recurring"
          description: "Whether the product is a subscription tier."
        "is_archived":
          type: "boolean"
          title: "Is Archived"
          description: "Whether the product is archived and no longer available."
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
          description: "The ID of the organization owning the product."
        "prices":
          type: "array"
          items: {"$ref": "#/components/schemas/ProductPrice"}
          title: "Prices"
          description: "List of prices for this product."
        "benefits":
          type: "array"
          items: {"$ref": "#/components/schemas/BenefitBase"}
          title: "BenefitPublic"
          description: "List of benefits granted by the product."
        "medias":
          type: "array"
          items: {"$ref": "#/components/schemas/ProductMediaFileRead"}
          title: "Medias"
          description: "List of medias associated to the product."
        "organization": {"$ref": "#/components/schemas/Organization"}
      title: "CustomerOrderProduct"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "name"
        - "description"
        - "is_recurring"
        - "is_archived"
        - "organization_id"
        - "prices"
        - "benefits"
        - "medias"
        - "organization"
    "CustomerOrderSortProperty":
      type: "string"
      title: "CustomerOrderSortProperty"
      enum:
        - "created_at"
        - "-created_at"
        - "amount"
        - "-amount"
        - "organization"
        - "-organization"
        - "product"
        - "-product"
        - "subscription"
        - "-subscription"
    "CustomerOrderSubscription":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the object."
        "amount":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Amount"
        "currency":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Currency"
        "recurring_interval": {"$ref": "#/components/schemas/SubscriptionRecurringInterval"}
        "status": {"$ref": "#/components/schemas/SubscriptionStatus"}
        "current_period_start":
          type: "string"
          title: "Current Period Start"
          format: "date-time"
        "current_period_end":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Current Period End"
        "cancel_at_period_end":
          type: "boolean"
          title: "Cancel At Period End"
        "started_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Started At"
        "ended_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Ended At"
        "customer_id":
          type: "string"
          title: "Customer Id"
          format: "uuid4"
        "product_id":
          type: "string"
          title: "Product Id"
          format: "uuid4"
        "price_id":
          type: "string"
          title: "Price Id"
          format: "uuid4"
        "discount_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Discount Id"
        "checkout_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Checkout Id"
      title: "CustomerOrderSubscription"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "amount"
        - "currency"
        - "recurring_interval"
        - "status"
        - "current_period_start"
        - "current_period_end"
        - "cancel_at_period_end"
        - "started_at"
        - "ended_at"
        - "customer_id"
        - "product_id"
        - "price_id"
        - "discount_id"
        - "checkout_id"
    "CustomerPortalCustomer":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the object."
        "email":
          type: "string"
          title: "Email"
        "email_verified":
          type: "boolean"
          title: "Email Verified"
        "name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Name"
        "billing_address":
          anyOf:
            - {"$ref": "#/components/schemas/Address"}
            - type: "null"
        "tax_id":
          anyOf:
            - type: "array"
              prefixItems:
                - type: "string"
                - {"$ref": "#/components/schemas/TaxIDFormat"}
              maxItems: 2
              minItems: 2
            - type: "null"
          title: "Tax Id"
        "oauth_accounts":
          type: "object"
          title: "Oauth Accounts"
          additionalProperties: {"$ref": "#/components/schemas/CustomerPortalOAuthAccount"}
      title: "CustomerPortalCustomer"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "email"
        - "email_verified"
        - "name"
        - "billing_address"
        - "tax_id"
        - "oauth_accounts"
    "CustomerPortalOAuthAccount":
      type: "object"
      properties:
        "account_id":
          type: "string"
          title: "Account Id"
        "account_username":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Account Username"
      title: "CustomerPortalOAuthAccount"
      required:
        - "account_id"
        - "account_username"
    "CustomerSession":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the object."
        "token":
          type: "string"
          title: "Token"
        "expires_at":
          type: "string"
          title: "Expires At"
          format: "date-time"
        "customer_id":
          type: "string"
          title: "Customer Id"
          format: "uuid4"
        "customer": {"$ref": "#/components/schemas/Customer"}
      title: "CustomerSession"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "token"
        - "expires_at"
        - "customer_id"
        - "customer"
      description: "A customer session that can be used to authenticate as a customer."
    "CustomerSessionCreate":
      type: "object"
      properties:
        "customer_id":
          type: "string"
          title: "Customer Id"
          format: "uuid4"
          description: "ID of the customer to create a session for."
      title: "CustomerSessionCreate"
      required:
        - "customer_id"
      description: "Schema for creating a customer session."
    "CustomerSortProperty":
      type: "string"
      title: "CustomerSortProperty"
      enum:
        - "created_at"
        - "-created_at"
        - "email"
        - "-email"
        - "name"
        - "-name"
    "CustomerSubscription":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the object."
        "amount":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Amount"
        "currency":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Currency"
        "recurring_interval": {"$ref": "#/components/schemas/SubscriptionRecurringInterval"}
        "status": {"$ref": "#/components/schemas/SubscriptionStatus"}
        "current_period_start":
          type: "string"
          title: "Current Period Start"
          format: "date-time"
        "current_period_end":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Current Period End"
        "cancel_at_period_end":
          type: "boolean"
          title: "Cancel At Period End"
        "started_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Started At"
        "ended_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Ended At"
        "customer_id":
          type: "string"
          title: "Customer Id"
          format: "uuid4"
        "product_id":
          type: "string"
          title: "Product Id"
          format: "uuid4"
        "price_id":
          type: "string"
          title: "Price Id"
          format: "uuid4"
        "discount_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Discount Id"
        "checkout_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Checkout Id"
        "user_id":
          type: "string"
          title: "User Id"
          format: "uuid4"
          deprecated: true
        "product": {"$ref": "#/components/schemas/CustomerSubscriptionProduct"}
        "price": {"$ref": "#/components/schemas/ProductPrice"}
      title: "CustomerSubscription"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "amount"
        - "currency"
        - "recurring_interval"
        - "status"
        - "current_period_start"
        - "current_period_end"
        - "cancel_at_period_end"
        - "started_at"
        - "ended_at"
        - "customer_id"
        - "product_id"
        - "price_id"
        - "discount_id"
        - "checkout_id"
        - "user_id"
        - "product"
        - "price"
    "CustomerSubscriptionProduct":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the product."
        "name":
          type: "string"
          title: "Name"
          description: "The name of the product."
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
          description: "The description of the product."
        "is_recurring":
          type: "boolean"
          title: "Is Recurring"
          description: "Whether the product is a subscription tier."
        "is_archived":
          type: "boolean"
          title: "Is Archived"
          description: "Whether the product is archived and no longer available."
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
          description: "The ID of the organization owning the product."
        "prices":
          type: "array"
          items: {"$ref": "#/components/schemas/ProductPrice"}
          title: "Prices"
          description: "List of prices for this product."
        "benefits":
          type: "array"
          items: {"$ref": "#/components/schemas/BenefitBase"}
          title: "BenefitPublic"
          description: "List of benefits granted by the product."
        "medias":
          type: "array"
          items: {"$ref": "#/components/schemas/ProductMediaFileRead"}
          title: "Medias"
          description: "List of medias associated to the product."
        "organization": {"$ref": "#/components/schemas/Organization"}
      title: "CustomerSubscriptionProduct"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "name"
        - "description"
        - "is_recurring"
        - "is_archived"
        - "organization_id"
        - "prices"
        - "benefits"
        - "medias"
        - "organization"
    "CustomerSubscriptionSortProperty":
      type: "string"
      title: "CustomerSubscriptionSortProperty"
      enum:
        - "started_at"
        - "-started_at"
        - "amount"
        - "-amount"
        - "status"
        - "-status"
        - "organization"
        - "-organization"
        - "product"
        - "-product"
    "CustomerSubscriptionUpdate":
      type: "object"
      properties:
        "product_price_id":
          type: "string"
          title: "Product Price Id"
          format: "uuid4"
      title: "CustomerSubscriptionUpdate"
      required:
        - "product_price_id"
    "CustomerUpdate":
      type: "object"
      properties:
        "email":
          anyOf:
            - type: "string"
              format: "email"
            - type: "null"
          title: "Email"
        "name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Name"
        "billing_address":
          anyOf:
            - {"$ref": "#/components/schemas/Address"}
            - type: "null"
        "tax_id":
          anyOf:
            - type: "array"
              prefixItems:
                - type: "string"
                - {"$ref": "#/components/schemas/TaxIDFormat"}
              maxItems: 2
              minItems: 2
            - type: "null"
          title: "Tax Id"
      title: "CustomerUpdate"
    "Discount":
      oneOf:
        - {"$ref": "#/components/schemas/DiscountFixedOnceForeverDuration"}
        - {"$ref": "#/components/schemas/DiscountFixedRepeatDuration"}
        - {"$ref": "#/components/schemas/DiscountPercentageOnceForeverDuration"}
        - {"$ref": "#/components/schemas/DiscountPercentageRepeatDuration"}
    "DiscountCreate":
      oneOf:
        - {"$ref": "#/components/schemas/DiscountFixedOnceForeverDurationCreate"}
        - {"$ref": "#/components/schemas/DiscountFixedRepeatDurationCreate"}
        - {"$ref": "#/components/schemas/DiscountPercentageOnceForeverDurationCreate"}
        - {"$ref": "#/components/schemas/DiscountPercentageRepeatDurationCreate"}
    "DiscountDuration":
      type: "string"
      title: "DiscountDuration"
      enum:
        - "once"
        - "forever"
        - "repeating"
    "DiscountFixedOnceForeverDuration":
      type: "object"
      properties:
        "duration": {"$ref": "#/components/schemas/DiscountDuration"}
        "type": {"$ref": "#/components/schemas/DiscountType"}
        "amount":
          type: "integer"
          title: "Amount"
        "currency":
          type: "string"
          title: "Currency"
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the object."
        "metadata":
          type: "object"
          title: "Metadata"
          additionalProperties:
            anyOf:
              - type: "string"
              - type: "integer"
              - type: "boolean"
        "name":
          type: "string"
          title: "Name"
          description: "Name of the discount. Will be displayed to the customer when the discount is applied."
        "code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Code"
          description: "Code customers can use to apply the discount during checkout."
        "starts_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Starts At"
          description: "Timestamp after which the discount is redeemable."
        "ends_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Ends At"
          description: "Timestamp after which the discount is no longer redeemable."
        "max_redemptions":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Max Redemptions"
          description: "Maximum number of times the discount can be redeemed."
        "redemptions_count":
          type: "integer"
          title: "Redemptions Count"
          description: "Number of times the discount has been redeemed."
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
          description: "The organization ID."
          x-polar-selector-widget: {"displayProperty": "name", "resourceName": "Organization", "resourceRoot": "/v1/organizations"}
        "products":
          type: "array"
          items: {"$ref": "#/components/schemas/DiscountProduct"}
          title: "Products"
      title: "DiscountFixedOnceForeverDuration"
      required:
        - "duration"
        - "type"
        - "amount"
        - "currency"
        - "created_at"
        - "modified_at"
        - "id"
        - "metadata"
        - "name"
        - "code"
        - "starts_at"
        - "ends_at"
        - "max_redemptions"
        - "redemptions_count"
        - "organization_id"
        - "products"
      description: "Schema for a fixed amount discount that is applied once or forever."
    "DiscountFixedOnceForeverDurationBase":
      type: "object"
      properties:
        "duration": {"$ref": "#/components/schemas/DiscountDuration"}
        "type": {"$ref": "#/components/schemas/DiscountType"}
        "amount":
          type: "integer"
          title: "Amount"
        "currency":
          type: "string"
          title: "Currency"
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the object."
        "metadata":
          type: "object"
          title: "Metadata"
          additionalProperties:
            anyOf:
              - type: "string"
              - type: "integer"
              - type: "boolean"
        "name":
          type: "string"
          title: "Name"
          description: "Name of the discount. Will be displayed to the customer when the discount is applied."
        "code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Code"
          description: "Code customers can use to apply the discount during checkout."
        "starts_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Starts At"
          description: "Timestamp after which the discount is redeemable."
        "ends_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Ends At"
          description: "Timestamp after which the discount is no longer redeemable."
        "max_redemptions":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Max Redemptions"
          description: "Maximum number of times the discount can be redeemed."
        "redemptions_count":
          type: "integer"
          title: "Redemptions Count"
          description: "Number of times the discount has been redeemed."
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
          description: "The organization ID."
          x-polar-selector-widget: {"displayProperty": "name", "resourceName": "Organization", "resourceRoot": "/v1/organizations"}
      title: "DiscountFixedOnceForeverDurationBase"
      required:
        - "duration"
        - "type"
        - "amount"
        - "currency"
        - "created_at"
        - "modified_at"
        - "id"
        - "metadata"
        - "name"
        - "code"
        - "starts_at"
        - "ends_at"
        - "max_redemptions"
        - "redemptions_count"
        - "organization_id"
    "DiscountFixedOnceForeverDurationCreate":
      type: "object"
      properties:
        "duration": {"$ref": "#/components/schemas/DiscountDuration"}
        "type": {"$ref": "#/components/schemas/DiscountType", "description": "Type of the discount."}
        "amount":
          type: "integer"
          title: "Amount"
          minimum: 0
          description: "Fixed amount to discount from the invoice total."
        "currency":
          type: "string"
          title: "Currency"
          pattern: "usd"
          description: "The currency. Currently, only `usd` is supported."
          default: "usd"
        "metadata":
          type: "object"
          title: "Metadata"
          maxProperties: 50
          additionalProperties:
            anyOf:
              - type: "string"
                maxLength: 500
                minLength: 1
              - type: "integer"
              - type: "boolean"
          description: "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
        "name":
          type: "string"
          title: "Name"
          minLength: 1
          description: "Name of the discount. Will be displayed to the customer when the discount is applied."
        "code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Code"
          description: "Code customers can use to apply the discount during checkout. Must be between 3 and 256 characters long and contain only alphanumeric characters.If not provided, the discount can only be applied via the API."
        "starts_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Starts At"
          description: "Optional timestamp after which the discount is redeemable."
        "ends_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Ends At"
          description: "Optional timestamp after which the discount is no longer redeemable."
        "max_redemptions":
          anyOf:
            - type: "integer"
              minimum: 1
            - type: "null"
          title: "Max Redemptions"
          description: "Optional maximum number of times the discount can be redeemed."
        "products":
          anyOf:
            - type: "array"
              items:
                type: "string"
                format: "uuid4"
              description: "List of product IDs the discount can be applied to."
            - type: "null"
          title: "Products"
        "organization_id":
          anyOf:
            - type: "string"
              format: "uuid4"
              description: "The organization ID."
              x-polar-selector-widget: {"displayProperty": "name", "resourceName": "Organization", "resourceRoot": "/v1/organizations"}
            - type: "null"
          title: "Organization Id"
          description: "The ID of the organization owning the discount. **Required unless you use an organization token.**"
      title: "DiscountFixedOnceForeverDurationCreate"
      required:
        - "duration"
        - "type"
        - "amount"
        - "name"
      description: "Schema to create a fixed amount discount that is applied once or forever."
    "DiscountFixedRepeatDuration":
      type: "object"
      properties:
        "duration": {"$ref": "#/components/schemas/DiscountDuration"}
        "duration_in_months":
          type: "integer"
          title: "Duration In Months"
        "type": {"$ref": "#/components/schemas/DiscountType"}
        "amount":
          type: "integer"
          title: "Amount"
        "currency":
          type: "string"
          title: "Currency"
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the object."
        "metadata":
          type: "object"
          title: "Metadata"
          additionalProperties:
            anyOf:
              - type: "string"
              - type: "integer"
              - type: "boolean"
        "name":
          type: "string"
          title: "Name"
          description: "Name of the discount. Will be displayed to the customer when the discount is applied."
        "code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Code"
          description: "Code customers can use to apply the discount during checkout."
        "starts_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Starts At"
          description: "Timestamp after which the discount is redeemable."
        "ends_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Ends At"
          description: "Timestamp after which the discount is no longer redeemable."
        "max_redemptions":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Max Redemptions"
          description: "Maximum number of times the discount can be redeemed."
        "redemptions_count":
          type: "integer"
          title: "Redemptions Count"
          description: "Number of times the discount has been redeemed."
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
          description: "The organization ID."
          x-polar-selector-widget: {"displayProperty": "name", "resourceName": "Organization", "resourceRoot": "/v1/organizations"}
        "products":
          type: "array"
          items: {"$ref": "#/components/schemas/DiscountProduct"}
          title: "Products"
      title: "DiscountFixedRepeatDuration"
      required:
        - "duration"
        - "duration_in_months"
        - "type"
        - "amount"
        - "currency"
        - "created_at"
        - "modified_at"
        - "id"
        - "metadata"
        - "name"
        - "code"
        - "starts_at"
        - "ends_at"
        - "max_redemptions"
        - "redemptions_count"
        - "organization_id"
        - "products"
      description: "Schema for a fixed amount discount that is applied on every invoice\nfor a certain number of months."
    "DiscountFixedRepeatDurationBase":
      type: "object"
      properties:
        "duration": {"$ref": "#/components/schemas/DiscountDuration"}
        "duration_in_months":
          type: "integer"
          title: "Duration In Months"
        "type": {"$ref": "#/components/schemas/DiscountType"}
        "amount":
          type: "integer"
          title: "Amount"
        "currency":
          type: "string"
          title: "Currency"
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the object."
        "metadata":
          type: "object"
          title: "Metadata"
          additionalProperties:
            anyOf:
              - type: "string"
              - type: "integer"
              - type: "boolean"
        "name":
          type: "string"
          title: "Name"
          description: "Name of the discount. Will be displayed to the customer when the discount is applied."
        "code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Code"
          description: "Code customers can use to apply the discount during checkout."
        "starts_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Starts At"
          description: "Timestamp after which the discount is redeemable."
        "ends_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Ends At"
          description: "Timestamp after which the discount is no longer redeemable."
        "max_redemptions":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Max Redemptions"
          description: "Maximum number of times the discount can be redeemed."
        "redemptions_count":
          type: "integer"
          title: "Redemptions Count"
          description: "Number of times the discount has been redeemed."
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
          description: "The organization ID."
          x-polar-selector-widget: {"displayProperty": "name", "resourceName": "Organization", "resourceRoot": "/v1/organizations"}
      title: "DiscountFixedRepeatDurationBase"
      required:
        - "duration"
        - "duration_in_months"
        - "type"
        - "amount"
        - "currency"
        - "created_at"
        - "modified_at"
        - "id"
        - "metadata"
        - "name"
        - "code"
        - "starts_at"
        - "ends_at"
        - "max_redemptions"
        - "redemptions_count"
        - "organization_id"
    "DiscountFixedRepeatDurationCreate":
      type: "object"
      properties:
        "duration": {"$ref": "#/components/schemas/DiscountDuration"}
        "duration_in_months":
          type: "integer"
          title: "Duration In Months"
          minimum: 1
          description: "Number of months the discount should be applied.\n\nFor this to work on yearly pricing, you should multiply this by 12.\nFor example, to apply the discount for 2 years, set this to 24."
        "type": {"$ref": "#/components/schemas/DiscountType", "description": "Type of the discount."}
        "amount":
          type: "integer"
          title: "Amount"
          minimum: 0
          description: "Fixed amount to discount from the invoice total."
        "currency":
          type: "string"
          title: "Currency"
          pattern: "usd"
          description: "The currency. Currently, only `usd` is supported."
          default: "usd"
        "metadata":
          type: "object"
          title: "Metadata"
          maxProperties: 50
          additionalProperties:
            anyOf:
              - type: "string"
                maxLength: 500
                minLength: 1
              - type: "integer"
              - type: "boolean"
          description: "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
        "name":
          type: "string"
          title: "Name"
          minLength: 1
          description: "Name of the discount. Will be displayed to the customer when the discount is applied."
        "code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Code"
          description: "Code customers can use to apply the discount during checkout. Must be between 3 and 256 characters long and contain only alphanumeric characters.If not provided, the discount can only be applied via the API."
        "starts_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Starts At"
          description: "Optional timestamp after which the discount is redeemable."
        "ends_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Ends At"
          description: "Optional timestamp after which the discount is no longer redeemable."
        "max_redemptions":
          anyOf:
            - type: "integer"
              minimum: 1
            - type: "null"
          title: "Max Redemptions"
          description: "Optional maximum number of times the discount can be redeemed."
        "products":
          anyOf:
            - type: "array"
              items:
                type: "string"
                format: "uuid4"
              description: "List of product IDs the discount can be applied to."
            - type: "null"
          title: "Products"
        "organization_id":
          anyOf:
            - type: "string"
              format: "uuid4"
              description: "The organization ID."
              x-polar-selector-widget: {"displayProperty": "name", "resourceName": "Organization", "resourceRoot": "/v1/organizations"}
            - type: "null"
          title: "Organization Id"
          description: "The ID of the organization owning the discount. **Required unless you use an organization token.**"
      title: "DiscountFixedRepeatDurationCreate"
      required:
        - "duration"
        - "duration_in_months"
        - "type"
        - "amount"
        - "name"
      description: "Schema to create a fixed amount discount that is applied on every invoice\nfor a certain number of months."
    "DiscountPercentageOnceForeverDuration":
      type: "object"
      properties:
        "duration": {"$ref": "#/components/schemas/DiscountDuration"}
        "type": {"$ref": "#/components/schemas/DiscountType"}
        "basis_points":
          type: "integer"
          title: "Basis Points"
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the object."
        "metadata":
          type: "object"
          title: "Metadata"
          additionalProperties:
            anyOf:
              - type: "string"
              - type: "integer"
              - type: "boolean"
        "name":
          type: "string"
          title: "Name"
          description: "Name of the discount. Will be displayed to the customer when the discount is applied."
        "code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Code"
          description: "Code customers can use to apply the discount during checkout."
        "starts_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Starts At"
          description: "Timestamp after which the discount is redeemable."
        "ends_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Ends At"
          description: "Timestamp after which the discount is no longer redeemable."
        "max_redemptions":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Max Redemptions"
          description: "Maximum number of times the discount can be redeemed."
        "redemptions_count":
          type: "integer"
          title: "Redemptions Count"
          description: "Number of times the discount has been redeemed."
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
          description: "The organization ID."
          x-polar-selector-widget: {"displayProperty": "name", "resourceName": "Organization", "resourceRoot": "/v1/organizations"}
        "products":
          type: "array"
          items: {"$ref": "#/components/schemas/DiscountProduct"}
          title: "Products"
      title: "DiscountPercentageOnceForeverDuration"
      required:
        - "duration"
        - "type"
        - "basis_points"
        - "created_at"
        - "modified_at"
        - "id"
        - "metadata"
        - "name"
        - "code"
        - "starts_at"
        - "ends_at"
        - "max_redemptions"
        - "redemptions_count"
        - "organization_id"
        - "products"
      description: "Schema for a percentage discount that is applied once or forever."
    "DiscountPercentageOnceForeverDurationBase":
      type: "object"
      properties:
        "duration": {"$ref": "#/components/schemas/DiscountDuration"}
        "type": {"$ref": "#/components/schemas/DiscountType"}
        "basis_points":
          type: "integer"
          title: "Basis Points"
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the object."
        "metadata":
          type: "object"
          title: "Metadata"
          additionalProperties:
            anyOf:
              - type: "string"
              - type: "integer"
              - type: "boolean"
        "name":
          type: "string"
          title: "Name"
          description: "Name of the discount. Will be displayed to the customer when the discount is applied."
        "code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Code"
          description: "Code customers can use to apply the discount during checkout."
        "starts_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Starts At"
          description: "Timestamp after which the discount is redeemable."
        "ends_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Ends At"
          description: "Timestamp after which the discount is no longer redeemable."
        "max_redemptions":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Max Redemptions"
          description: "Maximum number of times the discount can be redeemed."
        "redemptions_count":
          type: "integer"
          title: "Redemptions Count"
          description: "Number of times the discount has been redeemed."
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
          description: "The organization ID."
          x-polar-selector-widget: {"displayProperty": "name", "resourceName": "Organization", "resourceRoot": "/v1/organizations"}
      title: "DiscountPercentageOnceForeverDurationBase"
      required:
        - "duration"
        - "type"
        - "basis_points"
        - "created_at"
        - "modified_at"
        - "id"
        - "metadata"
        - "name"
        - "code"
        - "starts_at"
        - "ends_at"
        - "max_redemptions"
        - "redemptions_count"
        - "organization_id"
    "DiscountPercentageOnceForeverDurationCreate":
      type: "object"
      properties:
        "duration": {"$ref": "#/components/schemas/DiscountDuration"}
        "type": {"$ref": "#/components/schemas/DiscountType", "description": "Type of the discount."}
        "basis_points":
          type: "integer"
          title: "Basis Points"
          maximum: 10000
          minimum: 1
          description: "Discount percentage in basis points.\n\nA basis point is 1/100th of a percent.\nFor example, to create a 25.5% discount, set this to 2550."
        "metadata":
          type: "object"
          title: "Metadata"
          maxProperties: 50
          additionalProperties:
            anyOf:
              - type: "string"
                maxLength: 500
                minLength: 1
              - type: "integer"
              - type: "boolean"
          description: "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
        "name":
          type: "string"
          title: "Name"
          minLength: 1
          description: "Name of the discount. Will be displayed to the customer when the discount is applied."
        "code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Code"
          description: "Code customers can use to apply the discount during checkout. Must be between 3 and 256 characters long and contain only alphanumeric characters.If not provided, the discount can only be applied via the API."
        "starts_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Starts At"
          description: "Optional timestamp after which the discount is redeemable."
        "ends_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Ends At"
          description: "Optional timestamp after which the discount is no longer redeemable."
        "max_redemptions":
          anyOf:
            - type: "integer"
              minimum: 1
            - type: "null"
          title: "Max Redemptions"
          description: "Optional maximum number of times the discount can be redeemed."
        "products":
          anyOf:
            - type: "array"
              items:
                type: "string"
                format: "uuid4"
              description: "List of product IDs the discount can be applied to."
            - type: "null"
          title: "Products"
        "organization_id":
          anyOf:
            - type: "string"
              format: "uuid4"
              description: "The organization ID."
              x-polar-selector-widget: {"displayProperty": "name", "resourceName": "Organization", "resourceRoot": "/v1/organizations"}
            - type: "null"
          title: "Organization Id"
          description: "The ID of the organization owning the discount. **Required unless you use an organization token.**"
      title: "DiscountPercentageOnceForeverDurationCreate"
      required:
        - "duration"
        - "type"
        - "basis_points"
        - "name"
      description: "Schema to create a percentage discount that is applied once or forever."
    "DiscountPercentageRepeatDuration":
      type: "object"
      properties:
        "duration": {"$ref": "#/components/schemas/DiscountDuration"}
        "duration_in_months":
          type: "integer"
          title: "Duration In Months"
        "type": {"$ref": "#/components/schemas/DiscountType"}
        "basis_points":
          type: "integer"
          title: "Basis Points"
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the object."
        "metadata":
          type: "object"
          title: "Metadata"
          additionalProperties:
            anyOf:
              - type: "string"
              - type: "integer"
              - type: "boolean"
        "name":
          type: "string"
          title: "Name"
          description: "Name of the discount. Will be displayed to the customer when the discount is applied."
        "code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Code"
          description: "Code customers can use to apply the discount during checkout."
        "starts_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Starts At"
          description: "Timestamp after which the discount is redeemable."
        "ends_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Ends At"
          description: "Timestamp after which the discount is no longer redeemable."
        "max_redemptions":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Max Redemptions"
          description: "Maximum number of times the discount can be redeemed."
        "redemptions_count":
          type: "integer"
          title: "Redemptions Count"
          description: "Number of times the discount has been redeemed."
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
          description: "The organization ID."
          x-polar-selector-widget: {"displayProperty": "name", "resourceName": "Organization", "resourceRoot": "/v1/organizations"}
        "products":
          type: "array"
          items: {"$ref": "#/components/schemas/DiscountProduct"}
          title: "Products"
      title: "DiscountPercentageRepeatDuration"
      required:
        - "duration"
        - "duration_in_months"
        - "type"
        - "basis_points"
        - "created_at"
        - "modified_at"
        - "id"
        - "metadata"
        - "name"
        - "code"
        - "starts_at"
        - "ends_at"
        - "max_redemptions"
        - "redemptions_count"
        - "organization_id"
        - "products"
      description: "Schema for a percentage discount that is applied on every invoice\nfor a certain number of months."
    "DiscountPercentageRepeatDurationBase":
      type: "object"
      properties:
        "duration": {"$ref": "#/components/schemas/DiscountDuration"}
        "duration_in_months":
          type: "integer"
          title: "Duration In Months"
        "type": {"$ref": "#/components/schemas/DiscountType"}
        "basis_points":
          type: "integer"
          title: "Basis Points"
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the object."
        "metadata":
          type: "object"
          title: "Metadata"
          additionalProperties:
            anyOf:
              - type: "string"
              - type: "integer"
              - type: "boolean"
        "name":
          type: "string"
          title: "Name"
          description: "Name of the discount. Will be displayed to the customer when the discount is applied."
        "code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Code"
          description: "Code customers can use to apply the discount during checkout."
        "starts_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Starts At"
          description: "Timestamp after which the discount is redeemable."
        "ends_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Ends At"
          description: "Timestamp after which the discount is no longer redeemable."
        "max_redemptions":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Max Redemptions"
          description: "Maximum number of times the discount can be redeemed."
        "redemptions_count":
          type: "integer"
          title: "Redemptions Count"
          description: "Number of times the discount has been redeemed."
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
          description: "The organization ID."
          x-polar-selector-widget: {"displayProperty": "name", "resourceName": "Organization", "resourceRoot": "/v1/organizations"}
      title: "DiscountPercentageRepeatDurationBase"
      required:
        - "duration"
        - "duration_in_months"
        - "type"
        - "basis_points"
        - "created_at"
        - "modified_at"
        - "id"
        - "metadata"
        - "name"
        - "code"
        - "starts_at"
        - "ends_at"
        - "max_redemptions"
        - "redemptions_count"
        - "organization_id"
    "DiscountPercentageRepeatDurationCreate":
      type: "object"
      properties:
        "duration": {"$ref": "#/components/schemas/DiscountDuration"}
        "duration_in_months":
          type: "integer"
          title: "Duration In Months"
          minimum: 1
          description: "Number of months the discount should be applied.\n\nFor this to work on yearly pricing, you should multiply this by 12.\nFor example, to apply the discount for 2 years, set this to 24."
        "type": {"$ref": "#/components/schemas/DiscountType", "description": "Type of the discount."}
        "basis_points":
          type: "integer"
          title: "Basis Points"
          maximum: 10000
          minimum: 1
          description: "Discount percentage in basis points.\n\nA basis point is 1/100th of a percent.\nFor example, to create a 25.5% discount, set this to 2550."
        "metadata":
          type: "object"
          title: "Metadata"
          maxProperties: 50
          additionalProperties:
            anyOf:
              - type: "string"
                maxLength: 500
                minLength: 1
              - type: "integer"
              - type: "boolean"
          description: "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
        "name":
          type: "string"
          title: "Name"
          minLength: 1
          description: "Name of the discount. Will be displayed to the customer when the discount is applied."
        "code":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Code"
          description: "Code customers can use to apply the discount during checkout. Must be between 3 and 256 characters long and contain only alphanumeric characters.If not provided, the discount can only be applied via the API."
        "starts_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Starts At"
          description: "Optional timestamp after which the discount is redeemable."
        "ends_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Ends At"
          description: "Optional timestamp after which the discount is no longer redeemable."
        "max_redemptions":
          anyOf:
            - type: "integer"
              minimum: 1
            - type: "null"
          title: "Max Redemptions"
          description: "Optional maximum number of times the discount can be redeemed."
        "products":
          anyOf:
            - type: "array"
              items:
                type: "string"
                format: "uuid4"
              description: "List of product IDs the discount can be applied to."
            - type: "null"
          title: "Products"
        "organization_id":
          anyOf:
            - type: "string"
              format: "uuid4"
              description: "The organization ID."
              x-polar-selector-widget: {"displayProperty": "name", "resourceName": "Organization", "resourceRoot": "/v1/organizations"}
            - type: "null"
          title: "Organization Id"
          description: "The ID of the organization owning the discount. **Required unless you use an organization token.**"
      title: "DiscountPercentageRepeatDurationCreate"
      required:
        - "duration"
        - "duration_in_months"
        - "type"
        - "basis_points"
        - "name"
      description: "Schema to create a percentage discount that is applied on every invoice\nfor a certain number of months."
    "DiscountProduct":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the product."
        "name":
          type: "string"
          title: "Name"
          description: "The name of the product."
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
          description: "The description of the product."
        "is_recurring":
          type: "boolean"
          title: "Is Recurring"
          description: "Whether the product is a subscription tier."
        "is_archived":
          type: "boolean"
          title: "Is Archived"
          description: "Whether the product is archived and no longer available."
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
          description: "The ID of the organization owning the product."
      title: "DiscountProduct"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "name"
        - "description"
        - "is_recurring"
        - "is_archived"
        - "organization_id"
      description: "A product that a discount can be applied to."
    "DiscountSortProperty":
      type: "string"
      title: "DiscountSortProperty"
      enum:
        - "created_at"
        - "-created_at"
        - "name"
        - "-name"
        - "code"
        - "-code"
        - "redemptions_count"
        - "-redemptions_count"
    "DiscountType":
      type: "string"
      title: "DiscountType"
      enum:
        - "fixed"
        - "percentage"
    "DiscountUpdate":
      type: "object"
      properties:
        "metadata":
          anyOf:
            - type: "object"
              maxProperties: 50
              additionalProperties:
                anyOf:
                  - type: "string"
                    maxLength: 500
                    minLength: 1
                  - type: "integer"
                  - type: "boolean"
              description: "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
            - type: "null"
          title: "Metadata"
        "name":
          anyOf:
            - type: "string"
              minLength: 1
              description: "Name of the discount. Will be displayed to the customer when the discount is applied."
            - type: "null"
          title: "Name"
        "code":
          anyOf:
            - anyOf:
                - type: "string"
                - type: "null"
              description: "Code customers can use to apply the discount during checkout. Must be between 3 and 256 characters long and contain only alphanumeric characters.If not provided, the discount can only be applied via the API."
            - type: "null"
          title: "Code"
        "starts_at":
          anyOf:
            - anyOf:
                - type: "string"
                  format: "date-time"
                - type: "null"
              description: "Optional timestamp after which the discount is redeemable."
            - type: "null"
          title: "Starts At"
        "ends_at":
          anyOf:
            - anyOf:
                - type: "string"
                  format: "date-time"
                - type: "null"
              description: "Optional timestamp after which the discount is no longer redeemable."
            - type: "null"
          title: "Ends At"
        "max_redemptions":
          anyOf:
            - anyOf:
                - type: "integer"
                  minimum: 1
                - type: "null"
              description: "Optional maximum number of times the discount can be redeemed."
            - type: "null"
          title: "Max Redemptions"
        "duration":
          anyOf:
            - {"$ref": "#/components/schemas/DiscountDuration"}
            - type: "null"
        "duration_in_months":
          anyOf:
            - type: "integer"
              minimum: 1
              description: "Number of months the discount should be applied.\n\nFor this to work on yearly pricing, you should multiply this by 12.\nFor example, to apply the discount for 2 years, set this to 24."
            - type: "null"
          title: "Duration In Months"
        "type":
          anyOf:
            - {"$ref": "#/components/schemas/DiscountType"}
            - type: "null"
        "amount":
          anyOf:
            - type: "integer"
              minimum: 0
              description: "Fixed amount to discount from the invoice total."
            - type: "null"
          title: "Amount"
        "currency":
          anyOf:
            - type: "string"
              pattern: "usd"
              description: "The currency. Currently, only `usd` is supported."
              default: "usd"
            - type: "null"
          title: "Currency"
        "basis_points":
          anyOf:
            - type: "integer"
              maximum: 10000
              minimum: 1
              description: "Discount percentage in basis points.\n\nA basis point is 1/100th of a percent.\nFor example, to create a 25.5% discount, set this to 2550."
            - type: "null"
          title: "Basis Points"
        "products":
          anyOf:
            - type: "array"
              items:
                type: "string"
                format: "uuid4"
              description: "List of product IDs the discount can be applied to."
            - type: "null"
          title: "Products"
      title: "DiscountUpdate"
      description: "Schema to update a discount."
    "DownloadableFileCreate":
      type: "object"
      properties:
        "organization_id":
          anyOf:
            - type: "string"
              format: "uuid4"
              description: "The organization ID."
              x-polar-selector-widget: {"displayProperty": "name", "resourceName": "Organization", "resourceRoot": "/v1/organizations"}
            - type: "null"
          title: "Organization Id"
        "name":
          type: "string"
          title: "Name"
        "mime_type":
          type: "string"
          title: "Mime Type"
        "size":
          type: "integer"
          title: "Size"
        "checksum_sha256_base64":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Checksum Sha256 Base64"
        "upload": {"$ref": "#/components/schemas/S3FileCreateMultipart"}
        "service":
          type: "string"
          title: "Service"
          enum:
            - "downloadable"
          const: "downloadable"
        "version":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Version"
      title: "DownloadableFileCreate"
      required:
        - "name"
        - "mime_type"
        - "size"
        - "upload"
        - "service"
      description: "Schema to create a file to be associated with the downloadables benefit."
    "DownloadableFileRead":
      type: "object"
      properties:
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the object."
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
        "name":
          type: "string"
          title: "Name"
        "path":
          type: "string"
          title: "Path"
        "mime_type":
          type: "string"
          title: "Mime Type"
        "size":
          type: "integer"
          title: "Size"
        "storage_version":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Storage Version"
        "checksum_etag":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Checksum Etag"
        "checksum_sha256_base64":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Checksum Sha256 Base64"
        "checksum_sha256_hex":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Checksum Sha256 Hex"
        "last_modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Last Modified At"
        "version":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Version"
        "service":
          type: "string"
          title: "Service"
          enum:
            - "downloadable"
          const: "downloadable"
        "is_uploaded":
          type: "boolean"
          title: "Is Uploaded"
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
        "size_readable":
          type: "string"
          title: "Size Readable"
          readOnly: true
      title: "DownloadableFileRead"
      required:
        - "id"
        - "organization_id"
        - "name"
        - "path"
        - "mime_type"
        - "size"
        - "storage_version"
        - "checksum_etag"
        - "checksum_sha256_base64"
        - "checksum_sha256_hex"
        - "last_modified_at"
        - "version"
        - "service"
        - "is_uploaded"
        - "created_at"
        - "size_readable"
      description: "File to be associated with the downloadables benefit."
    "DownloadableRead":
      type: "object"
      properties:
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
        "benefit_id":
          type: "string"
          title: "Benefit Id"
          format: "uuid4"
        "file": {"$ref": "#/components/schemas/FileDownload"}
      title: "DownloadableRead"
      required:
        - "id"
        - "benefit_id"
        - "file"
    "ExistingProductPrice":
      type: "object"
      properties:
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
      title: "ExistingProductPrice"
      required:
        - "id"
      description: "A price that already exists for this product.\n\nUseful when updating a product if you want to keep an existing price."
    "ExternalOrganization":
      type: "object"
      properties:
        "id":
          type: "string"
          title: "Id"
          format: "uuid"
        "platform": {"$ref": "#/components/schemas/Platforms"}
        "name":
          type: "string"
          title: "Name"
        "avatar_url":
          type: "string"
          title: "Avatar Url"
        "is_personal":
          type: "boolean"
          title: "Is Personal"
        "bio":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Bio"
        "pretty_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Pretty Name"
        "company":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Company"
        "blog":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Blog"
        "location":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Location"
        "email":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Email"
        "twitter_username":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Twitter Username"
        "organization_id":
          anyOf:
            - type: "string"
              format: "uuid4"
              description: "The organization ID."
              x-polar-selector-widget: {"displayProperty": "name", "resourceName": "Organization", "resourceRoot": "/v1/organizations"}
            - type: "null"
          title: "Organization Id"
      title: "ExternalOrganization"
      required:
        - "id"
        - "platform"
        - "name"
        - "avatar_url"
        - "is_personal"
        - "bio"
        - "pretty_name"
        - "company"
        - "blog"
        - "location"
        - "email"
        - "twitter_username"
        - "organization_id"
    "ExternalOrganizationSortProperty":
      type: "string"
      title: "ExternalOrganizationSortProperty"
      enum:
        - "created_at"
        - "-created_at"
        - "name"
        - "-name"
    "FileCreate":
      oneOf:
        - {"$ref": "#/components/schemas/DownloadableFileCreate"}
        - {"$ref": "#/components/schemas/ProductMediaFileCreate"}
        - {"$ref": "#/components/schemas/OrganizationAvatarFileCreate"}
      discriminator:
        propertyName: "service"
        mapping:
          "downloadable": "#/components/schemas/DownloadableFileCreate"
          "organization_avatar": "#/components/schemas/OrganizationAvatarFileCreate"
          "product_media": "#/components/schemas/ProductMediaFileCreate"
    "FileDownload":
      type: "object"
      properties:
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the object."
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
        "name":
          type: "string"
          title: "Name"
        "path":
          type: "string"
          title: "Path"
        "mime_type":
          type: "string"
          title: "Mime Type"
        "size":
          type: "integer"
          title: "Size"
        "storage_version":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Storage Version"
        "checksum_etag":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Checksum Etag"
        "checksum_sha256_base64":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Checksum Sha256 Base64"
        "checksum_sha256_hex":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Checksum Sha256 Hex"
        "last_modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Last Modified At"
        "download": {"$ref": "#/components/schemas/S3DownloadURL"}
        "version":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Version"
        "is_uploaded":
          type: "boolean"
          title: "Is Uploaded"
        "service": {"$ref": "#/components/schemas/FileServiceTypes"}
        "size_readable":
          type: "string"
          title: "Size Readable"
          readOnly: true
      title: "FileDownload"
      required:
        - "id"
        - "organization_id"
        - "name"
        - "path"
        - "mime_type"
        - "size"
        - "storage_version"
        - "checksum_etag"
        - "checksum_sha256_base64"
        - "checksum_sha256_hex"
        - "last_modified_at"
        - "download"
        - "version"
        - "is_uploaded"
        - "service"
        - "size_readable"
    "FilePatch":
      type: "object"
      properties:
        "name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Name"
        "version":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Version"
      title: "FilePatch"
    "FileServiceTypes":
      type: "string"
      title: "FileServiceTypes"
      enum:
        - "downloadable"
        - "product_media"
        - "organization_avatar"
    "FileUpload":
      type: "object"
      properties:
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the object."
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
        "name":
          type: "string"
          title: "Name"
        "path":
          type: "string"
          title: "Path"
        "mime_type":
          type: "string"
          title: "Mime Type"
        "size":
          type: "integer"
          title: "Size"
        "storage_version":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Storage Version"
        "checksum_etag":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Checksum Etag"
        "checksum_sha256_base64":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Checksum Sha256 Base64"
        "checksum_sha256_hex":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Checksum Sha256 Hex"
        "last_modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Last Modified At"
        "upload": {"$ref": "#/components/schemas/S3FileUploadMultipart"}
        "version":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Version"
        "is_uploaded":
          type: "boolean"
          title: "Is Uploaded"
          default: false
        "service": {"$ref": "#/components/schemas/FileServiceTypes"}
        "size_readable":
          type: "string"
          title: "Size Readable"
          readOnly: true
      title: "FileUpload"
      required:
        - "id"
        - "organization_id"
        - "name"
        - "path"
        - "mime_type"
        - "size"
        - "storage_version"
        - "checksum_etag"
        - "checksum_sha256_base64"
        - "checksum_sha256_hex"
        - "last_modified_at"
        - "upload"
        - "version"
        - "service"
        - "size_readable"
    "FileUploadCompleted":
      type: "object"
      properties:
        "id":
          type: "string"
          title: "Id"
        "path":
          type: "string"
          title: "Path"
        "parts":
          type: "array"
          items: {"$ref": "#/components/schemas/S3FileUploadCompletedPart"}
          title: "Parts"
      title: "FileUploadCompleted"
      required:
        - "id"
        - "path"
        - "parts"
    "Funding":
      type: "object"
      properties:
        "funding_goal":
          anyOf:
            - {"$ref": "#/components/schemas/CurrencyAmount"}
            - type: "null"
        "pledges_sum":
          anyOf:
            - {"$ref": "#/components/schemas/CurrencyAmount"}
            - type: "null"
          description: "Sum of pledges to this isuse (including currently open pledges and pledges that have been paid out). Always in USD."
      title: "Funding"
    "HTTPValidationError":
      type: "object"
      properties:
        "detail":
          type: "array"
          items: {"$ref": "#/components/schemas/ValidationError"}
          title: "Detail"
      title: "HTTPValidationError"
    "Interval":
      type: "string"
      title: "Interval"
      enum:
        - "year"
        - "month"
        - "week"
        - "day"
        - "hour"
    "IntrospectTokenResponse":
      type: "object"
      properties:
        "active":
          type: "boolean"
          title: "Active"
        "client_id":
          type: "string"
          title: "Client Id"
        "token_type":
          type: "string"
          title: "Token Type"
          enum:
            - "access_token"
            - "refresh_token"
        "scope":
          type: "string"
          title: "Scope"
        "sub_type": {"$ref": "#/components/schemas/SubType"}
        "sub":
          type: "string"
          title: "Sub"
        "aud":
          type: "string"
          title: "Aud"
        "iss":
          type: "string"
          title: "Iss"
        "exp":
          type: "integer"
          title: "Exp"
        "iat":
          type: "integer"
          title: "Iat"
      title: "IntrospectTokenResponse"
      required:
        - "active"
        - "client_id"
        - "token_type"
        - "scope"
        - "sub_type"
        - "sub"
        - "aud"
        - "iss"
        - "exp"
        - "iat"
    "Issue":
      type: "object"
      properties:
        "id":
          type: "string"
          title: "Id"
          format: "uuid"
        "platform": {"$ref": "#/components/schemas/Platforms", "description": "Issue platform (currently always GitHub)"}
        "number":
          type: "integer"
          title: "Number"
          description: "GitHub #number"
        "title":
          type: "string"
          title: "Title"
          description: "GitHub issue title"
        "body":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Body"
          description: "GitHub issue body"
        "comments":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Comments"
          description: "Number of GitHub comments made on the issue"
        "labels":
          type: "array"
          items: {"$ref": "#/components/schemas/Label"}
          title: "Labels"
          default: []
        "author":
          anyOf:
            - {"$ref": "#/components/schemas/Author"}
            - type: "null"
          description: "GitHub author"
        "assignees":
          anyOf:
            - type: "array"
              items: {"$ref": "#/components/schemas/Assignee"}
            - type: "null"
          title: "Assignees"
          description: "GitHub assignees"
        "reactions":
          anyOf:
            - {"$ref": "#/components/schemas/Reactions"}
            - type: "null"
          description: "GitHub reactions"
        "state": {"$ref": "#/components/schemas/State"}
        "issue_closed_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Issue Closed At"
        "issue_modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Issue Modified At"
        "issue_created_at":
          type: "string"
          title: "Issue Created At"
          format: "date-time"
        "needs_confirmation_solved":
          type: "boolean"
          title: "Needs Confirmation Solved"
          description: "If a maintainer needs to mark this issue as solved"
        "confirmed_solved_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Confirmed Solved At"
          description: "If this issue has been marked as confirmed solved through Polar"
        "funding": {"$ref": "#/components/schemas/Funding"}
        "repository": {"$ref": "#/components/schemas/Repository", "description": "The repository that the issue is in"}
        "upfront_split_to_contributors":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Upfront Split To Contributors"
          description: "Share of rewrads that will be rewarded to contributors of this issue. A number between 0 and 100 (inclusive)."
        "pledge_badge_currently_embedded":
          type: "boolean"
          title: "Pledge Badge Currently Embedded"
          description: "If this issue currently has the Polar badge SVG embedded"
        "badge_custom_content":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Badge Custom Content"
          description: "Optional custom badge SVG promotional content"
      title: "Issue"
      required:
        - "id"
        - "platform"
        - "number"
        - "title"
        - "state"
        - "issue_created_at"
        - "needs_confirmation_solved"
        - "funding"
        - "repository"
        - "pledge_badge_currently_embedded"
    "Label":
      type: "object"
      properties:
        "name":
          type: "string"
          title: "Name"
        "color":
          type: "string"
          title: "Color"
      title: "Label"
      required:
        - "name"
        - "color"
    "LicenseKeyActivate":
      type: "object"
      properties:
        "key":
          type: "string"
          title: "Key"
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
        "label":
          type: "string"
          title: "Label"
        "conditions":
          type: "object"
          title: "Conditions"
          default: {}
        "meta":
          type: "object"
          title: "Meta"
          default: {}
      title: "LicenseKeyActivate"
      required:
        - "key"
        - "organization_id"
        - "label"
    "LicenseKeyActivationBase":
      type: "object"
      properties:
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
        "license_key_id":
          type: "string"
          title: "License Key Id"
          format: "uuid4"
        "label":
          type: "string"
          title: "Label"
        "meta":
          type: "object"
          title: "Meta"
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
      title: "LicenseKeyActivationBase"
      required:
        - "id"
        - "license_key_id"
        - "label"
        - "meta"
        - "created_at"
        - "modified_at"
    "LicenseKeyActivationRead":
      type: "object"
      properties:
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
        "license_key_id":
          type: "string"
          title: "License Key Id"
          format: "uuid4"
        "label":
          type: "string"
          title: "Label"
        "meta":
          type: "object"
          title: "Meta"
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
        "license_key": {"$ref": "#/components/schemas/LicenseKeyRead"}
      title: "LicenseKeyActivationRead"
      required:
        - "id"
        - "license_key_id"
        - "label"
        - "meta"
        - "created_at"
        - "modified_at"
        - "license_key"
    "LicenseKeyCustomer":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the object."
        "metadata":
          type: "object"
          title: "Metadata"
          additionalProperties:
            anyOf:
              - type: "string"
              - type: "integer"
              - type: "boolean"
        "email":
          type: "string"
          title: "Email"
        "email_verified":
          type: "boolean"
          title: "Email Verified"
        "name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Name"
        "billing_address":
          anyOf:
            - {"$ref": "#/components/schemas/Address"}
            - type: "null"
        "tax_id":
          anyOf:
            - type: "array"
              prefixItems:
                - type: "string"
                - {"$ref": "#/components/schemas/TaxIDFormat"}
              maxItems: 2
              minItems: 2
            - type: "null"
          title: "Tax Id"
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
        "avatar_url":
          type: "string"
          title: "Avatar Url"
          readOnly: true
      title: "LicenseKeyCustomer"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "metadata"
        - "email"
        - "email_verified"
        - "name"
        - "billing_address"
        - "tax_id"
        - "organization_id"
        - "avatar_url"
    "LicenseKeyDeactivate":
      type: "object"
      properties:
        "key":
          type: "string"
          title: "Key"
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
        "activation_id":
          type: "string"
          title: "Activation Id"
          format: "uuid4"
      title: "LicenseKeyDeactivate"
      required:
        - "key"
        - "organization_id"
        - "activation_id"
    "LicenseKeyRead":
      type: "object"
      properties:
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
        "user_id":
          type: "string"
          title: "User Id"
          format: "uuid4"
          deprecated: true
        "customer_id":
          type: "string"
          title: "Customer Id"
          format: "uuid4"
        "user": {"$ref": "#/components/schemas/LicenseKeyUser", "deprecated": true}
        "customer": {"$ref": "#/components/schemas/LicenseKeyCustomer"}
        "benefit_id":
          type: "string"
          title: "Benefit Id"
          format: "uuid4"
          description: "The benefit ID."
          x-polar-selector-widget: {"displayProperty": "description", "resourceName": "Benefit", "resourceRoot": "/v1/benefits"}
        "key":
          type: "string"
          title: "Key"
        "display_key":
          type: "string"
          title: "Display Key"
        "status": {"$ref": "#/components/schemas/LicenseKeyStatus"}
        "limit_activations":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Limit Activations"
        "usage":
          type: "integer"
          title: "Usage"
        "limit_usage":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Limit Usage"
        "validations":
          type: "integer"
          title: "Validations"
        "last_validated_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Last Validated At"
        "expires_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Expires At"
      title: "LicenseKeyRead"
      required:
        - "id"
        - "organization_id"
        - "user_id"
        - "customer_id"
        - "user"
        - "customer"
        - "benefit_id"
        - "key"
        - "display_key"
        - "status"
        - "limit_activations"
        - "usage"
        - "limit_usage"
        - "validations"
        - "last_validated_at"
        - "expires_at"
    "LicenseKeyStatus":
      type: "string"
      title: "LicenseKeyStatus"
      enum:
        - "granted"
        - "revoked"
        - "disabled"
    "LicenseKeyUpdate":
      type: "object"
      properties:
        "status":
          anyOf:
            - {"$ref": "#/components/schemas/LicenseKeyStatus"}
            - type: "null"
        "usage":
          type: "integer"
          title: "Usage"
          default: 0
        "limit_activations":
          anyOf:
            - exclusiveMinimum: 0
              type: "integer"
              maximum: 50
            - type: "null"
          title: "Limit Activations"
        "limit_usage":
          anyOf:
            - exclusiveMinimum: 0
              type: "integer"
            - type: "null"
          title: "Limit Usage"
        "expires_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Expires At"
      title: "LicenseKeyUpdate"
    "LicenseKeyUser":
      type: "object"
      properties:
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
        "email":
          type: "string"
          title: "Email"
        "public_name":
          type: "string"
          title: "Public Name"
        "avatar_url":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Avatar Url"
      title: "LicenseKeyUser"
      required:
        - "id"
        - "email"
        - "public_name"
    "LicenseKeyValidate":
      type: "object"
      properties:
        "key":
          type: "string"
          title: "Key"
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
        "activation_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Activation Id"
        "benefit_id":
          anyOf:
            - type: "string"
              format: "uuid4"
              description: "The benefit ID."
              x-polar-selector-widget: {"displayProperty": "description", "resourceName": "Benefit", "resourceRoot": "/v1/benefits"}
            - type: "null"
          title: "Benefit Id"
        "customer_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Customer Id"
        "increment_usage":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Increment Usage"
        "conditions":
          type: "object"
          title: "Conditions"
          default: {}
      title: "LicenseKeyValidate"
      required:
        - "key"
        - "organization_id"
    "LicenseKeyWithActivations":
      type: "object"
      properties:
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
        "user_id":
          type: "string"
          title: "User Id"
          format: "uuid4"
          deprecated: true
        "customer_id":
          type: "string"
          title: "Customer Id"
          format: "uuid4"
        "user": {"$ref": "#/components/schemas/LicenseKeyUser", "deprecated": true}
        "customer": {"$ref": "#/components/schemas/LicenseKeyCustomer"}
        "benefit_id":
          type: "string"
          title: "Benefit Id"
          format: "uuid4"
          description: "The benefit ID."
          x-polar-selector-widget: {"displayProperty": "description", "resourceName": "Benefit", "resourceRoot": "/v1/benefits"}
        "key":
          type: "string"
          title: "Key"
        "display_key":
          type: "string"
          title: "Display Key"
        "status": {"$ref": "#/components/schemas/LicenseKeyStatus"}
        "limit_activations":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Limit Activations"
        "usage":
          type: "integer"
          title: "Usage"
        "limit_usage":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Limit Usage"
        "validations":
          type: "integer"
          title: "Validations"
        "last_validated_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Last Validated At"
        "expires_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Expires At"
        "activations":
          type: "array"
          items: {"$ref": "#/components/schemas/LicenseKeyActivationBase"}
          title: "Activations"
      title: "LicenseKeyWithActivations"
      required:
        - "id"
        - "organization_id"
        - "user_id"
        - "customer_id"
        - "user"
        - "customer"
        - "benefit_id"
        - "key"
        - "display_key"
        - "status"
        - "limit_activations"
        - "usage"
        - "limit_usage"
        - "validations"
        - "last_validated_at"
        - "expires_at"
        - "activations"
    "ListResource_BenefitGrant_":
      type: "object"
      properties:
        "items":
          type: "array"
          items: {"$ref": "#/components/schemas/BenefitGrant"}
          title: "Items"
        "pagination": {"$ref": "#/components/schemas/Pagination"}
      title: "ListResource[BenefitGrant]"
      required:
        - "items"
        - "pagination"
    "ListResource_Benefit_":
      type: "object"
      properties:
        "items":
          type: "array"
          items: {"$ref": "#/components/schemas/Benefit", "title": "Benefit"}
          title: "Items"
        "pagination": {"$ref": "#/components/schemas/Pagination"}
      title: "ListResource[Benefit]"
      required:
        - "items"
        - "pagination"
    "ListResource_CheckoutLink_":
      type: "object"
      properties:
        "items":
          type: "array"
          items: {"$ref": "#/components/schemas/CheckoutLink"}
          title: "Items"
        "pagination": {"$ref": "#/components/schemas/Pagination"}
      title: "ListResource[CheckoutLink]"
      required:
        - "items"
        - "pagination"
    "ListResource_Checkout_":
      type: "object"
      properties:
        "items":
          type: "array"
          items: {"$ref": "#/components/schemas/Checkout"}
          title: "Items"
        "pagination": {"$ref": "#/components/schemas/Pagination"}
      title: "ListResource[Checkout]"
      required:
        - "items"
        - "pagination"
    "ListResource_CustomField_":
      type: "object"
      properties:
        "items":
          type: "array"
          items: {"$ref": "#/components/schemas/CustomField", "title": "CustomField"}
          title: "Items"
        "pagination": {"$ref": "#/components/schemas/Pagination"}
      title: "ListResource[CustomField]"
      required:
        - "items"
        - "pagination"
    "ListResource_CustomerBenefitGrant_":
      type: "object"
      properties:
        "items":
          type: "array"
          items: {"$ref": "#/components/schemas/CustomerBenefitGrant", "title": "CustomerBenefitGrant"}
          title: "Items"
        "pagination": {"$ref": "#/components/schemas/Pagination"}
      title: "ListResource[CustomerBenefitGrant]"
      required:
        - "items"
        - "pagination"
    "ListResource_CustomerOrder_":
      type: "object"
      properties:
        "items":
          type: "array"
          items: {"$ref": "#/components/schemas/CustomerOrder"}
          title: "Items"
        "pagination": {"$ref": "#/components/schemas/Pagination"}
      title: "ListResource[CustomerOrder]"
      required:
        - "items"
        - "pagination"
    "ListResource_CustomerSubscription_":
      type: "object"
      properties:
        "items":
          type: "array"
          items: {"$ref": "#/components/schemas/CustomerSubscription"}
          title: "Items"
        "pagination": {"$ref": "#/components/schemas/Pagination"}
      title: "ListResource[CustomerSubscription]"
      required:
        - "items"
        - "pagination"
    "ListResource_Customer_":
      type: "object"
      properties:
        "items":
          type: "array"
          items: {"$ref": "#/components/schemas/Customer"}
          title: "Items"
        "pagination": {"$ref": "#/components/schemas/Pagination"}
      title: "ListResource[Customer]"
      required:
        - "items"
        - "pagination"
    "ListResource_Discount_":
      type: "object"
      properties:
        "items":
          type: "array"
          items: {"$ref": "#/components/schemas/Discount", "title": "Discount"}
          title: "Items"
        "pagination": {"$ref": "#/components/schemas/Pagination"}
      title: "ListResource[Discount]"
      required:
        - "items"
        - "pagination"
    "ListResource_DownloadableRead_":
      type: "object"
      properties:
        "items":
          type: "array"
          items: {"$ref": "#/components/schemas/DownloadableRead"}
          title: "Items"
        "pagination": {"$ref": "#/components/schemas/Pagination"}
      title: "ListResource[DownloadableRead]"
      required:
        - "items"
        - "pagination"
    "ListResource_ExternalOrganization_":
      type: "object"
      properties:
        "items":
          type: "array"
          items: {"$ref": "#/components/schemas/ExternalOrganization"}
          title: "Items"
        "pagination": {"$ref": "#/components/schemas/Pagination"}
      title: "ListResource[ExternalOrganization]"
      required:
        - "items"
        - "pagination"
    "ListResource_FileRead_":
      type: "object"
      properties:
        "items":
          type: "array"
          items:
            oneOf:
              - {"$ref": "#/components/schemas/DownloadableFileRead"}
              - {"$ref": "#/components/schemas/ProductMediaFileRead"}
              - {"$ref": "#/components/schemas/OrganizationAvatarFileRead"}
            discriminator:
              propertyName: "service"
              mapping:
                "downloadable": "#/components/schemas/DownloadableFileRead"
                "organization_avatar": "#/components/schemas/OrganizationAvatarFileRead"
                "product_media": "#/components/schemas/ProductMediaFileRead"
            title: "FileRead"
          title: "Items"
        "pagination": {"$ref": "#/components/schemas/Pagination"}
      title: "ListResource[FileRead]"
      required:
        - "items"
        - "pagination"
    "ListResource_LicenseKeyRead_":
      type: "object"
      properties:
        "items":
          type: "array"
          items: {"$ref": "#/components/schemas/LicenseKeyRead"}
          title: "Items"
        "pagination": {"$ref": "#/components/schemas/Pagination"}
      title: "ListResource[LicenseKeyRead]"
      required:
        - "items"
        - "pagination"
    "ListResource_OAuth2Client_":
      type: "object"
      properties:
        "items":
          type: "array"
          items: {"$ref": "#/components/schemas/OAuth2Client"}
          title: "Items"
        "pagination": {"$ref": "#/components/schemas/Pagination"}
      title: "ListResource[OAuth2Client]"
      required:
        - "items"
        - "pagination"
    "ListResource_Order_":
      type: "object"
      properties:
        "items":
          type: "array"
          items: {"$ref": "#/components/schemas/Order"}
          title: "Items"
        "pagination": {"$ref": "#/components/schemas/Pagination"}
      title: "ListResource[Order]"
      required:
        - "items"
        - "pagination"
    "ListResource_Organization_":
      type: "object"
      properties:
        "items":
          type: "array"
          items: {"$ref": "#/components/schemas/Organization"}
          title: "Items"
        "pagination": {"$ref": "#/components/schemas/Pagination"}
      title: "ListResource[Organization]"
      required:
        - "items"
        - "pagination"
    "ListResource_Product_":
      type: "object"
      properties:
        "items":
          type: "array"
          items: {"$ref": "#/components/schemas/Product"}
          title: "Items"
        "pagination": {"$ref": "#/components/schemas/Pagination"}
      title: "ListResource[Product]"
      required:
        - "items"
        - "pagination"
    "ListResource_Repository_":
      type: "object"
      properties:
        "items":
          type: "array"
          items: {"$ref": "#/components/schemas/Repository"}
          title: "Items"
        "pagination": {"$ref": "#/components/schemas/Pagination"}
      title: "ListResource[Repository]"
      required:
        - "items"
        - "pagination"
    "ListResource_Subscription_":
      type: "object"
      properties:
        "items":
          type: "array"
          items: {"$ref": "#/components/schemas/Subscription"}
          title: "Items"
        "pagination": {"$ref": "#/components/schemas/Pagination"}
      title: "ListResource[Subscription]"
      required:
        - "items"
        - "pagination"
    "Metric":
      type: "object"
      properties:
        "slug":
          type: "string"
          title: "Slug"
          description: "Unique identifier for the metric."
        "display_name":
          type: "string"
          title: "Display Name"
          description: "Human-readable name for the metric."
        "type": {"$ref": "#/components/schemas/MetricType", "description": "Type of the metric, useful to know the unit or format of the value."}
      title: "Metric"
      required:
        - "slug"
        - "display_name"
        - "type"
      description: "Information about a metric."
    "MetricPeriod":
      type: "object"
      properties:
        "timestamp":
          type: "string"
          title: "Timestamp"
          format: "date-time"
          description: "Timestamp of this period data."
        "orders":
          type: "integer"
          title: "Orders"
        "revenue":
          type: "integer"
          title: "Revenue"
        "average_order_value":
          type: "integer"
          title: "Average Order Value"
        "one_time_products":
          type: "integer"
          title: "One Time Products"
        "one_time_products_revenue":
          type: "integer"
          title: "One Time Products Revenue"
        "new_subscriptions":
          type: "integer"
          title: "New Subscriptions"
        "new_subscriptions_revenue":
          type: "integer"
          title: "New Subscriptions Revenue"
        "renewed_subscriptions":
          type: "integer"
          title: "Renewed Subscriptions"
        "renewed_subscriptions_revenue":
          type: "integer"
          title: "Renewed Subscriptions Revenue"
        "active_subscriptions":
          type: "integer"
          title: "Active Subscriptions"
        "monthly_recurring_revenue":
          type: "integer"
          title: "Monthly Recurring Revenue"
      title: "MetricPeriod"
      required:
        - "timestamp"
        - "orders"
        - "revenue"
        - "average_order_value"
        - "one_time_products"
        - "one_time_products_revenue"
        - "new_subscriptions"
        - "new_subscriptions_revenue"
        - "renewed_subscriptions"
        - "renewed_subscriptions_revenue"
        - "active_subscriptions"
        - "monthly_recurring_revenue"
    "MetricType":
      type: "string"
      title: "MetricType"
      enum:
        - "scalar"
        - "currency"
    "Metrics":
      type: "object"
      properties:
        "orders": {"$ref": "#/components/schemas/Metric"}
        "revenue": {"$ref": "#/components/schemas/Metric"}
        "average_order_value": {"$ref": "#/components/schemas/Metric"}
        "one_time_products": {"$ref": "#/components/schemas/Metric"}
        "one_time_products_revenue": {"$ref": "#/components/schemas/Metric"}
        "new_subscriptions": {"$ref": "#/components/schemas/Metric"}
        "new_subscriptions_revenue": {"$ref": "#/components/schemas/Metric"}
        "renewed_subscriptions": {"$ref": "#/components/schemas/Metric"}
        "renewed_subscriptions_revenue": {"$ref": "#/components/schemas/Metric"}
        "active_subscriptions": {"$ref": "#/components/schemas/Metric"}
        "monthly_recurring_revenue": {"$ref": "#/components/schemas/Metric"}
      title: "Metrics"
      required:
        - "orders"
        - "revenue"
        - "average_order_value"
        - "one_time_products"
        - "one_time_products_revenue"
        - "new_subscriptions"
        - "new_subscriptions_revenue"
        - "renewed_subscriptions"
        - "renewed_subscriptions_revenue"
        - "active_subscriptions"
        - "monthly_recurring_revenue"
    "MetricsIntervalLimit":
      type: "object"
      properties:
        "max_days":
          type: "integer"
          title: "Max Days"
          description: "Maximum number of days for this interval."
      title: "MetricsIntervalLimit"
      required:
        - "max_days"
      description: "Date interval limit to get metrics for a given interval."
    "MetricsIntervalsLimits":
      type: "object"
      properties:
        "hour": {"$ref": "#/components/schemas/MetricsIntervalLimit", "description": "Limits for the hour interval."}
        "day": {"$ref": "#/components/schemas/MetricsIntervalLimit", "description": "Limits for the day interval."}
        "week": {"$ref": "#/components/schemas/MetricsIntervalLimit", "description": "Limits for the week interval."}
        "month": {"$ref": "#/components/schemas/MetricsIntervalLimit", "description": "Limits for the month interval."}
        "year": {"$ref": "#/components/schemas/MetricsIntervalLimit", "description": "Limits for the year interval."}
      title: "MetricsIntervalsLimits"
      required:
        - "hour"
        - "day"
        - "week"
        - "month"
        - "year"
      description: "Date interval limits to get metrics for each interval."
    "MetricsLimits":
      type: "object"
      properties:
        "min_date":
          type: "string"
          title: "Min Date"
          format: "date"
          description: "Minimum date to get metrics."
        "intervals": {"$ref": "#/components/schemas/MetricsIntervalsLimits", "description": "Limits for each interval."}
      title: "MetricsLimits"
      required:
        - "min_date"
        - "intervals"
      description: "Date limits to get metrics."
    "MetricsResponse":
      type: "object"
      properties:
        "periods":
          type: "array"
          items: {"$ref": "#/components/schemas/MetricPeriod"}
          title: "Periods"
          description: "List of data for each timestamp."
        "metrics": {"$ref": "#/components/schemas/Metrics", "description": "Information about the returned metrics."}
      title: "MetricsResponse"
      required:
        - "periods"
        - "metrics"
      description: "Metrics response schema."
    "NotPermitted":
      type: "object"
      properties:
        "error":
          type: "string"
          title: "Error"
          enum:
            - "NotPermitted"
          const: "NotPermitted"
        "detail":
          type: "string"
          title: "Detail"
      title: "NotPermitted"
      required:
        - "error"
        - "detail"
    "OAuth2Client":
      type: "object"
      properties:
        "redirect_uris":
          type: "array"
          items:
            type: "string"
            maxLength: 2083
            minLength: 1
            format: "uri"
          title: "Redirect Uris"
        "token_endpoint_auth_method":
          type: "string"
          title: "Token Endpoint Auth Method"
          enum:
            - "client_secret_basic"
            - "client_secret_post"
            - "none"
          default: "client_secret_post"
        "grant_types":
          type: "array"
          items:
            type: "string"
            enum:
              - "authorization_code"
              - "refresh_token"
          title: "Grant Types"
          default: ["authorization_code", "refresh_token"]
        "response_types":
          type: "array"
          items:
            type: "string"
            enum:
              - "code"
            const: "code"
          title: "Response Types"
          default: ["code"]
        "scope":
          type: "string"
          title: "Scope"
          default: "openid profile email user:read organizations:read organizations:write custom_fields:read custom_fields:write discounts:read discounts:write checkout_links:read checkout_links:write checkouts:read checkouts:write products:read products:write benefits:read benefits:write files:read files:write subscriptions:read subscriptions:write customers:read customers:write customer_sessions:write orders:read metrics:read webhooks:read webhooks:write external_organizations:read license_keys:read license_keys:write repositories:read repositories:write issues:read issues:write customer_portal:read customer_portal:write"
        "client_name":
          type: "string"
          title: "Client Name"
        "client_uri":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Client Uri"
        "logo_uri":
          anyOf:
            - type: "string"
              maxLength: 2083
              minLength: 1
              format: "uri"
            - type: "null"
          title: "Logo Uri"
        "tos_uri":
          anyOf:
            - type: "string"
              maxLength: 2083
              minLength: 1
              format: "uri"
            - type: "null"
          title: "Tos Uri"
        "policy_uri":
          anyOf:
            - type: "string"
              maxLength: 2083
              minLength: 1
              format: "uri"
            - type: "null"
          title: "Policy Uri"
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "client_id":
          type: "string"
          title: "Client Id"
        "client_secret":
          type: "string"
          title: "Client Secret"
        "client_id_issued_at":
          type: "integer"
          title: "Client Id Issued At"
        "client_secret_expires_at":
          type: "integer"
          title: "Client Secret Expires At"
      title: "OAuth2Client"
      required:
        - "redirect_uris"
        - "client_name"
        - "created_at"
        - "modified_at"
        - "client_id"
        - "client_secret"
        - "client_id_issued_at"
        - "client_secret_expires_at"
    "OAuth2ClientConfiguration":
      type: "object"
      properties:
        "redirect_uris":
          type: "array"
          items:
            type: "string"
            maxLength: 2083
            minLength: 1
            format: "uri"
          title: "Redirect Uris"
        "token_endpoint_auth_method":
          type: "string"
          title: "Token Endpoint Auth Method"
          enum:
            - "client_secret_basic"
            - "client_secret_post"
            - "none"
          default: "client_secret_post"
        "grant_types":
          type: "array"
          items:
            type: "string"
            enum:
              - "authorization_code"
              - "refresh_token"
          title: "Grant Types"
          default: ["authorization_code", "refresh_token"]
        "response_types":
          type: "array"
          items:
            type: "string"
            enum:
              - "code"
            const: "code"
          title: "Response Types"
          default: ["code"]
        "scope":
          type: "string"
          title: "Scope"
          default: "openid profile email user:read organizations:read organizations:write custom_fields:read custom_fields:write discounts:read discounts:write checkout_links:read checkout_links:write checkouts:read checkouts:write products:read products:write benefits:read benefits:write files:read files:write subscriptions:read subscriptions:write customers:read customers:write customer_sessions:write orders:read metrics:read webhooks:read webhooks:write external_organizations:read license_keys:read license_keys:write repositories:read repositories:write issues:read issues:write customer_portal:read customer_portal:write"
        "client_name":
          type: "string"
          title: "Client Name"
        "client_uri":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Client Uri"
        "logo_uri":
          anyOf:
            - type: "string"
              maxLength: 2083
              minLength: 1
              format: "uri"
            - type: "null"
          title: "Logo Uri"
        "tos_uri":
          anyOf:
            - type: "string"
              maxLength: 2083
              minLength: 1
              format: "uri"
            - type: "null"
          title: "Tos Uri"
        "policy_uri":
          anyOf:
            - type: "string"
              maxLength: 2083
              minLength: 1
              format: "uri"
            - type: "null"
          title: "Policy Uri"
      title: "OAuth2ClientConfiguration"
      required:
        - "redirect_uris"
        - "client_name"
    "OAuth2ClientConfigurationUpdate":
      type: "object"
      properties:
        "redirect_uris":
          type: "array"
          items:
            type: "string"
            maxLength: 2083
            minLength: 1
            format: "uri"
          title: "Redirect Uris"
        "token_endpoint_auth_method":
          type: "string"
          title: "Token Endpoint Auth Method"
          enum:
            - "client_secret_basic"
            - "client_secret_post"
            - "none"
          default: "client_secret_post"
        "grant_types":
          type: "array"
          items:
            type: "string"
            enum:
              - "authorization_code"
              - "refresh_token"
          title: "Grant Types"
          default: ["authorization_code", "refresh_token"]
        "response_types":
          type: "array"
          items:
            type: "string"
            enum:
              - "code"
            const: "code"
          title: "Response Types"
          default: ["code"]
        "scope":
          type: "string"
          title: "Scope"
          default: "openid profile email user:read organizations:read organizations:write custom_fields:read custom_fields:write discounts:read discounts:write checkout_links:read checkout_links:write checkouts:read checkouts:write products:read products:write benefits:read benefits:write files:read files:write subscriptions:read subscriptions:write customers:read customers:write customer_sessions:write orders:read metrics:read webhooks:read webhooks:write external_organizations:read license_keys:read license_keys:write repositories:read repositories:write issues:read issues:write customer_portal:read customer_portal:write"
        "client_name":
          type: "string"
          title: "Client Name"
        "client_uri":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Client Uri"
        "logo_uri":
          anyOf:
            - type: "string"
              maxLength: 2083
              minLength: 1
              format: "uri"
            - type: "null"
          title: "Logo Uri"
        "tos_uri":
          anyOf:
            - type: "string"
              maxLength: 2083
              minLength: 1
              format: "uri"
            - type: "null"
          title: "Tos Uri"
        "policy_uri":
          anyOf:
            - type: "string"
              maxLength: 2083
              minLength: 1
              format: "uri"
            - type: "null"
          title: "Policy Uri"
        "client_id":
          type: "string"
          title: "Client Id"
      title: "OAuth2ClientConfigurationUpdate"
      required:
        - "redirect_uris"
        - "client_name"
        - "client_id"
    "OAuth2ClientPublic":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "client_id":
          type: "string"
          title: "Client Id"
        "client_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Client Name"
        "client_uri":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Client Uri"
        "logo_uri":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Logo Uri"
        "tos_uri":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Tos Uri"
        "policy_uri":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Policy Uri"
      title: "OAuth2ClientPublic"
      required:
        - "created_at"
        - "modified_at"
        - "client_id"
        - "client_name"
        - "client_uri"
        - "logo_uri"
        - "tos_uri"
        - "policy_uri"
    "Order":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the object."
        "metadata":
          type: "object"
          title: "Metadata"
          additionalProperties:
            anyOf:
              - type: "string"
              - type: "integer"
              - type: "boolean"
        "custom_field_data":
          type: "object"
          title: "Custom Field Data"
          description: "Key-value object storing custom field values."
        "amount":
          type: "integer"
          title: "Amount"
        "tax_amount":
          type: "integer"
          title: "Tax Amount"
        "currency":
          type: "string"
          title: "Currency"
        "billing_reason": {"$ref": "#/components/schemas/OrderBillingReason"}
        "billing_address":
          anyOf:
            - {"$ref": "#/components/schemas/Address"}
            - type: "null"
        "customer_id":
          type: "string"
          title: "Customer Id"
          format: "uuid4"
        "product_id":
          type: "string"
          title: "Product Id"
          format: "uuid4"
        "product_price_id":
          type: "string"
          title: "Product Price Id"
          format: "uuid4"
        "discount_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Discount Id"
        "subscription_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Subscription Id"
        "checkout_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Checkout Id"
        "customer": {"$ref": "#/components/schemas/OrderCustomer"}
        "user_id":
          type: "string"
          title: "User Id"
          format: "uuid4"
          deprecated: true
        "user": {"$ref": "#/components/schemas/OrderUser", "deprecated": true}
        "product": {"$ref": "#/components/schemas/OrderProduct"}
        "product_price": {"$ref": "#/components/schemas/ProductPrice"}
        "discount":
          anyOf:
            - oneOf:
                - {"$ref": "#/components/schemas/DiscountFixedOnceForeverDurationBase"}
                - {"$ref": "#/components/schemas/DiscountFixedRepeatDurationBase"}
                - {"$ref": "#/components/schemas/DiscountPercentageOnceForeverDurationBase"}
                - {"$ref": "#/components/schemas/DiscountPercentageRepeatDurationBase"}
              title: "OrderDiscount"
            - type: "null"
          title: "Discount"
        "subscription":
          anyOf:
            - {"$ref": "#/components/schemas/OrderSubscription"}
            - type: "null"
      title: "Order"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "metadata"
        - "amount"
        - "tax_amount"
        - "currency"
        - "billing_reason"
        - "billing_address"
        - "customer_id"
        - "product_id"
        - "product_price_id"
        - "discount_id"
        - "subscription_id"
        - "checkout_id"
        - "customer"
        - "user_id"
        - "user"
        - "product"
        - "product_price"
        - "discount"
        - "subscription"
    "OrderBillingReason":
      type: "string"
      title: "OrderBillingReason"
      enum:
        - "purchase"
        - "subscription_create"
        - "subscription_cycle"
        - "subscription_update"
    "OrderCustomer":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the object."
        "metadata":
          type: "object"
          title: "Metadata"
          additionalProperties:
            anyOf:
              - type: "string"
              - type: "integer"
              - type: "boolean"
        "email":
          type: "string"
          title: "Email"
        "email_verified":
          type: "boolean"
          title: "Email Verified"
        "name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Name"
        "billing_address":
          anyOf:
            - {"$ref": "#/components/schemas/Address"}
            - type: "null"
        "tax_id":
          anyOf:
            - type: "array"
              prefixItems:
                - type: "string"
                - {"$ref": "#/components/schemas/TaxIDFormat"}
              maxItems: 2
              minItems: 2
            - type: "null"
          title: "Tax Id"
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
        "avatar_url":
          type: "string"
          title: "Avatar Url"
          readOnly: true
      title: "OrderCustomer"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "metadata"
        - "email"
        - "email_verified"
        - "name"
        - "billing_address"
        - "tax_id"
        - "organization_id"
        - "avatar_url"
    "OrderInvoice":
      type: "object"
      properties:
        "url":
          type: "string"
          title: "Url"
          description: "The URL to the invoice."
      title: "OrderInvoice"
      required:
        - "url"
      description: "Order's invoice data."
    "OrderProduct":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the product."
        "name":
          type: "string"
          title: "Name"
          description: "The name of the product."
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
          description: "The description of the product."
        "is_recurring":
          type: "boolean"
          title: "Is Recurring"
          description: "Whether the product is a subscription tier."
        "is_archived":
          type: "boolean"
          title: "Is Archived"
          description: "Whether the product is archived and no longer available."
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
          description: "The ID of the organization owning the product."
      title: "OrderProduct"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "name"
        - "description"
        - "is_recurring"
        - "is_archived"
        - "organization_id"
    "OrderSortProperty":
      type: "string"
      title: "OrderSortProperty"
      enum:
        - "created_at"
        - "-created_at"
        - "amount"
        - "-amount"
        - "customer"
        - "-customer"
        - "product"
        - "-product"
        - "discount"
        - "-discount"
        - "subscription"
        - "-subscription"
    "OrderSubscription":
      type: "object"
      properties:
        "metadata":
          type: "object"
          title: "Metadata"
          additionalProperties:
            anyOf:
              - type: "string"
              - type: "integer"
              - type: "boolean"
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the object."
        "amount":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Amount"
        "currency":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Currency"
        "recurring_interval": {"$ref": "#/components/schemas/SubscriptionRecurringInterval"}
        "status": {"$ref": "#/components/schemas/SubscriptionStatus"}
        "current_period_start":
          type: "string"
          title: "Current Period Start"
          format: "date-time"
        "current_period_end":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Current Period End"
        "cancel_at_period_end":
          type: "boolean"
          title: "Cancel At Period End"
        "started_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Started At"
        "ended_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Ended At"
        "customer_id":
          type: "string"
          title: "Customer Id"
          format: "uuid4"
        "product_id":
          type: "string"
          title: "Product Id"
          format: "uuid4"
        "price_id":
          type: "string"
          title: "Price Id"
          format: "uuid4"
        "discount_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Discount Id"
        "checkout_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Checkout Id"
        "user_id":
          type: "string"
          title: "User Id"
          format: "uuid4"
          deprecated: true
      title: "OrderSubscription"
      required:
        - "metadata"
        - "created_at"
        - "modified_at"
        - "id"
        - "amount"
        - "currency"
        - "recurring_interval"
        - "status"
        - "current_period_start"
        - "current_period_end"
        - "cancel_at_period_end"
        - "started_at"
        - "ended_at"
        - "customer_id"
        - "product_id"
        - "price_id"
        - "discount_id"
        - "checkout_id"
        - "user_id"
    "OrderUser":
      type: "object"
      properties:
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
        "email":
          type: "string"
          title: "Email"
        "public_name":
          type: "string"
          title: "Public Name"
        "avatar_url":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Avatar Url"
        "github_username":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Github Username"
      title: "OrderUser"
      required:
        - "id"
        - "email"
        - "public_name"
    "Organization":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The organization ID."
          x-polar-selector-widget: {"displayProperty": "name", "resourceName": "Organization", "resourceRoot": "/v1/organizations"}
        "name":
          type: "string"
          title: "Name"
        "slug":
          type: "string"
          title: "Slug"
        "avatar_url":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Avatar Url"
        "bio":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Bio"
        "company":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Company"
        "blog":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Blog"
        "location":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Location"
        "email":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Email"
        "twitter_username":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Twitter Username"
        "pledge_minimum_amount":
          type: "integer"
          title: "Pledge Minimum Amount"
        "pledge_badge_show_amount":
          type: "boolean"
          title: "Pledge Badge Show Amount"
        "default_upfront_split_to_contributors":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Default Upfront Split To Contributors"
        "profile_settings":
          anyOf:
            - {"$ref": "#/components/schemas/OrganizationProfileSettings"}
            - type: "null"
          description: "Settings for the organization profile"
        "feature_settings":
          anyOf:
            - {"$ref": "#/components/schemas/OrganizationFeatureSettings"}
            - type: "null"
          description: "Settings for the organization features"
      title: "Organization"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "name"
        - "slug"
        - "avatar_url"
        - "bio"
        - "company"
        - "blog"
        - "location"
        - "email"
        - "twitter_username"
        - "pledge_minimum_amount"
        - "pledge_badge_show_amount"
        - "default_upfront_split_to_contributors"
        - "profile_settings"
        - "feature_settings"
    "OrganizationAvatarFileCreate":
      type: "object"
      properties:
        "organization_id":
          anyOf:
            - type: "string"
              format: "uuid4"
              description: "The organization ID."
              x-polar-selector-widget: {"displayProperty": "name", "resourceName": "Organization", "resourceRoot": "/v1/organizations"}
            - type: "null"
          title: "Organization Id"
        "name":
          type: "string"
          title: "Name"
        "mime_type":
          type: "string"
          title: "Mime Type"
          pattern: "^image\\/(jpeg|png|gif|webp|svg\\+xml)$"
          description: "MIME type of the file. Only images are supported for this type of file."
        "size":
          type: "integer"
          title: "Size"
          maximum: 1048576
          description: "Size of the file. A maximum of 1 MB is allowed for this type of file."
        "checksum_sha256_base64":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Checksum Sha256 Base64"
        "upload": {"$ref": "#/components/schemas/S3FileCreateMultipart"}
        "service":
          type: "string"
          title: "Service"
          enum:
            - "organization_avatar"
          const: "organization_avatar"
        "version":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Version"
      title: "OrganizationAvatarFileCreate"
      required:
        - "name"
        - "mime_type"
        - "size"
        - "upload"
        - "service"
      description: "Schema to create a file to be used as an organization avatar."
    "OrganizationAvatarFileRead":
      type: "object"
      properties:
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the object."
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
        "name":
          type: "string"
          title: "Name"
        "path":
          type: "string"
          title: "Path"
        "mime_type":
          type: "string"
          title: "Mime Type"
        "size":
          type: "integer"
          title: "Size"
        "storage_version":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Storage Version"
        "checksum_etag":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Checksum Etag"
        "checksum_sha256_base64":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Checksum Sha256 Base64"
        "checksum_sha256_hex":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Checksum Sha256 Hex"
        "last_modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Last Modified At"
        "version":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Version"
        "service":
          type: "string"
          title: "Service"
          enum:
            - "organization_avatar"
          const: "organization_avatar"
        "is_uploaded":
          type: "boolean"
          title: "Is Uploaded"
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
        "size_readable":
          type: "string"
          title: "Size Readable"
          readOnly: true
        "public_url":
          type: "string"
          title: "Public Url"
          readOnly: true
      title: "OrganizationAvatarFileRead"
      required:
        - "id"
        - "organization_id"
        - "name"
        - "path"
        - "mime_type"
        - "size"
        - "storage_version"
        - "checksum_etag"
        - "checksum_sha256_base64"
        - "checksum_sha256_hex"
        - "last_modified_at"
        - "version"
        - "service"
        - "is_uploaded"
        - "created_at"
        - "size_readable"
        - "public_url"
      description: "File to be used as an organization avatar."
    "OrganizationCreate":
      type: "object"
      properties:
        "name":
          type: "string"
          title: "Name"
          minLength: 3
        "slug":
          type: "string"
          title: "Slug"
          minLength: 3
        "avatar_url":
          anyOf:
            - type: "string"
              maxLength: 2083
              minLength: 1
              format: "uri"
            - type: "null"
          title: "Avatar Url"
        "feature_settings":
          anyOf:
            - {"$ref": "#/components/schemas/OrganizationFeatureSettings"}
            - type: "null"
      title: "OrganizationCreate"
      required:
        - "name"
        - "slug"
    "OrganizationFeatureSettings":
      type: "object"
      properties:
        "issue_funding_enabled":
          type: "boolean"
          title: "Issue Funding Enabled"
          description: "If this organization has issue funding enabled"
          default: false
      title: "OrganizationFeatureSettings"
    "OrganizationProfileSettings":
      type: "object"
      properties:
        "enabled":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Enabled"
          description: "If this organization has a profile enabled"
        "description":
          anyOf:
            - type: "string"
              maxLength: 160
            - type: "null"
          title: "Description"
          description: "A description of the organization"
        "featured_projects":
          anyOf:
            - type: "array"
              items:
                type: "string"
                format: "uuid4"
            - type: "null"
          title: "Featured Projects"
          description: "A list of featured projects"
        "featured_organizations":
          anyOf:
            - type: "array"
              items:
                type: "string"
                format: "uuid4"
            - type: "null"
          title: "Featured Organizations"
          description: "A list of featured organizations"
        "links":
          anyOf:
            - type: "array"
              items:
                type: "string"
                maxLength: 2083
                minLength: 1
                format: "uri"
            - type: "null"
          title: "Links"
          description: "A list of links associated with the organization"
        "subscribe":
          anyOf:
            - {"$ref": "#/components/schemas/OrganizationSubscribePromoteSettings"}
            - type: "null"
          description: "Subscription promotion settings"
          default: {"promote": true, "show_count": true, "count_free": true}
        "accent_color":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Accent Color"
          description: "Accent color for the organization"
      title: "OrganizationProfileSettings"
    "OrganizationSortProperty":
      type: "string"
      title: "OrganizationSortProperty"
      enum:
        - "created_at"
        - "-created_at"
        - "name"
        - "-name"
    "OrganizationSubscribePromoteSettings":
      type: "object"
      properties:
        "promote":
          type: "boolean"
          title: "Promote"
          description: "Promote email subscription (free)"
          default: true
        "show_count":
          type: "boolean"
          title: "Show Count"
          description: "Show subscription count publicly"
          default: true
        "count_free":
          type: "boolean"
          title: "Count Free"
          description: "Include free subscribers in total count"
          default: true
      title: "OrganizationSubscribePromoteSettings"
    "OrganizationUpdate":
      type: "object"
      properties:
        "name":
          anyOf:
            - type: "string"
              minLength: 3
            - type: "null"
          title: "Name"
        "avatar_url":
          anyOf:
            - type: "string"
              maxLength: 2083
              minLength: 1
              format: "uri"
            - type: "null"
          title: "Avatar Url"
        "default_upfront_split_to_contributors":
          anyOf:
            - type: "integer"
              maximum: 100
              minimum: 0
            - type: "null"
          title: "Default Upfront Split To Contributors"
        "pledge_badge_show_amount":
          type: "boolean"
          title: "Pledge Badge Show Amount"
          default: false
        "billing_email":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Billing Email"
        "default_badge_custom_content":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Default Badge Custom Content"
        "pledge_minimum_amount":
          type: "integer"
          title: "Pledge Minimum Amount"
          default: 2000
        "total_monthly_spending_limit":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Monthly Spending Limit"
        "per_user_monthly_spending_limit":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Per User Monthly Spending Limit"
        "profile_settings":
          anyOf:
            - {"$ref": "#/components/schemas/OrganizationProfileSettings"}
            - type: "null"
        "feature_settings":
          anyOf:
            - {"$ref": "#/components/schemas/OrganizationFeatureSettings"}
            - type: "null"
      title: "OrganizationUpdate"
    "Pagination":
      type: "object"
      properties:
        "total_count":
          type: "integer"
          title: "Total Count"
        "max_page":
          type: "integer"
          title: "Max Page"
      title: "Pagination"
      required:
        - "total_count"
        - "max_page"
    "PaymentProcessor":
      type: "string"
      title: "PaymentProcessor"
      enum:
        - "stripe"
      const: "stripe"
    "Platforms":
      type: "string"
      title: "Platforms"
      enum:
        - "github"
      const: "github"
    "Pledge":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the object."
        "amount":
          type: "integer"
          title: "Amount"
          description: "Amount pledged towards the issue"
        "currency":
          type: "string"
          title: "Currency"
        "state": {"$ref": "#/components/schemas/PledgeState", "description": "Current state of the pledge"}
        "type": {"$ref": "#/components/schemas/PledgeType", "description": "Type of pledge"}
        "refunded_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Refunded At"
          description: "If and when the pledge was refunded to the pledger"
        "scheduled_payout_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Scheduled Payout At"
          description: "When the payout is scheduled to be made to the maintainers behind the issue. Disputes must be made before this date."
        "issue": {"$ref": "#/components/schemas/Issue", "description": "The issue that the pledge was made towards"}
        "pledger":
          anyOf:
            - {"$ref": "#/components/schemas/Pledger"}
            - type: "null"
          description: "The user or organization that made this pledge"
        "hosted_invoice_url":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Hosted Invoice Url"
          description: "URL of invoice for this pledge"
        "authed_can_admin_sender":
          type: "boolean"
          title: "Authed Can Admin Sender"
          description: "If the currently authenticated subject can perform admin actions on behalf of the maker of the peldge"
          default: false
        "authed_can_admin_received":
          type: "boolean"
          title: "Authed Can Admin Received"
          description: "If the currently authenticated subject can perform admin actions on behalf of the receiver of the peldge"
          default: false
        "created_by":
          anyOf:
            - {"$ref": "#/components/schemas/Pledger"}
            - type: "null"
          description: "For pledges made by an organization, or on behalf of an organization. This is the user that made the pledge. Only visible for members of said organization."
      title: "Pledge"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "amount"
        - "currency"
        - "state"
        - "type"
        - "issue"
    "PledgeState":
      type: "string"
      title: "PledgeState"
      enum:
        - "initiated"
        - "created"
        - "pending"
        - "refunded"
        - "disputed"
        - "charge_disputed"
        - "cancelled"
    "PledgeType":
      type: "string"
      title: "PledgeType"
      enum:
        - "pay_upfront"
        - "pay_on_completion"
        - "pay_directly"
    "Pledger":
      type: "object"
      properties:
        "name":
          type: "string"
          title: "Name"
        "github_username":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Github Username"
        "avatar_url":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Avatar Url"
      title: "Pledger"
      required:
        - "name"
        - "github_username"
        - "avatar_url"
    "Product":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the product."
        "name":
          type: "string"
          title: "Name"
          description: "The name of the product."
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
          description: "The description of the product."
        "is_recurring":
          type: "boolean"
          title: "Is Recurring"
          description: "Whether the product is a subscription tier."
        "is_archived":
          type: "boolean"
          title: "Is Archived"
          description: "Whether the product is archived and no longer available."
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
          description: "The ID of the organization owning the product."
        "metadata":
          type: "object"
          title: "Metadata"
          additionalProperties:
            anyOf:
              - type: "string"
              - type: "integer"
              - type: "boolean"
        "prices":
          type: "array"
          items: {"$ref": "#/components/schemas/ProductPrice"}
          title: "Prices"
          description: "List of prices for this product."
        "benefits":
          type: "array"
          items: {"$ref": "#/components/schemas/Benefit", "title": "Benefit"}
          title: "Benefits"
          description: "List of benefits granted by the product."
        "medias":
          type: "array"
          items: {"$ref": "#/components/schemas/ProductMediaFileRead"}
          title: "Medias"
          description: "List of medias associated to the product."
        "attached_custom_fields":
          type: "array"
          items: {"$ref": "#/components/schemas/AttachedCustomField"}
          title: "Attached Custom Fields"
          description: "List of custom fields attached to the product."
      title: "Product"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "name"
        - "description"
        - "is_recurring"
        - "is_archived"
        - "organization_id"
        - "metadata"
        - "prices"
        - "benefits"
        - "medias"
        - "attached_custom_fields"
      description: "A product."
    "ProductBenefitsUpdate":
      type: "object"
      properties:
        "benefits":
          type: "array"
          items:
            type: "string"
            format: "uuid4"
            description: "The benefit ID."
            x-polar-selector-widget: {"displayProperty": "description", "resourceName": "Benefit", "resourceRoot": "/v1/benefits"}
          title: "Benefits"
          description: "List of benefit IDs. Each one must be on the same organization as the product."
      title: "ProductBenefitsUpdate"
      required:
        - "benefits"
      description: "Schema to update the benefits granted by a product."
    "ProductCreate":
      anyOf:
        - {"$ref": "#/components/schemas/ProductRecurringCreate"}
        - {"$ref": "#/components/schemas/ProductOneTimeCreate"}
    "ProductMediaFileCreate":
      type: "object"
      properties:
        "organization_id":
          anyOf:
            - type: "string"
              format: "uuid4"
              description: "The organization ID."
              x-polar-selector-widget: {"displayProperty": "name", "resourceName": "Organization", "resourceRoot": "/v1/organizations"}
            - type: "null"
          title: "Organization Id"
        "name":
          type: "string"
          title: "Name"
        "mime_type":
          type: "string"
          title: "Mime Type"
          pattern: "^image\\/(jpeg|png|gif|webp|svg\\+xml)$"
          description: "MIME type of the file. Only images are supported for this type of file."
        "size":
          type: "integer"
          title: "Size"
          maximum: 10485760
          description: "Size of the file. A maximum of 10 MB is allowed for this type of file."
        "checksum_sha256_base64":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Checksum Sha256 Base64"
        "upload": {"$ref": "#/components/schemas/S3FileCreateMultipart"}
        "service":
          type: "string"
          title: "Service"
          enum:
            - "product_media"
          const: "product_media"
        "version":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Version"
      title: "ProductMediaFileCreate"
      required:
        - "name"
        - "mime_type"
        - "size"
        - "upload"
        - "service"
      description: "Schema to create a file to be used as a product media file."
    "ProductMediaFileRead":
      type: "object"
      properties:
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the object."
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
        "name":
          type: "string"
          title: "Name"
        "path":
          type: "string"
          title: "Path"
        "mime_type":
          type: "string"
          title: "Mime Type"
        "size":
          type: "integer"
          title: "Size"
        "storage_version":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Storage Version"
        "checksum_etag":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Checksum Etag"
        "checksum_sha256_base64":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Checksum Sha256 Base64"
        "checksum_sha256_hex":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Checksum Sha256 Hex"
        "last_modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Last Modified At"
        "version":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Version"
        "service":
          type: "string"
          title: "Service"
          enum:
            - "product_media"
          const: "product_media"
        "is_uploaded":
          type: "boolean"
          title: "Is Uploaded"
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
        "size_readable":
          type: "string"
          title: "Size Readable"
          readOnly: true
        "public_url":
          type: "string"
          title: "Public Url"
          readOnly: true
      title: "ProductMediaFileRead"
      required:
        - "id"
        - "organization_id"
        - "name"
        - "path"
        - "mime_type"
        - "size"
        - "storage_version"
        - "checksum_etag"
        - "checksum_sha256_base64"
        - "checksum_sha256_hex"
        - "last_modified_at"
        - "version"
        - "service"
        - "is_uploaded"
        - "created_at"
        - "size_readable"
        - "public_url"
      description: "File to be used as a product media file."
    "ProductOneTimeCreate":
      type: "object"
      properties:
        "metadata":
          type: "object"
          title: "Metadata"
          maxProperties: 50
          additionalProperties:
            anyOf:
              - type: "string"
                maxLength: 500
                minLength: 1
              - type: "integer"
              - type: "boolean"
          description: "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
        "name":
          type: "string"
          title: "Name"
          minLength: 3
          description: "The name of the product."
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
          description: "The description of the product."
        "prices":
          type: "array"
          items:
            anyOf:
              - {"$ref": "#/components/schemas/ProductPriceOneTimeFixedCreate"}
              - {"$ref": "#/components/schemas/ProductPriceOneTimeCustomCreate"}
              - {"$ref": "#/components/schemas/ProductPriceOneTimeFreeCreate"}
          title: "ProductPriceOneTimeCreate"
          maxItems: 1
          minItems: 1
          description: "List of available prices for this product."
        "medias":
          anyOf:
            - type: "array"
              items:
                type: "string"
                format: "uuid4"
            - type: "null"
          title: "Medias"
          description: "List of file IDs. Each one must be on the same organization as the product, of type `product_media` and correctly uploaded."
        "attached_custom_fields":
          type: "array"
          items: {"$ref": "#/components/schemas/AttachedCustomFieldCreate"}
          title: "Attached Custom Fields"
          description: "List of custom fields to attach."
        "organization_id":
          anyOf:
            - type: "string"
              format: "uuid4"
              description: "The organization ID."
              x-polar-selector-widget: {"displayProperty": "name", "resourceName": "Organization", "resourceRoot": "/v1/organizations"}
            - type: "null"
          title: "Organization Id"
          description: "The ID of the organization owning the product. **Required unless you use an organization token.**"
      title: "ProductOneTimeCreate"
      required:
        - "name"
        - "prices"
      description: "Schema to create a one-time product."
    "ProductPrice":
      oneOf:
        - {"$ref": "#/components/schemas/ProductPriceRecurring"}
        - {"$ref": "#/components/schemas/ProductPriceOneTime"}
      discriminator:
        propertyName: "type"
        mapping:
          "one_time": "#/components/schemas/ProductPriceOneTime"
          "recurring": "#/components/schemas/ProductPriceRecurring"
    "ProductPriceOneTime":
      oneOf:
        - {"$ref": "#/components/schemas/ProductPriceOneTimeFixed"}
        - {"$ref": "#/components/schemas/ProductPriceOneTimeCustom"}
        - {"$ref": "#/components/schemas/ProductPriceOneTimeFree"}
      discriminator:
        propertyName: "amount_type"
        mapping:
          "custom": "#/components/schemas/ProductPriceOneTimeCustom"
          "fixed": "#/components/schemas/ProductPriceOneTimeFixed"
          "free": "#/components/schemas/ProductPriceOneTimeFree"
    "ProductPriceOneTimeCustom":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the price."
        "amount_type":
          type: "string"
          title: "Amount Type"
          enum:
            - "custom"
          const: "custom"
        "is_archived":
          type: "boolean"
          title: "Is Archived"
          description: "Whether the price is archived and no longer available."
        "product_id":
          type: "string"
          title: "Product Id"
          format: "uuid4"
          description: "The ID of the product owning the price."
        "price_currency":
          type: "string"
          title: "Price Currency"
          description: "The currency."
        "minimum_amount":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Minimum Amount"
          description: "The minimum amount the customer can pay."
        "maximum_amount":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Maximum Amount"
          description: "The maximum amount the customer can pay."
        "preset_amount":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Preset Amount"
          description: "The initial amount shown to the customer."
        "type":
          type: "string"
          title: "Type"
          enum:
            - "one_time"
          description: "The type of the price."
          const: "one_time"
      title: "ProductPriceOneTimeCustom"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "amount_type"
        - "is_archived"
        - "product_id"
        - "price_currency"
        - "minimum_amount"
        - "maximum_amount"
        - "preset_amount"
        - "type"
      description: "A pay-what-you-want price for a one-time product."
    "ProductPriceOneTimeCustomCreate":
      type: "object"
      properties:
        "type":
          type: "string"
          title: "Type"
          enum:
            - "one_time"
          const: "one_time"
        "amount_type":
          type: "string"
          title: "Amount Type"
          enum:
            - "custom"
          const: "custom"
        "price_currency":
          type: "string"
          title: "Price Currency"
          pattern: "usd"
          description: "The currency. Currently, only `usd` is supported."
          default: "usd"
        "minimum_amount":
          anyOf:
            - type: "integer"
              maximum: 99999999
              minimum: 50
              description: "The price in cents."
            - type: "null"
          title: "Minimum Amount"
          description: "The minimum amount the customer can pay."
        "maximum_amount":
          anyOf:
            - type: "integer"
              maximum: 99999999
              minimum: 50
              description: "The price in cents."
            - type: "null"
          title: "Maximum Amount"
          description: "The maximum amount the customer can pay."
        "preset_amount":
          anyOf:
            - type: "integer"
              maximum: 99999999
              minimum: 50
              description: "The price in cents."
            - type: "null"
          title: "Preset Amount"
          description: "The initial amount shown to the customer."
      title: "ProductPriceOneTimeCustomCreate"
      required:
        - "type"
        - "amount_type"
      description: "Schema to create a pay-what-you-want price for a one-time product."
    "ProductPriceOneTimeFixed":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the price."
        "amount_type":
          type: "string"
          title: "Amount Type"
          enum:
            - "fixed"
          const: "fixed"
        "is_archived":
          type: "boolean"
          title: "Is Archived"
          description: "Whether the price is archived and no longer available."
        "product_id":
          type: "string"
          title: "Product Id"
          format: "uuid4"
          description: "The ID of the product owning the price."
        "price_currency":
          type: "string"
          title: "Price Currency"
          description: "The currency."
        "price_amount":
          type: "integer"
          title: "Price Amount"
          description: "The price in cents."
        "type":
          type: "string"
          title: "Type"
          enum:
            - "one_time"
          description: "The type of the price."
          const: "one_time"
      title: "ProductPriceOneTimeFixed"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "amount_type"
        - "is_archived"
        - "product_id"
        - "price_currency"
        - "price_amount"
        - "type"
      description: "A one-time price for a product."
    "ProductPriceOneTimeFixedCreate":
      type: "object"
      properties:
        "type":
          type: "string"
          title: "Type"
          enum:
            - "one_time"
          const: "one_time"
        "amount_type":
          type: "string"
          title: "Amount Type"
          enum:
            - "fixed"
          const: "fixed"
        "price_amount":
          type: "integer"
          title: "Price Amount"
          maximum: 99999999
          minimum: 50
          description: "The price in cents."
        "price_currency":
          type: "string"
          title: "Price Currency"
          pattern: "usd"
          description: "The currency. Currently, only `usd` is supported."
          default: "usd"
      title: "ProductPriceOneTimeFixedCreate"
      required:
        - "type"
        - "amount_type"
        - "price_amount"
      description: "Schema to create a one-time product price."
    "ProductPriceOneTimeFree":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the price."
        "amount_type":
          type: "string"
          title: "Amount Type"
          enum:
            - "free"
          const: "free"
        "is_archived":
          type: "boolean"
          title: "Is Archived"
          description: "Whether the price is archived and no longer available."
        "product_id":
          type: "string"
          title: "Product Id"
          format: "uuid4"
          description: "The ID of the product owning the price."
        "type":
          type: "string"
          title: "Type"
          enum:
            - "one_time"
          description: "The type of the price."
          const: "one_time"
      title: "ProductPriceOneTimeFree"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "amount_type"
        - "is_archived"
        - "product_id"
        - "type"
      description: "A free one-time price for a product."
    "ProductPriceOneTimeFreeCreate":
      type: "object"
      properties:
        "type":
          type: "string"
          title: "Type"
          enum:
            - "one_time"
          const: "one_time"
        "amount_type":
          type: "string"
          title: "Amount Type"
          enum:
            - "free"
          const: "free"
      title: "ProductPriceOneTimeFreeCreate"
      required:
        - "type"
        - "amount_type"
      description: "Schema to create a free one-time product price."
    "ProductPriceRecurring":
      oneOf:
        - {"$ref": "#/components/schemas/ProductPriceRecurringFixed"}
        - {"$ref": "#/components/schemas/ProductPriceRecurringCustom"}
        - {"$ref": "#/components/schemas/ProductPriceRecurringFree"}
      discriminator:
        propertyName: "amount_type"
        mapping:
          "custom": "#/components/schemas/ProductPriceRecurringCustom"
          "fixed": "#/components/schemas/ProductPriceRecurringFixed"
          "free": "#/components/schemas/ProductPriceRecurringFree"
    "ProductPriceRecurringCustom":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the price."
        "amount_type":
          type: "string"
          title: "Amount Type"
          enum:
            - "custom"
          const: "custom"
        "is_archived":
          type: "boolean"
          title: "Is Archived"
          description: "Whether the price is archived and no longer available."
        "product_id":
          type: "string"
          title: "Product Id"
          format: "uuid4"
          description: "The ID of the product owning the price."
        "price_currency":
          type: "string"
          title: "Price Currency"
          description: "The currency."
        "minimum_amount":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Minimum Amount"
          description: "The minimum amount the customer can pay."
        "maximum_amount":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Maximum Amount"
          description: "The maximum amount the customer can pay."
        "preset_amount":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Preset Amount"
          description: "The initial amount shown to the customer."
        "type":
          type: "string"
          title: "Type"
          enum:
            - "recurring"
          description: "The type of the price."
          const: "recurring"
        "recurring_interval": {"$ref": "#/components/schemas/SubscriptionRecurringInterval", "description": "The recurring interval of the price."}
      title: "ProductPriceRecurringCustom"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "amount_type"
        - "is_archived"
        - "product_id"
        - "price_currency"
        - "minimum_amount"
        - "maximum_amount"
        - "preset_amount"
        - "type"
        - "recurring_interval"
      description: "A pay-what-you-want recurring price for a product, i.e. a subscription."
    "ProductPriceRecurringFixed":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the price."
        "amount_type":
          type: "string"
          title: "Amount Type"
          enum:
            - "fixed"
          const: "fixed"
        "is_archived":
          type: "boolean"
          title: "Is Archived"
          description: "Whether the price is archived and no longer available."
        "product_id":
          type: "string"
          title: "Product Id"
          format: "uuid4"
          description: "The ID of the product owning the price."
        "price_currency":
          type: "string"
          title: "Price Currency"
          description: "The currency."
        "price_amount":
          type: "integer"
          title: "Price Amount"
          description: "The price in cents."
        "type":
          type: "string"
          title: "Type"
          enum:
            - "recurring"
          description: "The type of the price."
          const: "recurring"
        "recurring_interval": {"$ref": "#/components/schemas/SubscriptionRecurringInterval", "description": "The recurring interval of the price."}
      title: "ProductPriceRecurringFixed"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "amount_type"
        - "is_archived"
        - "product_id"
        - "price_currency"
        - "price_amount"
        - "type"
        - "recurring_interval"
      description: "A recurring price for a product, i.e. a subscription."
    "ProductPriceRecurringFixedCreate":
      type: "object"
      properties:
        "type":
          type: "string"
          title: "Type"
          enum:
            - "recurring"
          const: "recurring"
        "amount_type":
          type: "string"
          title: "Amount Type"
          enum:
            - "fixed"
          const: "fixed"
        "price_amount":
          type: "integer"
          title: "Price Amount"
          maximum: 99999999
          minimum: 50
          description: "The price in cents."
        "price_currency":
          type: "string"
          title: "Price Currency"
          pattern: "usd"
          description: "The currency. Currently, only `usd` is supported."
          default: "usd"
        "recurring_interval": {"$ref": "#/components/schemas/SubscriptionRecurringInterval", "description": "The recurring interval of the price."}
      title: "ProductPriceRecurringFixedCreate"
      required:
        - "type"
        - "amount_type"
        - "price_amount"
        - "recurring_interval"
      description: "Schema to create a recurring product price, i.e. a subscription."
    "ProductPriceRecurringFree":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the price."
        "amount_type":
          type: "string"
          title: "Amount Type"
          enum:
            - "free"
          const: "free"
        "is_archived":
          type: "boolean"
          title: "Is Archived"
          description: "Whether the price is archived and no longer available."
        "product_id":
          type: "string"
          title: "Product Id"
          format: "uuid4"
          description: "The ID of the product owning the price."
        "type":
          type: "string"
          title: "Type"
          enum:
            - "recurring"
          description: "The type of the price."
          const: "recurring"
        "recurring_interval": {"$ref": "#/components/schemas/SubscriptionRecurringInterval", "description": "The recurring interval of the price."}
      title: "ProductPriceRecurringFree"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "amount_type"
        - "is_archived"
        - "product_id"
        - "type"
        - "recurring_interval"
      description: "A free recurring price for a product, i.e. a subscription."
    "ProductPriceRecurringFreeCreate":
      type: "object"
      properties:
        "type":
          type: "string"
          title: "Type"
          enum:
            - "recurring"
          const: "recurring"
        "amount_type":
          type: "string"
          title: "Amount Type"
          enum:
            - "free"
          const: "free"
        "recurring_interval": {"$ref": "#/components/schemas/SubscriptionRecurringInterval", "description": "The recurring interval of the price."}
      title: "ProductPriceRecurringFreeCreate"
      required:
        - "type"
        - "amount_type"
        - "recurring_interval"
      description: "Schema to create a free recurring product price, i.e. a subscription."
    "ProductPriceType":
      type: "string"
      title: "ProductPriceType"
      enum:
        - "one_time"
        - "recurring"
    "ProductRecurringCreate":
      type: "object"
      properties:
        "metadata":
          type: "object"
          title: "Metadata"
          maxProperties: 50
          additionalProperties:
            anyOf:
              - type: "string"
                maxLength: 500
                minLength: 1
              - type: "integer"
              - type: "boolean"
          description: "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
        "name":
          type: "string"
          title: "Name"
          minLength: 3
          description: "The name of the product."
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
          description: "The description of the product."
        "prices":
          anyOf:
            - type: "array"
              items: {"$ref": "#/components/schemas/ProductPriceRecurringFixedCreate"}
              title: "ProductPriceRecurringFixedCreate"
              maxItems: 2
              minItems: 1
              description: "List of recurring prices. Only one price per interval (one monthly and one yearly) is allowed."
            - type: "array"
              items: {"$ref": "#/components/schemas/ProductPriceRecurringFreeCreate"}
              title: "ProductPriceRecurringFreeCreate"
              maxItems: 1
              minItems: 1
              description: "List with a single free recurring price."
          title: "Prices"
          description: "List of available prices for this product."
        "medias":
          anyOf:
            - type: "array"
              items:
                type: "string"
                format: "uuid4"
            - type: "null"
          title: "Medias"
          description: "List of file IDs. Each one must be on the same organization as the product, of type `product_media` and correctly uploaded."
        "attached_custom_fields":
          type: "array"
          items: {"$ref": "#/components/schemas/AttachedCustomFieldCreate"}
          title: "Attached Custom Fields"
          description: "List of custom fields to attach."
        "organization_id":
          anyOf:
            - type: "string"
              format: "uuid4"
              description: "The organization ID."
              x-polar-selector-widget: {"displayProperty": "name", "resourceName": "Organization", "resourceRoot": "/v1/organizations"}
            - type: "null"
          title: "Organization Id"
          description: "The ID of the organization owning the product. **Required unless you use an organization token.**"
      title: "ProductRecurringCreate"
      required:
        - "name"
        - "prices"
      description: "Schema to create a recurring product, i.e. a subscription."
    "ProductSortProperty":
      type: "string"
      title: "ProductSortProperty"
      enum:
        - "created_at"
        - "-created_at"
        - "name"
        - "-name"
        - "price_type"
        - "-price_type"
        - "price_amount_type"
        - "-price_amount_type"
        - "price_amount"
        - "-price_amount"
    "ProductUpdate":
      type: "object"
      properties:
        "metadata":
          anyOf:
            - type: "object"
              maxProperties: 50
              additionalProperties:
                anyOf:
                  - type: "string"
                    maxLength: 500
                    minLength: 1
                  - type: "integer"
                  - type: "boolean"
              description: "Key-value object allowing you to store additional information.\n\nThe key must be a string with a maximum length of **40 characters**.\nThe value must be either:\n\n* A string with a maximum length of **500 characters**\n* An integer\n* A boolean\n\nYou can store up to **50 key-value pairs**."
            - type: "null"
          title: "Metadata"
        "name":
          anyOf:
            - type: "string"
              minLength: 3
              description: "The name of the product."
            - type: "null"
          title: "Name"
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
          description: "The description of the product."
        "is_archived":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Is Archived"
          description: "Whether the product is archived. If `true`, the product won't be available for purchase anymore. Existing customers will still have access to their benefits, and subscriptions will continue normally."
        "prices":
          anyOf:
            - type: "array"
              items:
                anyOf:
                  - {"$ref": "#/components/schemas/ExistingProductPrice"}
                  - {"$ref": "#/components/schemas/ProductPriceRecurringFixedCreate"}
                  - {"$ref": "#/components/schemas/ProductPriceRecurringFreeCreate"}
                  - {"$ref": "#/components/schemas/ProductPriceOneTimeFixedCreate"}
                  - {"$ref": "#/components/schemas/ProductPriceOneTimeCustomCreate"}
                  - {"$ref": "#/components/schemas/ProductPriceOneTimeFreeCreate"}
            - type: "null"
          title: "Prices"
          description: "List of available prices for this product. If you want to keep existing prices, include them in the list as an `ExistingProductPrice` object."
        "medias":
          anyOf:
            - type: "array"
              items:
                type: "string"
                format: "uuid4"
            - type: "null"
          title: "Medias"
          description: "List of file IDs. Each one must be on the same organization as the product, of type `product_media` and correctly uploaded."
        "attached_custom_fields":
          anyOf:
            - type: "array"
              items: {"$ref": "#/components/schemas/AttachedCustomFieldCreate"}
              description: "List of custom fields to attach."
            - type: "null"
          title: "Attached Custom Fields"
      title: "ProductUpdate"
      description: "Schema to update a product."
    "Reactions":
      type: "object"
      properties:
        "total_count":
          type: "integer"
          title: "Total Count"
        "plus_one":
          type: "integer"
          title: "Plus One"
        "minus_one":
          type: "integer"
          title: "Minus One"
        "laugh":
          type: "integer"
          title: "Laugh"
        "hooray":
          type: "integer"
          title: "Hooray"
        "confused":
          type: "integer"
          title: "Confused"
        "heart":
          type: "integer"
          title: "Heart"
        "rocket":
          type: "integer"
          title: "Rocket"
        "eyes":
          type: "integer"
          title: "Eyes"
      title: "Reactions"
      required:
        - "total_count"
        - "plus_one"
        - "minus_one"
        - "laugh"
        - "hooray"
        - "confused"
        - "heart"
        - "rocket"
        - "eyes"
    "Repository":
      type: "object"
      properties:
        "id":
          type: "string"
          title: "Id"
          format: "uuid"
        "platform": {"$ref": "#/components/schemas/Platforms"}
        "is_private":
          type: "boolean"
          title: "Is Private"
        "name":
          type: "string"
          examples:
            - "MyOrg"
          title: "Name"
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
        "stars":
          anyOf:
            - type: "integer"
            - type: "null"
          examples:
            - 1337
          title: "Stars"
        "license":
          anyOf:
            - type: "string"
            - type: "null"
          title: "License"
        "homepage":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Homepage"
        "profile_settings":
          anyOf:
            - {"$ref": "#/components/schemas/RepositoryProfileSettings"}
            - type: "null"
          description: "Settings for the repository profile"
        "organization": {"$ref": "#/components/schemas/ExternalOrganization"}
        "internal_organization":
          anyOf:
            - {"$ref": "#/components/schemas/Organization"}
            - type: "null"
      title: "Repository"
      required:
        - "id"
        - "platform"
        - "is_private"
        - "name"
        - "description"
        - "stars"
        - "license"
        - "homepage"
        - "profile_settings"
        - "organization"
        - "internal_organization"
    "RepositoryProfileSettings":
      type: "object"
      properties:
        "description":
          anyOf:
            - type: "string"
              maxLength: 240
            - type: "null"
          title: "Description"
          description: "A description of the repository"
        "cover_image_url":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Cover Image Url"
          description: "A URL to a cover image"
        "featured_organizations":
          anyOf:
            - type: "array"
              items:
                type: "string"
                format: "uuid4"
            - type: "null"
          title: "Featured Organizations"
          description: "A list of featured organizations"
        "highlighted_subscription_tiers":
          anyOf:
            - type: "array"
              items:
                type: "string"
                format: "uuid4"
            - type: "null"
          title: "Highlighted Subscription Tiers"
          description: "A list of highlighted subscription tiers"
        "links":
          anyOf:
            - type: "array"
              items:
                type: "string"
                maxLength: 2083
                minLength: 1
                format: "uri"
            - type: "null"
          title: "Links"
          description: "A list of links related to the repository"
      title: "RepositoryProfileSettings"
    "RepositoryProfileSettingsUpdate":
      type: "object"
      properties:
        "set_description":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Set Description"
        "description":
          anyOf:
            - type: "string"
              maxLength: 240
            - type: "null"
          title: "Description"
        "set_cover_image_url":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Set Cover Image Url"
        "cover_image_url":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Cover Image Url"
        "featured_organizations":
          anyOf:
            - type: "array"
              items:
                type: "string"
                format: "uuid4"
            - type: "null"
          title: "Featured Organizations"
        "highlighted_subscription_tiers":
          anyOf:
            - type: "array"
              items:
                type: "string"
                format: "uuid4"
              maxItems: 3
            - type: "null"
          title: "Highlighted Subscription Tiers"
        "links":
          anyOf:
            - type: "array"
              items:
                type: "string"
                maxLength: 2083
                minLength: 1
                format: "uri"
            - type: "null"
          title: "Links"
      title: "RepositoryProfileSettingsUpdate"
    "RepositorySortProperty":
      type: "string"
      title: "RepositorySortProperty"
      enum:
        - "created_at"
        - "-created_at"
        - "name"
        - "-name"
        - "stars"
        - "-stars"
    "RepositoryUpdate":
      type: "object"
      properties:
        "profile_settings":
          anyOf:
            - {"$ref": "#/components/schemas/RepositoryProfileSettingsUpdate"}
            - type: "null"
      title: "RepositoryUpdate"
    "ResourceNotFound":
      type: "object"
      properties:
        "error":
          type: "string"
          title: "Error"
          enum:
            - "ResourceNotFound"
          const: "ResourceNotFound"
        "detail":
          type: "string"
          title: "Detail"
      title: "ResourceNotFound"
      required:
        - "error"
        - "detail"
    "RevokeTokenResponse":
      type: "object"
      title: "RevokeTokenResponse"
    "S3DownloadURL":
      type: "object"
      properties:
        "url":
          type: "string"
          title: "Url"
        "headers":
          type: "object"
          title: "Headers"
          additionalProperties:
            type: "string"
          default: {}
        "expires_at":
          type: "string"
          title: "Expires At"
          format: "date-time"
      title: "S3DownloadURL"
      required:
        - "url"
        - "expires_at"
    "S3FileCreateMultipart":
      type: "object"
      properties:
        "parts":
          type: "array"
          items: {"$ref": "#/components/schemas/S3FileCreatePart"}
          title: "Parts"
      title: "S3FileCreateMultipart"
      required:
        - "parts"
    "S3FileCreatePart":
      type: "object"
      properties:
        "number":
          type: "integer"
          title: "Number"
        "chunk_start":
          type: "integer"
          title: "Chunk Start"
        "chunk_end":
          type: "integer"
          title: "Chunk End"
        "checksum_sha256_base64":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Checksum Sha256 Base64"
      title: "S3FileCreatePart"
      required:
        - "number"
        - "chunk_start"
        - "chunk_end"
    "S3FileUploadCompletedPart":
      type: "object"
      properties:
        "number":
          type: "integer"
          title: "Number"
        "checksum_etag":
          type: "string"
          title: "Checksum Etag"
        "checksum_sha256_base64":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Checksum Sha256 Base64"
      title: "S3FileUploadCompletedPart"
      required:
        - "number"
        - "checksum_etag"
        - "checksum_sha256_base64"
    "S3FileUploadMultipart":
      type: "object"
      properties:
        "id":
          type: "string"
          title: "Id"
        "path":
          type: "string"
          title: "Path"
        "parts":
          type: "array"
          items: {"$ref": "#/components/schemas/S3FileUploadPart"}
          title: "Parts"
      title: "S3FileUploadMultipart"
      required:
        - "id"
        - "path"
        - "parts"
    "S3FileUploadPart":
      type: "object"
      properties:
        "number":
          type: "integer"
          title: "Number"
        "chunk_start":
          type: "integer"
          title: "Chunk Start"
        "chunk_end":
          type: "integer"
          title: "Chunk End"
        "checksum_sha256_base64":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Checksum Sha256 Base64"
        "url":
          type: "string"
          title: "Url"
        "expires_at":
          type: "string"
          title: "Expires At"
          format: "date-time"
        "headers":
          type: "object"
          title: "Headers"
          additionalProperties:
            type: "string"
          default: {}
      title: "S3FileUploadPart"
      required:
        - "number"
        - "chunk_start"
        - "chunk_end"
        - "url"
        - "expires_at"
    "Scope":
      type: "string"
      title: "Scope"
      enum:
        - "openid"
        - "profile"
        - "email"
        - "user:read"
        - "admin"
        - "web_default"
        - "organizations:read"
        - "organizations:write"
        - "custom_fields:read"
        - "custom_fields:write"
        - "discounts:read"
        - "discounts:write"
        - "checkout_links:read"
        - "checkout_links:write"
        - "checkouts:read"
        - "checkouts:write"
        - "products:read"
        - "products:write"
        - "benefits:read"
        - "benefits:write"
        - "files:read"
        - "files:write"
        - "subscriptions:read"
        - "subscriptions:write"
        - "customers:read"
        - "customers:write"
        - "customer_sessions:write"
        - "orders:read"
        - "metrics:read"
        - "webhooks:read"
        - "webhooks:write"
        - "external_organizations:read"
        - "license_keys:read"
        - "license_keys:write"
        - "repositories:read"
        - "repositories:write"
        - "issues:read"
        - "issues:write"
        - "customer_portal:read"
        - "customer_portal:write"
    "State":
      type: "string"
      title: "State"
      enum:
        - "open"
        - "closed"
    "SubType":
      type: "string"
      title: "SubType"
      enum:
        - "user"
        - "organization"
    "Subscription":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the object."
        "amount":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Amount"
        "currency":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Currency"
        "recurring_interval": {"$ref": "#/components/schemas/SubscriptionRecurringInterval"}
        "status": {"$ref": "#/components/schemas/SubscriptionStatus"}
        "current_period_start":
          type: "string"
          title: "Current Period Start"
          format: "date-time"
        "current_period_end":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Current Period End"
        "cancel_at_period_end":
          type: "boolean"
          title: "Cancel At Period End"
        "started_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Started At"
        "ended_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Ended At"
        "customer_id":
          type: "string"
          title: "Customer Id"
          format: "uuid4"
        "product_id":
          type: "string"
          title: "Product Id"
          format: "uuid4"
        "price_id":
          type: "string"
          title: "Price Id"
          format: "uuid4"
        "discount_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Discount Id"
        "checkout_id":
          anyOf:
            - type: "string"
              format: "uuid4"
            - type: "null"
          title: "Checkout Id"
        "metadata":
          type: "object"
          title: "Metadata"
          additionalProperties:
            anyOf:
              - type: "string"
              - type: "integer"
              - type: "boolean"
        "custom_field_data":
          type: "object"
          title: "Custom Field Data"
          description: "Key-value object storing custom field values."
        "customer": {"$ref": "#/components/schemas/SubscriptionCustomer"}
        "user_id":
          type: "string"
          title: "User Id"
          format: "uuid4"
          deprecated: true
        "user": {"$ref": "#/components/schemas/SubscriptionUser", "deprecated": true}
        "product": {"$ref": "#/components/schemas/Product"}
        "price": {"$ref": "#/components/schemas/ProductPriceRecurring"}
        "discount":
          anyOf:
            - oneOf:
                - {"$ref": "#/components/schemas/DiscountFixedOnceForeverDurationBase"}
                - {"$ref": "#/components/schemas/DiscountFixedRepeatDurationBase"}
                - {"$ref": "#/components/schemas/DiscountPercentageOnceForeverDurationBase"}
                - {"$ref": "#/components/schemas/DiscountPercentageRepeatDurationBase"}
              title: "SubscriptionDiscount"
            - type: "null"
          title: "Discount"
      title: "Subscription"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "amount"
        - "currency"
        - "recurring_interval"
        - "status"
        - "current_period_start"
        - "current_period_end"
        - "cancel_at_period_end"
        - "started_at"
        - "ended_at"
        - "customer_id"
        - "product_id"
        - "price_id"
        - "discount_id"
        - "checkout_id"
        - "metadata"
        - "customer"
        - "user_id"
        - "user"
        - "product"
        - "price"
        - "discount"
    "SubscriptionCustomer":
      type: "object"
      properties:
        "created_at":
          type: "string"
          title: "Created At"
          format: "date-time"
          description: "Creation timestamp of the object."
        "modified_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Modified At"
          description: "Last modification timestamp of the object."
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
          description: "The ID of the object."
        "metadata":
          type: "object"
          title: "Metadata"
          additionalProperties:
            anyOf:
              - type: "string"
              - type: "integer"
              - type: "boolean"
        "email":
          type: "string"
          title: "Email"
        "email_verified":
          type: "boolean"
          title: "Email Verified"
        "name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Name"
        "billing_address":
          anyOf:
            - {"$ref": "#/components/schemas/Address"}
            - type: "null"
        "tax_id":
          anyOf:
            - type: "array"
              prefixItems:
                - type: "string"
                - {"$ref": "#/components/schemas/TaxIDFormat"}
              maxItems: 2
              minItems: 2
            - type: "null"
          title: "Tax Id"
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
        "avatar_url":
          type: "string"
          title: "Avatar Url"
          readOnly: true
      title: "SubscriptionCustomer"
      required:
        - "created_at"
        - "modified_at"
        - "id"
        - "metadata"
        - "email"
        - "email_verified"
        - "name"
        - "billing_address"
        - "tax_id"
        - "organization_id"
        - "avatar_url"
    "SubscriptionRecurringInterval":
      type: "string"
      title: "SubscriptionRecurringInterval"
      enum:
        - "month"
        - "year"
    "SubscriptionSortProperty":
      type: "string"
      title: "SubscriptionSortProperty"
      enum:
        - "customer"
        - "-customer"
        - "status"
        - "-status"
        - "started_at"
        - "-started_at"
        - "current_period_end"
        - "-current_period_end"
        - "amount"
        - "-amount"
        - "product"
        - "-product"
        - "discount"
        - "-discount"
    "SubscriptionStatus":
      type: "string"
      title: "SubscriptionStatus"
      enum:
        - "incomplete"
        - "incomplete_expired"
        - "trialing"
        - "active"
        - "past_due"
        - "canceled"
        - "unpaid"
    "SubscriptionUser":
      type: "object"
      properties:
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
        "email":
          type: "string"
          title: "Email"
        "public_name":
          type: "string"
          title: "Public Name"
        "avatar_url":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Avatar Url"
        "github_username":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Github Username"
      title: "SubscriptionUser"
      required:
        - "id"
        - "email"
        - "public_name"
    "TaxIDFormat":
      type: "string"
      title: "TaxIDFormat"
      enum:
        - "ad_nrt"
        - "ae_trn"
        - "ar_cuit"
        - "au_abn"
        - "au_arn"
        - "bg_uic"
        - "bh_vat"
        - "bo_tin"
        - "br_cnpj"
        - "br_cpf"
        - "ca_bn"
        - "ca_gst_hst"
        - "ca_pst_bc"
        - "ca_pst_mb"
        - "ca_pst_sk"
        - "ca_qst"
        - "ch_uid"
        - "ch_vat"
        - "cl_tin"
        - "cn_tin"
        - "co_nit"
        - "cr_tin"
        - "de_stn"
        - "do_rcn"
        - "ec_ruc"
        - "eg_tin"
        - "es_cif"
        - "eu_oss_vat"
        - "eu_vat"
        - "gb_vat"
        - "ge_vat"
        - "hk_br"
        - "hr_oib"
        - "hu_tin"
        - "id_npwp"
        - "il_vat"
        - "in_gst"
        - "is_vat"
        - "jp_cn"
        - "jp_rn"
        - "jp_trn"
        - "ke_pin"
        - "kr_brn"
        - "kz_bin"
        - "li_uid"
        - "mx_rfc"
        - "my_frp"
        - "my_itn"
        - "my_sst"
        - "ng_tin"
        - "no_vat"
        - "no_voec"
        - "nz_gst"
        - "om_vat"
        - "pe_ruc"
        - "ph_tin"
        - "ro_tin"
        - "rs_pib"
        - "ru_inn"
        - "ru_kpp"
        - "sa_vat"
        - "sg_gst"
        - "sg_uen"
        - "si_tin"
        - "sv_nit"
        - "th_vat"
        - "tr_tin"
        - "tw_vat"
        - "ua_vat"
        - "us_ein"
        - "uy_ruc"
        - "ve_rif"
        - "vn_tin"
        - "za_vat"
      description: "List of supported tax ID formats.\n\nRef: https://docs.stripe.com/billing/customer/tax-ids#supported-tax-id"
    "TokenResponse":
      type: "object"
      properties:
        "access_token":
          type: "string"
          title: "Access Token"
        "token_type":
          type: "string"
          title: "Token Type"
          enum:
            - "Bearer"
          const: "Bearer"
        "expires_in":
          type: "integer"
          title: "Expires In"
        "refresh_token":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Refresh Token"
        "scope":
          type: "string"
          title: "Scope"
        "id_token":
          type: "string"
          title: "Id Token"
      title: "TokenResponse"
      required:
        - "access_token"
        - "token_type"
        - "expires_in"
        - "refresh_token"
        - "scope"
        - "id_token"
    "Unauthorized":
      type: "object"
      properties:
        "error":
          type: "string"
          title: "Error"
          enum:
            - "Unauthorized"
          const: "Unauthorized"
        "detail":
          type: "string"
          title: "Detail"
      title: "Unauthorized"
      required:
        - "error"
        - "detail"
    "UserInfoOrganization":
      type: "object"
      properties:
        "sub":
          type: "string"
          title: "Sub"
        "name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Name"
      title: "UserInfoOrganization"
      required:
        - "sub"
    "UserInfoUser":
      type: "object"
      properties:
        "sub":
          type: "string"
          title: "Sub"
        "name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Name"
        "email":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Email"
        "email_verified":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Email Verified"
      title: "UserInfoUser"
      required:
        - "sub"
    "ValidatedLicenseKey":
      type: "object"
      properties:
        "id":
          type: "string"
          title: "Id"
          format: "uuid4"
        "organization_id":
          type: "string"
          title: "Organization Id"
          format: "uuid4"
        "user_id":
          type: "string"
          title: "User Id"
          format: "uuid4"
          deprecated: true
        "customer_id":
          type: "string"
          title: "Customer Id"
          format: "uuid4"
        "user": {"$ref": "#/components/schemas/LicenseKeyUser", "deprecated": true}
        "customer": {"$ref": "#/components/schemas/LicenseKeyCustomer"}
        "benefit_id":
          type: "string"
          title: "Benefit Id"
          format: "uuid4"
          description: "The benefit ID."
          x-polar-selector-widget: {"displayProperty": "description", "resourceName": "Benefit", "resourceRoot": "/v1/benefits"}
        "key":
          type: "string"
          title: "Key"
        "display_key":
          type: "string"
          title: "Display Key"
        "status": {"$ref": "#/components/schemas/LicenseKeyStatus"}
        "limit_activations":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Limit Activations"
        "usage":
          type: "integer"
          title: "Usage"
        "limit_usage":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Limit Usage"
        "validations":
          type: "integer"
          title: "Validations"
        "last_validated_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Last Validated At"
        "expires_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Expires At"
        "activation":
          anyOf:
            - {"$ref": "#/components/schemas/LicenseKeyActivationBase"}
            - type: "null"
      title: "ValidatedLicenseKey"
      required:
        - "id"
        - "organization_id"
        - "user_id"
        - "customer_id"
        - "user"
        - "customer"
        - "benefit_id"
        - "key"
        - "display_key"
        - "status"
        - "limit_activations"
        - "usage"
        - "limit_usage"
        - "validations"
        - "last_validated_at"
        - "expires_at"
    "ValidationError":
      type: "object"
      properties:
        "loc":
          type: "array"
          items:
            anyOf:
              - type: "string"
              - type: "integer"
          title: "Location"
        "msg":
          type: "string"
          title: "Message"
        "type":
          type: "string"
          title: "Error Type"
      title: "ValidationError"
      required:
        - "loc"
        - "msg"
        - "type"
    "WebhookBenefitCreatedPayload":
      type: "object"
      properties:
        "type":
          type: "string"
          title: "Type"
          enum:
            - "benefit.created"
          const: "benefit.created"
        "data": {"$ref": "#/components/schemas/Benefit", "title": "Benefit"}
      title: "WebhookBenefitCreatedPayload"
      required:
        - "type"
        - "data"
      description: "Sent when a new benefit is created.\n\n**Discord & Slack support:** Basic"
    "WebhookBenefitGrantCreatedPayload":
      type: "object"
      properties:
        "type":
          type: "string"
          title: "Type"
          enum:
            - "benefit_grant.created"
          const: "benefit_grant.created"
        "data": {"$ref": "#/components/schemas/BenefitGrantWebhook"}
      title: "WebhookBenefitGrantCreatedPayload"
      required:
        - "type"
        - "data"
      description: "Sent when a new benefit grant is created.\n\n**Discord & Slack support:** Basic"
    "WebhookBenefitGrantRevokedPayload":
      type: "object"
      properties:
        "type":
          type: "string"
          title: "Type"
          enum:
            - "benefit_grant.revoked"
          const: "benefit_grant.revoked"
        "data": {"$ref": "#/components/schemas/BenefitGrantWebhook"}
      title: "WebhookBenefitGrantRevokedPayload"
      required:
        - "type"
        - "data"
      description: "Sent when a new benefit grant is revoked.\n\n**Discord & Slack support:** Basic"
    "WebhookBenefitGrantUpdatedPayload":
      type: "object"
      properties:
        "type":
          type: "string"
          title: "Type"
          enum:
            - "benefit_grant.updated"
          const: "benefit_grant.updated"
        "data": {"$ref": "#/components/schemas/BenefitGrantWebhook"}
      title: "WebhookBenefitGrantUpdatedPayload"
      required:
        - "type"
        - "data"
      description: "Sent when a new benefit grant is updated.\n\n**Discord & Slack support:** Basic"
    "WebhookBenefitUpdatedPayload":
      type: "object"
      properties:
        "type":
          type: "string"
          title: "Type"
          enum:
            - "benefit.updated"
          const: "benefit.updated"
        "data": {"$ref": "#/components/schemas/Benefit", "title": "Benefit"}
      title: "WebhookBenefitUpdatedPayload"
      required:
        - "type"
        - "data"
      description: "Sent when a benefit is updated.\n\n**Discord & Slack support:** Basic"
    "WebhookCheckoutCreatedPayload":
      type: "object"
      properties:
        "type":
          type: "string"
          title: "Type"
          enum:
            - "checkout.created"
          const: "checkout.created"
        "data": {"$ref": "#/components/schemas/Checkout"}
      title: "WebhookCheckoutCreatedPayload"
      required:
        - "type"
        - "data"
      description: "Sent when a new checkout is created.\n\n**Discord & Slack support:** Basic"
    "WebhookCheckoutUpdatedPayload":
      type: "object"
      properties:
        "type":
          type: "string"
          title: "Type"
          enum:
            - "checkout.updated"
          const: "checkout.updated"
        "data": {"$ref": "#/components/schemas/Checkout"}
      title: "WebhookCheckoutUpdatedPayload"
      required:
        - "type"
        - "data"
      description: "Sent when a checkout is updated.\n\n**Discord & Slack support:** Basic"
    "WebhookOrderCreatedPayload":
      type: "object"
      properties:
        "type":
          type: "string"
          title: "Type"
          enum:
            - "order.created"
          const: "order.created"
        "data": {"$ref": "#/components/schemas/Order"}
      title: "WebhookOrderCreatedPayload"
      required:
        - "type"
        - "data"
      description: "Sent when a new order is created.\n\n**Discord & Slack support:** Full"
    "WebhookOrganizationUpdatedPayload":
      type: "object"
      properties:
        "type":
          type: "string"
          title: "Type"
          enum:
            - "organization.updated"
          const: "organization.updated"
        "data": {"$ref": "#/components/schemas/Organization"}
      title: "WebhookOrganizationUpdatedPayload"
      required:
        - "type"
        - "data"
      description: "Sent when a organization is updated.\n\n**Discord & Slack support:** Basic"
    "WebhookPledgeCreatedPayload":
      type: "object"
      properties:
        "type":
          type: "string"
          title: "Type"
          enum:
            - "pledge.created"
          const: "pledge.created"
        "data": {"$ref": "#/components/schemas/Pledge"}
      title: "WebhookPledgeCreatedPayload"
      required:
        - "type"
        - "data"
      description: "Sent when a new pledge is created. Note that this does mean that the pledge has been paid yet.\n\n**Discord & Slack support:** Full"
    "WebhookPledgeUpdatedPayload":
      type: "object"
      properties:
        "type":
          type: "string"
          title: "Type"
          enum:
            - "pledge.updated"
          const: "pledge.updated"
        "data": {"$ref": "#/components/schemas/Pledge"}
      title: "WebhookPledgeUpdatedPayload"
      required:
        - "type"
        - "data"
      description: "Sent when a pledge is updated.\n\n**Discord & Slack support:** Basic"
    "WebhookProductCreatedPayload":
      type: "object"
      properties:
        "type":
          type: "string"
          title: "Type"
          enum:
            - "product.created"
          const: "product.created"
        "data": {"$ref": "#/components/schemas/Product"}
      title: "WebhookProductCreatedPayload"
      required:
        - "type"
        - "data"
      description: "Sent when a new product is created.\n\n**Discord & Slack support:** Basic"
    "WebhookProductUpdatedPayload":
      type: "object"
      properties:
        "type":
          type: "string"
          title: "Type"
          enum:
            - "product.updated"
          const: "product.updated"
        "data": {"$ref": "#/components/schemas/Product"}
      title: "WebhookProductUpdatedPayload"
      required:
        - "type"
        - "data"
      description: "Sent when a product is updated.\n\n**Discord & Slack support:** Basic"
    "WebhookSubscriptionActivePayload":
      type: "object"
      properties:
        "type":
          type: "string"
          title: "Type"
          enum:
            - "subscription.active"
          const: "subscription.active"
        "data": {"$ref": "#/components/schemas/Subscription"}
      title: "WebhookSubscriptionActivePayload"
      required:
        - "type"
        - "data"
      description: "Sent when a subscription becomes active,\nwhether because it's a new paid subscription or because payment was recovered.\n\n**Discord & Slack support:** Full"
    "WebhookSubscriptionCanceledPayload":
      type: "object"
      properties:
        "type":
          type: "string"
          title: "Type"
          enum:
            - "subscription.canceled"
          const: "subscription.canceled"
        "data": {"$ref": "#/components/schemas/Subscription"}
      title: "WebhookSubscriptionCanceledPayload"
      required:
        - "type"
        - "data"
      description: "Sent when a subscription is canceled by the user.\nThey might still have access until the end of the current period.\n\n**Discord & Slack support:** Full"
    "WebhookSubscriptionCreatedPayload":
      type: "object"
      properties:
        "type":
          type: "string"
          title: "Type"
          enum:
            - "subscription.created"
          const: "subscription.created"
        "data": {"$ref": "#/components/schemas/Subscription"}
      title: "WebhookSubscriptionCreatedPayload"
      required:
        - "type"
        - "data"
      description: "Sent when a new subscription is created.\n\n**Discord & Slack support:** Full"
    "WebhookSubscriptionRevokedPayload":
      type: "object"
      properties:
        "type":
          type: "string"
          title: "Type"
          enum:
            - "subscription.revoked"
          const: "subscription.revoked"
        "data": {"$ref": "#/components/schemas/Subscription"}
      title: "WebhookSubscriptionRevokedPayload"
      required:
        - "type"
        - "data"
      description: "Sent when a subscription is revoked, the user looses access immediately.\nHappens when the subscription is canceled, or payment is past due.\n\n**Discord & Slack support:** Full"
    "WebhookSubscriptionUpdatedPayload":
      type: "object"
      properties:
        "type":
          type: "string"
          title: "Type"
          enum:
            - "subscription.updated"
          const: "subscription.updated"
        "data": {"$ref": "#/components/schemas/Subscription"}
      title: "WebhookSubscriptionUpdatedPayload"
      required:
        - "type"
        - "data"
      description: "Sent when a subscription is updated. This event fires for all changes to the subscription, including renewals.\n\nIf you want more specific events, you can listen to `subscription.active`, `subscription.canceled`, and `subscription.revoked`.\n\nTo listen specifically for renewals, you can listen to `order.created` events and check the `billing_reason` field.\n\n**Discord & Slack support:** On cancellation and revocation. Renewals are skipped."
  securitySchemes:
    "oidc":
      type: "openIdConnect"
      openIdConnectUrl: "/.well-known/openid-configuration"
    "pat":
      type: "http"
      description: "You can generate a **Personal Access Token** from your [settings](https://polar.sh/settings)."
      scheme: "bearer"
    "customer_session":
      type: "http"
      scheme: "bearer"
tags:
  - name: "private"
    description: "Endpoints that should appear in the schema only in development to generate our internal JS SDK."
  - name: "documented"
    description: "Endpoints shown and documented in the Polar API documentation."
  - name: "featured"
    description: "Endpoints featured in the Polar API documentation for their interest in common use-cases."
  - name: "issue_funding"
    description: "Endpoints related to issue funding and rewards in the Polar API."
webhooks:
  "checkout.created":
    post:
      summary: "checkout.created"
      description: "Sent when a new checkout is created.\n\n**Discord & Slack support:** Basic"
      operationId: "_endpointcheckout_created_post"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/WebhookCheckoutCreatedPayload"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "checkout.updated":
    post:
      summary: "checkout.updated"
      description: "Sent when a checkout is updated.\n\n**Discord & Slack support:** Basic"
      operationId: "_endpointcheckout_updated_post"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/WebhookCheckoutUpdatedPayload"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "order.created":
    post:
      summary: "order.created"
      description: "Sent when a new order is created.\n\n**Discord & Slack support:** Full"
      operationId: "_endpointorder_created_post"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/WebhookOrderCreatedPayload"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "subscription.created":
    post:
      summary: "subscription.created"
      description: "Sent when a new subscription is created.\n\n**Discord & Slack support:** Full"
      operationId: "_endpointsubscription_created_post"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/WebhookSubscriptionCreatedPayload"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "subscription.updated":
    post:
      summary: "subscription.updated"
      description: "Sent when a subscription is updated. This event fires for all changes to the subscription, including renewals.\n\nIf you want more specific events, you can listen to `subscription.active`, `subscription.canceled`, and `subscription.revoked`.\n\nTo listen specifically for renewals, you can listen to `order.created` events and check the `billing_reason` field.\n\n**Discord & Slack support:** On cancellation and revocation. Renewals are skipped."
      operationId: "_endpointsubscription_updated_post"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/WebhookSubscriptionUpdatedPayload"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "subscription.active":
    post:
      summary: "subscription.active"
      description: "Sent when a subscription becomes active,\nwhether because it's a new paid subscription or because payment was recovered.\n\n**Discord & Slack support:** Full"
      operationId: "_endpointsubscription_active_post"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/WebhookSubscriptionActivePayload"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "subscription.canceled":
    post:
      summary: "subscription.canceled"
      description: "Sent when a subscription is canceled by the user.\nThey might still have access until the end of the current period.\n\n**Discord & Slack support:** Full"
      operationId: "_endpointsubscription_canceled_post"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/WebhookSubscriptionCanceledPayload"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "subscription.revoked":
    post:
      summary: "subscription.revoked"
      description: "Sent when a subscription is revoked, the user looses access immediately.\nHappens when the subscription is canceled, or payment is past due.\n\n**Discord & Slack support:** Full"
      operationId: "_endpointsubscription_revoked_post"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/WebhookSubscriptionRevokedPayload"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "product.created":
    post:
      summary: "product.created"
      description: "Sent when a new product is created.\n\n**Discord & Slack support:** Basic"
      operationId: "_endpointproduct_created_post"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/WebhookProductCreatedPayload"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "product.updated":
    post:
      summary: "product.updated"
      description: "Sent when a product is updated.\n\n**Discord & Slack support:** Basic"
      operationId: "_endpointproduct_updated_post"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/WebhookProductUpdatedPayload"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "pledge.created":
    post:
      summary: "pledge.created"
      description: "Sent when a new pledge is created. Note that this does mean that the pledge has been paid yet.\n\n**Discord & Slack support:** Full"
      operationId: "_endpointpledge_created_post"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/WebhookPledgeCreatedPayload"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "pledge.updated":
    post:
      summary: "pledge.updated"
      description: "Sent when a pledge is updated.\n\n**Discord & Slack support:** Basic"
      operationId: "_endpointpledge_updated_post"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/WebhookPledgeUpdatedPayload"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "organization.updated":
    post:
      summary: "organization.updated"
      description: "Sent when a organization is updated.\n\n**Discord & Slack support:** Basic"
      operationId: "_endpointorganization_updated_post"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/WebhookOrganizationUpdatedPayload"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "benefit.created":
    post:
      summary: "benefit.created"
      description: "Sent when a new benefit is created.\n\n**Discord & Slack support:** Basic"
      operationId: "_endpointbenefit_created_post"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/WebhookBenefitCreatedPayload"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "benefit.updated":
    post:
      summary: "benefit.updated"
      description: "Sent when a benefit is updated.\n\n**Discord & Slack support:** Basic"
      operationId: "_endpointbenefit_updated_post"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/WebhookBenefitUpdatedPayload"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "benefit_grant.created":
    post:
      summary: "benefit_grant.created"
      description: "Sent when a new benefit grant is created.\n\n**Discord & Slack support:** Basic"
      operationId: "_endpointbenefit_grant_created_post"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/WebhookBenefitGrantCreatedPayload"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "benefit_grant.updated":
    post:
      summary: "benefit_grant.updated"
      description: "Sent when a new benefit grant is updated.\n\n**Discord & Slack support:** Basic"
      operationId: "_endpointbenefit_grant_updated_post"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/WebhookBenefitGrantUpdatedPayload"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "benefit_grant.revoked":
    post:
      summary: "benefit_grant.revoked"
      description: "Sent when a new benefit grant is revoked.\n\n**Discord & Slack support:** Basic"
      operationId: "_endpointbenefit_grant_revoked_post"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/WebhookBenefitGrantRevokedPayload"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
